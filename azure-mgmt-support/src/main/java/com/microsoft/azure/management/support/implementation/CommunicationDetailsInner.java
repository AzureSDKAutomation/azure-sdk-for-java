/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.support.implementation;

import com.microsoft.azure.management.support.CommunicationType;
import com.microsoft.azure.management.support.CommunicationDirection;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * Object that represents Communication resource.
 */
@JsonFlatten
public class CommunicationDetailsInner {
    /**
     * Id of the resource.
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /**
     * Name of the resource.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /**
     * Type of the resource 'Microsoft.Support/communications.
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /**
     * Communication type. Possible values include: 'web', 'phone'.
     */
    @JsonProperty(value = "properties.communicationType", required = true)
    private CommunicationType communicationType;

    /**
     * Direction of communication. Possible values include: 'inbound',
     * 'outbound'.
     */
    @JsonProperty(value = "properties.communicationDirection", required = true)
    private CommunicationDirection communicationDirection;

    /**
     * Sender of the communication.
     */
    @JsonProperty(value = "properties.sender")
    private String sender;

    /**
     * Subject of the communication.
     */
    @JsonProperty(value = "properties.subject")
    private String subject;

    /**
     * Body of the communication.
     */
    @JsonProperty(value = "properties.body")
    private String body;

    /**
     * Time in UTC (ISO 8601 format) when the communication was created.
     */
    @JsonProperty(value = "properties.createdDate")
    private DateTime createdDate;

    /**
     * Get id of the resource.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Get name of the resource.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Get type of the resource 'Microsoft.Support/communications.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

    /**
     * Get communication type. Possible values include: 'web', 'phone'.
     *
     * @return the communicationType value
     */
    public CommunicationType communicationType() {
        return this.communicationType;
    }

    /**
     * Set communication type. Possible values include: 'web', 'phone'.
     *
     * @param communicationType the communicationType value to set
     * @return the CommunicationDetailsInner object itself.
     */
    public CommunicationDetailsInner withCommunicationType(CommunicationType communicationType) {
        this.communicationType = communicationType;
        return this;
    }

    /**
     * Get direction of communication. Possible values include: 'inbound', 'outbound'.
     *
     * @return the communicationDirection value
     */
    public CommunicationDirection communicationDirection() {
        return this.communicationDirection;
    }

    /**
     * Set direction of communication. Possible values include: 'inbound', 'outbound'.
     *
     * @param communicationDirection the communicationDirection value to set
     * @return the CommunicationDetailsInner object itself.
     */
    public CommunicationDetailsInner withCommunicationDirection(CommunicationDirection communicationDirection) {
        this.communicationDirection = communicationDirection;
        return this;
    }

    /**
     * Get sender of the communication.
     *
     * @return the sender value
     */
    public String sender() {
        return this.sender;
    }

    /**
     * Set sender of the communication.
     *
     * @param sender the sender value to set
     * @return the CommunicationDetailsInner object itself.
     */
    public CommunicationDetailsInner withSender(String sender) {
        this.sender = sender;
        return this;
    }

    /**
     * Get subject of the communication.
     *
     * @return the subject value
     */
    public String subject() {
        return this.subject;
    }

    /**
     * Set subject of the communication.
     *
     * @param subject the subject value to set
     * @return the CommunicationDetailsInner object itself.
     */
    public CommunicationDetailsInner withSubject(String subject) {
        this.subject = subject;
        return this;
    }

    /**
     * Get body of the communication.
     *
     * @return the body value
     */
    public String body() {
        return this.body;
    }

    /**
     * Set body of the communication.
     *
     * @param body the body value to set
     * @return the CommunicationDetailsInner object itself.
     */
    public CommunicationDetailsInner withBody(String body) {
        this.body = body;
        return this;
    }

    /**
     * Get time in UTC (ISO 8601 format) when the communication was created.
     *
     * @return the createdDate value
     */
    public DateTime createdDate() {
        return this.createdDate;
    }

    /**
     * Set time in UTC (ISO 8601 format) when the communication was created.
     *
     * @param createdDate the createdDate value to set
     * @return the CommunicationDetailsInner object itself.
     */
    public CommunicationDetailsInner withCreatedDate(DateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }

}
