/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.support;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * Describes the payload for creating a support ticket. Customers can create
 * tickets for issues relating to Billing, Subscription Management, Service and
 * subscription limits(quotas) and Technical as determined by service id in the
 * request payload.
 */
@JsonFlatten
public class CreateSupportTicket {
    /**
     * Id of the resource.
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /**
     * Name of the resource.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /**
     * Type of the resource 'Microsoft.Support/supportTickets.
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /**
     * Azure service for which the support ticket will be created.
     */
    @JsonProperty(value = "properties.serviceId", required = true)
    private String serviceId;

    /**
     * Title of the support ticket.
     */
    @JsonProperty(value = "properties.title", required = true)
    private String title;

    /**
     * Description of the support ticket.
     */
    @JsonProperty(value = "properties.description", required = true)
    private String description;

    /**
     * Time in UTC (ISO 8601 format) when the problem started.
     */
    @JsonProperty(value = "properties.problemStartTime")
    private DateTime problemStartTime;

    /**
     * Problem classification id associated with the support ticket. This
     * indicates the problem or the issue that the ticket is being opened for.
     */
    @JsonProperty(value = "properties.problemClassificationId", required = true)
    private String problemClassificationId;

    /**
     * The severity associated with the support ticket. Possible values
     * include: 'minimal', 'moderate', 'critical'.
     */
    @JsonProperty(value = "properties.severity", required = true)
    private SeverityLevel severity;

    /**
     * Indicates if a 24x7 response is requested by the support ticket creator.
     */
    @JsonProperty(value = "properties.require24X7Response")
    private Boolean require24X7Response;

    /**
     * User contact details associated with the support ticket.
     */
    @JsonProperty(value = "properties.contactDetails", required = true)
    private ContactProfile contactDetails;

    /**
     * Additional ticket details associated with a technical support ticket
     * request.
     */
    @JsonProperty(value = "properties.technicalTicketDetails")
    private TechnicalTicketDetails technicalTicketDetails;

    /**
     * Additional ticket details associated with a quota support ticket
     * request.
     */
    @JsonProperty(value = "properties.quotaTicketDetails")
    private QuotaTicketDetails quotaTicketDetails;

    /**
     * Get id of the resource.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Get name of the resource.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Get type of the resource 'Microsoft.Support/supportTickets.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

    /**
     * Get azure service for which the support ticket will be created.
     *
     * @return the serviceId value
     */
    public String serviceId() {
        return this.serviceId;
    }

    /**
     * Set azure service for which the support ticket will be created.
     *
     * @param serviceId the serviceId value to set
     * @return the CreateSupportTicket object itself.
     */
    public CreateSupportTicket withServiceId(String serviceId) {
        this.serviceId = serviceId;
        return this;
    }

    /**
     * Get title of the support ticket.
     *
     * @return the title value
     */
    public String title() {
        return this.title;
    }

    /**
     * Set title of the support ticket.
     *
     * @param title the title value to set
     * @return the CreateSupportTicket object itself.
     */
    public CreateSupportTicket withTitle(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get description of the support ticket.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Set description of the support ticket.
     *
     * @param description the description value to set
     * @return the CreateSupportTicket object itself.
     */
    public CreateSupportTicket withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get time in UTC (ISO 8601 format) when the problem started.
     *
     * @return the problemStartTime value
     */
    public DateTime problemStartTime() {
        return this.problemStartTime;
    }

    /**
     * Set time in UTC (ISO 8601 format) when the problem started.
     *
     * @param problemStartTime the problemStartTime value to set
     * @return the CreateSupportTicket object itself.
     */
    public CreateSupportTicket withProblemStartTime(DateTime problemStartTime) {
        this.problemStartTime = problemStartTime;
        return this;
    }

    /**
     * Get problem classification id associated with the support ticket. This indicates the problem or the issue that the ticket is being opened for.
     *
     * @return the problemClassificationId value
     */
    public String problemClassificationId() {
        return this.problemClassificationId;
    }

    /**
     * Set problem classification id associated with the support ticket. This indicates the problem or the issue that the ticket is being opened for.
     *
     * @param problemClassificationId the problemClassificationId value to set
     * @return the CreateSupportTicket object itself.
     */
    public CreateSupportTicket withProblemClassificationId(String problemClassificationId) {
        this.problemClassificationId = problemClassificationId;
        return this;
    }

    /**
     * Get the severity associated with the support ticket. Possible values include: 'minimal', 'moderate', 'critical'.
     *
     * @return the severity value
     */
    public SeverityLevel severity() {
        return this.severity;
    }

    /**
     * Set the severity associated with the support ticket. Possible values include: 'minimal', 'moderate', 'critical'.
     *
     * @param severity the severity value to set
     * @return the CreateSupportTicket object itself.
     */
    public CreateSupportTicket withSeverity(SeverityLevel severity) {
        this.severity = severity;
        return this;
    }

    /**
     * Get indicates if a 24x7 response is requested by the support ticket creator.
     *
     * @return the require24X7Response value
     */
    public Boolean require24X7Response() {
        return this.require24X7Response;
    }

    /**
     * Set indicates if a 24x7 response is requested by the support ticket creator.
     *
     * @param require24X7Response the require24X7Response value to set
     * @return the CreateSupportTicket object itself.
     */
    public CreateSupportTicket withRequire24X7Response(Boolean require24X7Response) {
        this.require24X7Response = require24X7Response;
        return this;
    }

    /**
     * Get user contact details associated with the support ticket.
     *
     * @return the contactDetails value
     */
    public ContactProfile contactDetails() {
        return this.contactDetails;
    }

    /**
     * Set user contact details associated with the support ticket.
     *
     * @param contactDetails the contactDetails value to set
     * @return the CreateSupportTicket object itself.
     */
    public CreateSupportTicket withContactDetails(ContactProfile contactDetails) {
        this.contactDetails = contactDetails;
        return this;
    }

    /**
     * Get additional ticket details associated with a technical support ticket request.
     *
     * @return the technicalTicketDetails value
     */
    public TechnicalTicketDetails technicalTicketDetails() {
        return this.technicalTicketDetails;
    }

    /**
     * Set additional ticket details associated with a technical support ticket request.
     *
     * @param technicalTicketDetails the technicalTicketDetails value to set
     * @return the CreateSupportTicket object itself.
     */
    public CreateSupportTicket withTechnicalTicketDetails(TechnicalTicketDetails technicalTicketDetails) {
        this.technicalTicketDetails = technicalTicketDetails;
        return this;
    }

    /**
     * Get additional ticket details associated with a quota support ticket request.
     *
     * @return the quotaTicketDetails value
     */
    public QuotaTicketDetails quotaTicketDetails() {
        return this.quotaTicketDetails;
    }

    /**
     * Set additional ticket details associated with a quota support ticket request.
     *
     * @param quotaTicketDetails the quotaTicketDetails value to set
     * @return the CreateSupportTicket object itself.
     */
    public CreateSupportTicket withQuotaTicketDetails(QuotaTicketDetails quotaTicketDetails) {
        this.quotaTicketDetails = quotaTicketDetails;
        return this;
    }

}
