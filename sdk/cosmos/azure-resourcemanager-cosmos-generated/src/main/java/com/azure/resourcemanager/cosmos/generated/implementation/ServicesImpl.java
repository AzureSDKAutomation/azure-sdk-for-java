// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.cosmos.generated.fluent.ServicesClient;
import com.azure.resourcemanager.cosmos.generated.fluent.models.ServiceResourceInner;
import com.azure.resourcemanager.cosmos.generated.models.ServiceResource;
import com.azure.resourcemanager.cosmos.generated.models.Services;
import com.azure.resourcemanager.cosmos.generated.models.ServicesCreateUpdateParameters;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ServicesImpl implements Services {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ServicesImpl.class);

    private final ServicesClient innerClient;

    private final com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager;

    public ServicesImpl(
        ServicesClient innerClient, com.azure.resourcemanager.cosmos.generated.CosmosDBManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public ServiceResource create(
        String resourceGroupName,
        String accountName,
        String serviceName,
        ServicesCreateUpdateParameters servicesCreateUpdateParameter) {
        ServiceResourceInner inner =
            this.serviceClient().create(resourceGroupName, accountName, serviceName, servicesCreateUpdateParameter);
        if (inner != null) {
            return new ServiceResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public ServiceResource create(
        String resourceGroupName,
        String accountName,
        String serviceName,
        ServicesCreateUpdateParameters servicesCreateUpdateParameter,
        Context context) {
        ServiceResourceInner inner =
            this
                .serviceClient()
                .create(resourceGroupName, accountName, serviceName, servicesCreateUpdateParameter, context);
        if (inner != null) {
            return new ServiceResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public ServiceResource get(String resourceGroupName, String accountName, String serviceName) {
        ServiceResourceInner inner = this.serviceClient().get(resourceGroupName, accountName, serviceName);
        if (inner != null) {
            return new ServiceResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ServiceResource> getWithResponse(
        String resourceGroupName, String accountName, String serviceName, Context context) {
        Response<ServiceResourceInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, accountName, serviceName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ServiceResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void delete(String resourceGroupName, String accountName, String serviceName) {
        this.serviceClient().delete(resourceGroupName, accountName, serviceName);
    }

    public void delete(String resourceGroupName, String accountName, String serviceName, Context context) {
        this.serviceClient().delete(resourceGroupName, accountName, serviceName, context);
    }

    private ServicesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.cosmos.generated.CosmosDBManager manager() {
        return this.serviceManager;
    }
}
