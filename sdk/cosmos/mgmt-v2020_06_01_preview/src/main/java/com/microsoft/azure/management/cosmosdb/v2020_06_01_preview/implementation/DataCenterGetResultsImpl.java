/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.cosmosdb.v2020_06_01_preview.implementation;

import com.microsoft.azure.management.cosmosdb.v2020_06_01_preview.DataCenterGetResults;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.cosmosdb.v2020_06_01_preview.DataCenterCreateUpdateParameters;
import com.microsoft.azure.management.cosmosdb.v2020_06_01_preview.DataCenterGetResultsPropertiesResource;
import java.util.Map;
import com.microsoft.azure.management.cosmosdb.v2020_06_01_preview.ManagedServiceIdentity;
import rx.functions.Func1;

class DataCenterGetResultsImpl extends CreatableUpdatableImpl<DataCenterGetResults, DataCenterGetResultsInner, DataCenterGetResultsImpl> implements DataCenterGetResults, DataCenterGetResults.Definition, DataCenterGetResults.Update {
    private final CosmosDBManager manager;
    private String resourceGroupName;
    private String clusterName;
    private String dataCenterName;
    private DataCenterCreateUpdateParameters createOrUpdateParameter;

    DataCenterGetResultsImpl(String name, CosmosDBManager manager) {
        super(name, new DataCenterGetResultsInner());
        this.manager = manager;
        // Set resource name
        this.dataCenterName = name;
        //
        this.createOrUpdateParameter = new DataCenterCreateUpdateParameters();
    }

    DataCenterGetResultsImpl(DataCenterGetResultsInner inner, CosmosDBManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.dataCenterName = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.clusterName = IdParsingUtils.getValueFromIdByName(inner.id(), "cassandraClusters");
        this.dataCenterName = IdParsingUtils.getValueFromIdByName(inner.id(), "dataCenters");
        //
        this.createOrUpdateParameter = new DataCenterCreateUpdateParameters();
    }

    @Override
    public CosmosDBManager manager() {
        return this.manager;
    }

    @Override
    public Observable<DataCenterGetResults> createResourceAsync() {
        CassandraDataCentersInner client = this.manager().inner().cassandraDataCenters();
        return client.createUpdateAsync(this.resourceGroupName, this.clusterName, this.dataCenterName, this.createOrUpdateParameter)
            .map(new Func1<DataCenterGetResultsInner, DataCenterGetResultsInner>() {
               @Override
               public DataCenterGetResultsInner call(DataCenterGetResultsInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<DataCenterGetResults> updateResourceAsync() {
        CassandraDataCentersInner client = this.manager().inner().cassandraDataCenters();
        return client.createUpdateAsync(this.resourceGroupName, this.clusterName, this.dataCenterName, this.createOrUpdateParameter)
            .map(new Func1<DataCenterGetResultsInner, DataCenterGetResultsInner>() {
               @Override
               public DataCenterGetResultsInner call(DataCenterGetResultsInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<DataCenterGetResultsInner> getInnerAsync() {
        CassandraDataCentersInner client = this.manager().inner().cassandraDataCenters();
        return client.getAsync(this.resourceGroupName, this.clusterName, this.dataCenterName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.createOrUpdateParameter = new DataCenterCreateUpdateParameters();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public ManagedServiceIdentity identity() {
        return this.inner().identity();
    }

    @Override
    public String location() {
        return this.inner().location();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public DataCenterGetResultsPropertiesResource resource() {
        return this.inner().resource();
    }

    @Override
    public Map<String, String> tags() {
        return this.inner().getTags();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public DataCenterGetResultsImpl withExistingCassandraCluster(String resourceGroupName, String clusterName) {
        this.resourceGroupName = resourceGroupName;
        this.clusterName = clusterName;
        return this;
    }

    @Override
    public DataCenterGetResultsImpl withLocation(String location) {
        this.createOrUpdateParameter.withLocation(location);
        return this;
    }

    @Override
    public DataCenterGetResultsImpl withCapacity(Integer capacity) {
        this.createOrUpdateParameter.withCapacity(capacity);
        return this;
    }

    @Override
    public DataCenterGetResultsImpl withDataCenterCreateUpdateParametersLocation(String dataCenterCreateUpdateParametersLocation) {
        this.createOrUpdateParameter.withDataCenterCreateUpdateParametersLocation(dataCenterCreateUpdateParametersLocation);
        return this;
    }

    @Override
    public DataCenterGetResultsImpl withDelegatedSubnetId(String delegatedSubnetId) {
        this.createOrUpdateParameter.withDelegatedSubnetId(delegatedSubnetId);
        return this;
    }

    @Override
    public DataCenterGetResultsImpl withIdentity(ManagedServiceIdentity identity) {
        this.createOrUpdateParameter.withIdentity(identity);
        return this;
    }

    @Override
    public DataCenterGetResultsImpl withTags(Map<String, String> tags) {
        this.createOrUpdateParameter.withTags(tags);
        return this;
    }

}
