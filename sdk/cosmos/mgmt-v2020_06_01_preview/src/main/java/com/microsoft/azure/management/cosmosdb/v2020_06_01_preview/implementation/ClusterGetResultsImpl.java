/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.cosmosdb.v2020_06_01_preview.implementation;

import com.microsoft.azure.arm.resources.models.implementation.GroupableResourceCoreImpl;
import com.microsoft.azure.management.cosmosdb.v2020_06_01_preview.ClusterGetResults;
import rx.Observable;
import com.microsoft.azure.management.cosmosdb.v2020_06_01_preview.ClusterCreateUpdateParameters;
import java.util.List;
import com.microsoft.azure.management.cosmosdb.v2020_06_01_preview.ClusterGetResultsPropertiesResource;
import com.microsoft.azure.management.cosmosdb.v2020_06_01_preview.ManagedServiceIdentity;
import rx.functions.Func1;

class ClusterGetResultsImpl extends GroupableResourceCoreImpl<ClusterGetResults, ClusterGetResultsInner, ClusterGetResultsImpl, CosmosDBManager> implements ClusterGetResults, ClusterGetResults.Definition, ClusterGetResults.Update {
    private ClusterCreateUpdateParameters createOrUpdateParameter;
    ClusterGetResultsImpl(String name, ClusterGetResultsInner inner, CosmosDBManager manager) {
        super(name, inner, manager);
        this.createOrUpdateParameter = new ClusterCreateUpdateParameters();
    }

    @Override
    public Observable<ClusterGetResults> createResourceAsync() {
        CassandraClustersInner client = this.manager().inner().cassandraClusters();
        this.createOrUpdateParameter.withLocation(inner().location());
        this.createOrUpdateParameter.withTags(inner().getTags());
        return client.createUpdateAsync(this.resourceGroupName(), this.name(), this.createOrUpdateParameter)
            .map(new Func1<ClusterGetResultsInner, ClusterGetResultsInner>() {
               @Override
               public ClusterGetResultsInner call(ClusterGetResultsInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<ClusterGetResults> updateResourceAsync() {
        CassandraClustersInner client = this.manager().inner().cassandraClusters();
        return client.createUpdateAsync(this.resourceGroupName(), this.name(), this.createOrUpdateParameter)
            .map(new Func1<ClusterGetResultsInner, ClusterGetResultsInner>() {
               @Override
               public ClusterGetResultsInner call(ClusterGetResultsInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<ClusterGetResultsInner> getInnerAsync() {
        CassandraClustersInner client = this.manager().inner().cassandraClusters();
        return client.getByResourceGroupAsync(this.resourceGroupName(), this.name());
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.createOrUpdateParameter = new ClusterCreateUpdateParameters();
    }

    @Override
    public ManagedServiceIdentity identity() {
        return this.inner().identity();
    }

    @Override
    public ClusterGetResultsPropertiesResource resource() {
        return this.inner().resource();
    }

    @Override
    public ClusterGetResultsImpl withCassandraVersion(String cassandraVersion) {
        this.createOrUpdateParameter.withCassandraVersion(cassandraVersion);
        return this;
    }

    @Override
    public ClusterGetResultsImpl withDelegatedManagementSubnetId(String delegatedManagementSubnetId) {
        this.createOrUpdateParameter.withDelegatedManagementSubnetId(delegatedManagementSubnetId);
        return this;
    }

    @Override
    public ClusterGetResultsImpl withExternalSeedNodes(List<String> externalSeedNodes) {
        this.createOrUpdateParameter.withExternalSeedNodes(externalSeedNodes);
        return this;
    }

    @Override
    public ClusterGetResultsImpl withIdentity(ManagedServiceIdentity identity) {
        this.createOrUpdateParameter.withIdentity(identity);
        return this;
    }

    @Override
    public ClusterGetResultsImpl withInitialCassandraAdminPassword(String initialCassandraAdminPassword) {
        this.createOrUpdateParameter.withInitialCassandraAdminPassword(initialCassandraAdminPassword);
        return this;
    }

    @Override
    public ClusterGetResultsImpl withOverrideClusterName(String overrideClusterName) {
        this.createOrUpdateParameter.withOverrideClusterName(overrideClusterName);
        return this;
    }

    @Override
    public ClusterGetResultsImpl withTrustedCertificates(List<String> trustedCertificates) {
        this.createOrUpdateParameter.withTrustedCertificates(trustedCertificates);
        return this;
    }

    @Override
    public ClusterGetResultsImpl withTrustedNodeToNodeCertificates(List<String> trustedNodeToNodeCertificates) {
        this.createOrUpdateParameter.withTrustedNodeToNodeCertificates(trustedNodeToNodeCertificates);
        return this;
    }

}
