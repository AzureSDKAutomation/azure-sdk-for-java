/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.cosmosdb.v2020_06_01_preview;

import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.cosmosdb.v2020_06_01_preview.implementation.SqlxsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing Sqlxs.
 */
public interface Sqlxs extends HasInner<SqlxsInner> {
    /**
     * Gets the sqlx service for a Cosmos DB account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Cosmos DB database account name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ServiceGetResults> getAsync(String resourceGroupName, String accountName);

    /**
     * Creates the sqlx service for a Cosmos DB account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Cosmos DB database account name.
     * @param createUpdateServiceResourceParameters The sqlx service to create for the current database account.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ServiceGetResults> createOrUpdateAsync(String resourceGroupName, String accountName, ServiceResourceCreateUpdateParameters createUpdateServiceResourceParameters);

    /**
     * Deletes the sqlx Service for a Cosmos DB account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName Cosmos DB database account name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String accountName);

}
