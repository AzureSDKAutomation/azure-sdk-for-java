/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.cosmosdb.v2020_06_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.cosmosdb.v2020_06_01_preview.implementation.DataCenterGetResultsInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.cosmosdb.v2020_06_01_preview.implementation.CosmosDBManager;
import java.util.Map;

/**
 * Type representing DataCenterGetResults.
 */
public interface DataCenterGetResults extends HasInner<DataCenterGetResultsInner>, Indexable, Refreshable<DataCenterGetResults>, Updatable<DataCenterGetResults.Update>, HasManager<CosmosDBManager> {
    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the identity value.
     */
    ManagedServiceIdentity identity();

    /**
     * @return the location value.
     */
    String location();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the resource value.
     */
    DataCenterGetResultsPropertiesResource resource();

    /**
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the DataCenterGetResults definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithCassandraCluster, DefinitionStages.WithLocation, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of DataCenterGetResults definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a DataCenterGetResults definition.
         */
        interface Blank extends WithCassandraCluster {
        }

        /**
         * The stage of the datacentergetresults definition allowing to specify CassandraCluster.
         */
        interface WithCassandraCluster {
           /**
            * Specifies resourceGroupName, clusterName.
            * @param resourceGroupName The name of the resource group. The name is case insensitive
            * @param clusterName Managed Cassandra cluster name
            * @return the next definition stage
            */
            WithLocation withExistingCassandraCluster(String resourceGroupName, String clusterName);
        }

        /**
         * The stage of the datacentergetresults definition allowing to specify Location.
         */
        interface WithLocation {
           /**
            * Specifies location.
            * @param location the location parameter value
            * @return the next definition stage
            */
            WithCreate withLocation(String location);
        }

        /**
         * The stage of the datacentergetresults definition allowing to specify Capacity.
         */
        interface WithCapacity {
            /**
             * Specifies capacity.
             * @param capacity The number of nodes the data center should have
             * @return the next definition stage
             */
            WithCreate withCapacity(Integer capacity);
        }

        /**
         * The stage of the datacentergetresults definition allowing to specify DataCenterCreateUpdateParametersLocation.
         */
        interface WithDataCenterCreateUpdateParametersLocation {
            /**
             * Specifies dataCenterCreateUpdateParametersLocation.
             * @param dataCenterCreateUpdateParametersLocation The region this data center is in (determined by delegatedSubnetId)
             * @return the next definition stage
             */
            WithCreate withDataCenterCreateUpdateParametersLocation(String dataCenterCreateUpdateParametersLocation);
        }

        /**
         * The stage of the datacentergetresults definition allowing to specify DelegatedSubnetId.
         */
        interface WithDelegatedSubnetId {
            /**
             * Specifies delegatedSubnetId.
             * @param delegatedSubnetId Azure resource ID of a subnet this should connect to. This will also determine the data center's region
             * @return the next definition stage
             */
            WithCreate withDelegatedSubnetId(String delegatedSubnetId);
        }

        /**
         * The stage of the datacentergetresults definition allowing to specify Identity.
         */
        interface WithIdentity {
            /**
             * Specifies identity.
             * @param identity the identity parameter value
             * @return the next definition stage
             */
            WithCreate withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the datacentergetresults definition allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags the tags parameter value
             * @return the next definition stage
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<DataCenterGetResults>, DefinitionStages.WithCapacity, DefinitionStages.WithDataCenterCreateUpdateParametersLocation, DefinitionStages.WithDelegatedSubnetId, DefinitionStages.WithIdentity, DefinitionStages.WithTags {
        }
    }
    /**
     * The template for a DataCenterGetResults update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<DataCenterGetResults>, UpdateStages.WithCapacity, UpdateStages.WithDataCenterCreateUpdateParametersLocation, UpdateStages.WithDelegatedSubnetId, UpdateStages.WithIdentity, UpdateStages.WithTags {
    }

    /**
     * Grouping of DataCenterGetResults update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the datacentergetresults update allowing to specify Capacity.
         */
        interface WithCapacity {
            /**
             * Specifies capacity.
             * @param capacity The number of nodes the data center should have
             * @return the next update stage
             */
            Update withCapacity(Integer capacity);
        }

        /**
         * The stage of the datacentergetresults update allowing to specify DataCenterCreateUpdateParametersLocation.
         */
        interface WithDataCenterCreateUpdateParametersLocation {
            /**
             * Specifies dataCenterCreateUpdateParametersLocation.
             * @param dataCenterCreateUpdateParametersLocation The region this data center is in (determined by delegatedSubnetId)
             * @return the next update stage
             */
            Update withDataCenterCreateUpdateParametersLocation(String dataCenterCreateUpdateParametersLocation);
        }

        /**
         * The stage of the datacentergetresults update allowing to specify DelegatedSubnetId.
         */
        interface WithDelegatedSubnetId {
            /**
             * Specifies delegatedSubnetId.
             * @param delegatedSubnetId Azure resource ID of a subnet this should connect to. This will also determine the data center's region
             * @return the next update stage
             */
            Update withDelegatedSubnetId(String delegatedSubnetId);
        }

        /**
         * The stage of the datacentergetresults update allowing to specify Identity.
         */
        interface WithIdentity {
            /**
             * Specifies identity.
             * @param identity the identity parameter value
             * @return the next update stage
             */
            Update withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the datacentergetresults update allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags the tags parameter value
             * @return the next update stage
             */
            Update withTags(Map<String, String> tags);
        }

    }
}
