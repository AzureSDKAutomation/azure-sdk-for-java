/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.cosmosdb.v2020_06_01_preview;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * Parameters passed when creating or updating a managed Cassandra cluster.
 */
@JsonFlatten
public class ClusterCreateUpdateParameters extends ARMResourceProperties {
    /**
     * Resource ID of a subnet that this cluster's management service should
     * run in.
     */
    @JsonProperty(value = "properties.delegatedManagementSubnetId")
    private String delegatedManagementSubnetId;

    /**
     * Which version of Cassandra should this cluster converge to running.
     */
    @JsonProperty(value = "properties.cassandraVersion")
    private String cassandraVersion;

    /**
     * List of IP addresses of seed nodes in un-managed data centers.
     */
    @JsonProperty(value = "properties.externalSeedNodes")
    private List<String> externalSeedNodes;

    /**
     * Optional value to use for clusterName in cassandra.yaml. If omitted, use
     * the cluster's resource name.
     */
    @JsonProperty(value = "properties.overrideClusterName")
    private String overrideClusterName;

    /**
     * List of TLS certificates used to authorize clients connecting to the
     * cluster.
     */
    @JsonProperty(value = "properties.trustedCertificates")
    private List<String> trustedCertificates;

    /**
     * List of TLS certificates used to authorize gossip from unmanaged data
     * centers.
     */
    @JsonProperty(value = "properties.trustedNodeToNodeCertificates")
    private List<String> trustedNodeToNodeCertificates;

    /**
     * Password for clients connecting as admin to the cluster. May be changed
     * after cluster creation.
     */
    @JsonProperty(value = "properties.initialCassandraAdminPassword")
    private String initialCassandraAdminPassword;

    /**
     * Get resource ID of a subnet that this cluster's management service should run in.
     *
     * @return the delegatedManagementSubnetId value
     */
    public String delegatedManagementSubnetId() {
        return this.delegatedManagementSubnetId;
    }

    /**
     * Set resource ID of a subnet that this cluster's management service should run in.
     *
     * @param delegatedManagementSubnetId the delegatedManagementSubnetId value to set
     * @return the ClusterCreateUpdateParameters object itself.
     */
    public ClusterCreateUpdateParameters withDelegatedManagementSubnetId(String delegatedManagementSubnetId) {
        this.delegatedManagementSubnetId = delegatedManagementSubnetId;
        return this;
    }

    /**
     * Get which version of Cassandra should this cluster converge to running.
     *
     * @return the cassandraVersion value
     */
    public String cassandraVersion() {
        return this.cassandraVersion;
    }

    /**
     * Set which version of Cassandra should this cluster converge to running.
     *
     * @param cassandraVersion the cassandraVersion value to set
     * @return the ClusterCreateUpdateParameters object itself.
     */
    public ClusterCreateUpdateParameters withCassandraVersion(String cassandraVersion) {
        this.cassandraVersion = cassandraVersion;
        return this;
    }

    /**
     * Get list of IP addresses of seed nodes in un-managed data centers.
     *
     * @return the externalSeedNodes value
     */
    public List<String> externalSeedNodes() {
        return this.externalSeedNodes;
    }

    /**
     * Set list of IP addresses of seed nodes in un-managed data centers.
     *
     * @param externalSeedNodes the externalSeedNodes value to set
     * @return the ClusterCreateUpdateParameters object itself.
     */
    public ClusterCreateUpdateParameters withExternalSeedNodes(List<String> externalSeedNodes) {
        this.externalSeedNodes = externalSeedNodes;
        return this;
    }

    /**
     * Get optional value to use for clusterName in cassandra.yaml. If omitted, use the cluster's resource name.
     *
     * @return the overrideClusterName value
     */
    public String overrideClusterName() {
        return this.overrideClusterName;
    }

    /**
     * Set optional value to use for clusterName in cassandra.yaml. If omitted, use the cluster's resource name.
     *
     * @param overrideClusterName the overrideClusterName value to set
     * @return the ClusterCreateUpdateParameters object itself.
     */
    public ClusterCreateUpdateParameters withOverrideClusterName(String overrideClusterName) {
        this.overrideClusterName = overrideClusterName;
        return this;
    }

    /**
     * Get list of TLS certificates used to authorize clients connecting to the cluster.
     *
     * @return the trustedCertificates value
     */
    public List<String> trustedCertificates() {
        return this.trustedCertificates;
    }

    /**
     * Set list of TLS certificates used to authorize clients connecting to the cluster.
     *
     * @param trustedCertificates the trustedCertificates value to set
     * @return the ClusterCreateUpdateParameters object itself.
     */
    public ClusterCreateUpdateParameters withTrustedCertificates(List<String> trustedCertificates) {
        this.trustedCertificates = trustedCertificates;
        return this;
    }

    /**
     * Get list of TLS certificates used to authorize gossip from unmanaged data centers.
     *
     * @return the trustedNodeToNodeCertificates value
     */
    public List<String> trustedNodeToNodeCertificates() {
        return this.trustedNodeToNodeCertificates;
    }

    /**
     * Set list of TLS certificates used to authorize gossip from unmanaged data centers.
     *
     * @param trustedNodeToNodeCertificates the trustedNodeToNodeCertificates value to set
     * @return the ClusterCreateUpdateParameters object itself.
     */
    public ClusterCreateUpdateParameters withTrustedNodeToNodeCertificates(List<String> trustedNodeToNodeCertificates) {
        this.trustedNodeToNodeCertificates = trustedNodeToNodeCertificates;
        return this;
    }

    /**
     * Get password for clients connecting as admin to the cluster. May be changed after cluster creation.
     *
     * @return the initialCassandraAdminPassword value
     */
    public String initialCassandraAdminPassword() {
        return this.initialCassandraAdminPassword;
    }

    /**
     * Set password for clients connecting as admin to the cluster. May be changed after cluster creation.
     *
     * @param initialCassandraAdminPassword the initialCassandraAdminPassword value to set
     * @return the ClusterCreateUpdateParameters object itself.
     */
    public ClusterCreateUpdateParameters withInitialCassandraAdminPassword(String initialCassandraAdminPassword) {
        this.initialCassandraAdminPassword = initialCassandraAdminPassword;
        return this;
    }

}
