// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcemover.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Defines the resource type definition for resource mover. */
@Immutable
public final class ResourceTypeDefinitionForResourceMover {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ResourceTypeDefinitionForResourceMover.class);

    /*
     * Defines the resource type.
     */
    @JsonProperty(value = "resourceTypeName", access = JsonProperty.Access.WRITE_ONLY)
    private String resourceTypeName;

    /*
     * Gets or sets a value whether data sync is required for the resource
     * type.
     */
    @JsonProperty(value = "isDataSyncRequiredForResourceType", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isDataSyncRequiredForResourceType;

    /*
     * Defines the move paradigm for the resource type.
     */
    @JsonProperty(value = "moveParadigmForResourceType", access = JsonProperty.Access.WRITE_ONLY)
    private MoveParadigm moveParadigmForResourceType;

    /**
     * Get the resourceTypeName property: Defines the resource type.
     *
     * @return the resourceTypeName value.
     */
    public String resourceTypeName() {
        return this.resourceTypeName;
    }

    /**
     * Get the isDataSyncRequiredForResourceType property: Gets or sets a value whether data sync is required for the
     * resource type.
     *
     * @return the isDataSyncRequiredForResourceType value.
     */
    public Boolean isDataSyncRequiredForResourceType() {
        return this.isDataSyncRequiredForResourceType;
    }

    /**
     * Get the moveParadigmForResourceType property: Defines the move paradigm for the resource type.
     *
     * @return the moveParadigmForResourceType value.
     */
    public MoveParadigm moveParadigmForResourceType() {
        return this.moveParadigmForResourceType;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
