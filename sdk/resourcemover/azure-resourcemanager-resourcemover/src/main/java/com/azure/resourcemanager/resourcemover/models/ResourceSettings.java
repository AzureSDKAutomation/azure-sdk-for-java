// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcemover.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Gets or sets the resource settings. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "resourceType")
@JsonTypeName("ResourceSettings")
@Fluent
public final class ResourceSettings {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ResourceSettings.class);

    /*
     * Gets or sets the resource provider specific serialized resource
     * settings. Resource providers need to document the settings.
     */
    @JsonProperty(value = "serializedResourceSettings")
    private String serializedResourceSettings;

    /**
     * Get the serializedResourceSettings property: Gets or sets the resource provider specific serialized resource
     * settings. Resource providers need to document the settings.
     *
     * @return the serializedResourceSettings value.
     */
    public String serializedResourceSettings() {
        return this.serializedResourceSettings;
    }

    /**
     * Set the serializedResourceSettings property: Gets or sets the resource provider specific serialized resource
     * settings. Resource providers need to document the settings.
     *
     * @param serializedResourceSettings the serializedResourceSettings value to set.
     * @return the ResourceSettings object itself.
     */
    public ResourceSettings withSerializedResourceSettings(String serializedResourceSettings) {
        this.serializedResourceSettings = serializedResourceSettings;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
