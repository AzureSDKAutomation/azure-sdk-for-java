// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agfood.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Extension resource. */
@JsonFlatten
@Immutable
public class ExtensionInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ExtensionInner.class);

    /*
     * Metadata pertaining to creation and last modification of the resource.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * The ETag value to implement optimistic concurrency.
     */
    @JsonProperty(value = "eTag", access = JsonProperty.Access.WRITE_ONLY)
    private String etag;

    /*
     * Extension Id.
     */
    @JsonProperty(value = "properties.extensionId", access = JsonProperty.Access.WRITE_ONLY)
    private String extensionId;

    /*
     * Extension category. e.g. weather/sensor/satellite.
     */
    @JsonProperty(value = "properties.extensionCategory", access = JsonProperty.Access.WRITE_ONLY)
    private String extensionCategory;

    /*
     * Installed extension version.
     */
    @JsonProperty(value = "properties.installedExtensionVersion", access = JsonProperty.Access.WRITE_ONLY)
    private String installedExtensionVersion;

    /*
     * Extension auth link.
     */
    @JsonProperty(value = "properties.extensionAuthLink", access = JsonProperty.Access.WRITE_ONLY)
    private String extensionAuthLink;

    /*
     * Extension api docs link.
     */
    @JsonProperty(value = "properties.extensionApiDocsLink", access = JsonProperty.Access.WRITE_ONLY)
    private String extensionApiDocsLink;

    /**
     * Get the systemData property: Metadata pertaining to creation and last modification of the resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the etag property: The ETag value to implement optimistic concurrency.
     *
     * @return the etag value.
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Get the extensionId property: Extension Id.
     *
     * @return the extensionId value.
     */
    public String extensionId() {
        return this.extensionId;
    }

    /**
     * Get the extensionCategory property: Extension category. e.g. weather/sensor/satellite.
     *
     * @return the extensionCategory value.
     */
    public String extensionCategory() {
        return this.extensionCategory;
    }

    /**
     * Get the installedExtensionVersion property: Installed extension version.
     *
     * @return the installedExtensionVersion value.
     */
    public String installedExtensionVersion() {
        return this.installedExtensionVersion;
    }

    /**
     * Get the extensionAuthLink property: Extension auth link.
     *
     * @return the extensionAuthLink value.
     */
    public String extensionAuthLink() {
        return this.extensionAuthLink;
    }

    /**
     * Get the extensionApiDocsLink property: Extension api docs link.
     *
     * @return the extensionApiDocsLink value.
     */
    public String extensionApiDocsLink() {
        return this.extensionApiDocsLink;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
