// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.datalakestore.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The OperationMetaMetricSpecification model. */
@Immutable
public final class OperationMetaMetricSpecification {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(OperationMetaMetricSpecification.class);

    /*
     * name of specification
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * display Name
     */
    @JsonProperty(value = "displayName", access = JsonProperty.Access.WRITE_ONLY)
    private String displayName;

    /*
     * display Description
     */
    @JsonProperty(value = "displayDescription", access = JsonProperty.Access.WRITE_ONLY)
    private String displayDescription;

    /*
     * unit of specification
     */
    @JsonProperty(value = "unit", access = JsonProperty.Access.WRITE_ONLY)
    private String unit;

    /*
     * aggregation Type
     */
    @JsonProperty(value = "aggregationType", access = JsonProperty.Access.WRITE_ONLY)
    private String aggregationType;

    /*
     * Whether supports InstanceLevel Aggregation
     */
    @JsonProperty(value = "supportsInstanceLevelAggregation", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean supportsInstanceLevelAggregation;

    /*
     * enable Regional MdmAccount
     */
    @JsonProperty(value = "enableRegionalMdmAccount", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean enableRegionalMdmAccount;

    /*
     * source MdmAccount
     */
    @JsonProperty(value = "sourceMdmAccount", access = JsonProperty.Access.WRITE_ONLY)
    private String sourceMdmAccount;

    /*
     * source MdmNamespace
     */
    @JsonProperty(value = "sourceMdmNamespace", access = JsonProperty.Access.WRITE_ONLY)
    private String sourceMdmNamespace;

    /*
     * Operation Metric Availabilities Specification
     */
    @JsonProperty(value = "availabilities", access = JsonProperty.Access.WRITE_ONLY)
    private List<OperationMetaMetricAvailabilitiesSpecification> availabilities;

    /*
     * metric Filter Pattern
     */
    @JsonProperty(value = "metricFilterPattern", access = JsonProperty.Access.WRITE_ONLY)
    private String metricFilterPattern;

    /**
     * Get the name property: name of specification.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the displayName property: display Name.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Get the displayDescription property: display Description.
     *
     * @return the displayDescription value.
     */
    public String displayDescription() {
        return this.displayDescription;
    }

    /**
     * Get the unit property: unit of specification.
     *
     * @return the unit value.
     */
    public String unit() {
        return this.unit;
    }

    /**
     * Get the aggregationType property: aggregation Type.
     *
     * @return the aggregationType value.
     */
    public String aggregationType() {
        return this.aggregationType;
    }

    /**
     * Get the supportsInstanceLevelAggregation property: Whether supports InstanceLevel Aggregation.
     *
     * @return the supportsInstanceLevelAggregation value.
     */
    public Boolean supportsInstanceLevelAggregation() {
        return this.supportsInstanceLevelAggregation;
    }

    /**
     * Get the enableRegionalMdmAccount property: enable Regional MdmAccount.
     *
     * @return the enableRegionalMdmAccount value.
     */
    public Boolean enableRegionalMdmAccount() {
        return this.enableRegionalMdmAccount;
    }

    /**
     * Get the sourceMdmAccount property: source MdmAccount.
     *
     * @return the sourceMdmAccount value.
     */
    public String sourceMdmAccount() {
        return this.sourceMdmAccount;
    }

    /**
     * Get the sourceMdmNamespace property: source MdmNamespace.
     *
     * @return the sourceMdmNamespace value.
     */
    public String sourceMdmNamespace() {
        return this.sourceMdmNamespace;
    }

    /**
     * Get the availabilities property: Operation Metric Availabilities Specification.
     *
     * @return the availabilities value.
     */
    public List<OperationMetaMetricAvailabilitiesSpecification> availabilities() {
        return this.availabilities;
    }

    /**
     * Get the metricFilterPattern property: metric Filter Pattern.
     *
     * @return the metricFilterPattern value.
     */
    public String metricFilterPattern() {
        return this.metricFilterPattern;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (availabilities() != null) {
            availabilities().forEach(e -> e.validate());
        }
    }
}
