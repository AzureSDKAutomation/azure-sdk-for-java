/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.bing.v2020_06_10_preview;

import rx.Observable;
import com.microsoft.azure.management.bing.v2020_06_10_preview.BingAccount;
import rx.Completable;

/**
 * Type representing BingAccounts.
 */
public interface BingAccounts {
    /**
     * Begins definition for a new Account resource.
     * @param name resource name.
     * @return the first stage of the new Account definition.
     */
    BingAccount.DefinitionStages.Blank defineAccount(String name);

    /**
     * Returns a Bing account specified by the parameters.
     *
     * @param resourceGroupName resource group name
     * @param name resource name
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BingAccount> getByResourceGroupAsync(String resourceGroupName, String name);

    /**
     * Returns all the resources of a particular type belonging to a resource group.
     *
     * @param resourceGroupName resource group name
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BingAccount> listByResourceGroupAsync(String resourceGroupName);

    /**
     * Returns all the resources of a particular type belonging to a subscription.
     *
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BingAccount> listAsync();

    /**
     * Deletes a Bing account from the resource group.
     *
     * @param resourceGroupName resource group name
     * @param name resource name
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String name);

    /**
     * Lists the account keys for the specified Bing account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Bing account.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BingAccountKeys> listKeysAsync(String resourceGroupName, String accountName);

    /**
     * Regenerates the specified account key for the specified Bing account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Bing account.
     * @param keyName key name to generate (Key1|Key2). Possible values include: 'Key1', 'Key2'
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BingAccountKeys> regenerateKeyAsync(String resourceGroupName, String accountName, KeyName keyName);

    /**
     * List available SKUs for the requested Bing account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Bing account.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BingAccountEnumerateSkusResult> listSkusAsync(String resourceGroupName, String accountName);

    /**
     * Get usages for the requested Bing account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of Bing account.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<UsagesResult> getUsagesAsync(String resourceGroupName, String accountName);

}
