/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.bing.v2020_06_10;

import com.microsoft.azure.arm.collection.SupportsCreating;
import com.microsoft.azure.arm.resources.collection.SupportsDeletingByResourceGroup;
import com.microsoft.azure.arm.resources.collection.SupportsBatchDeletion;
import com.microsoft.azure.arm.resources.collection.SupportsGettingByResourceGroup;
import rx.Observable;
import com.microsoft.azure.arm.resources.collection.SupportsListingByResourceGroup;
import com.microsoft.azure.arm.collection.SupportsListing;
import com.microsoft.azure.management.bing.v2020_06_10.implementation.AccountsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing Accounts.
 */
public interface Accounts extends SupportsCreating<BingAccount.DefinitionStages.Blank>, SupportsDeletingByResourceGroup, SupportsBatchDeletion, SupportsGettingByResourceGroup<BingAccount>, SupportsListingByResourceGroup<BingAccount>, SupportsListing<BingAccount>, HasInner<AccountsInner> {
    /**
     * Gets the keys to access the Bing APIs for the specified Bing account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the Bing account.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BingAccountKeys> listKeysAsync(String resourceGroupName, String accountName);

    /**
     * Regenerates the specified account key for the specified Bing account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the Bing account.
     * @param keyName key name to generate (Key1|Key2). Possible values include: 'Key1', 'Key2'
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BingAccountKeys> regenerateKeyAsync(String resourceGroupName, String accountName, KeyName keyName);

    /**
     * List available SKUs for the requested Bing account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the Bing account.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<BingAccountEnumerateSkusResult> listSkusAsync(String resourceGroupName, String accountName);

    /**
     * List usages for the requested Bing account.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param accountName The name of the Bing account.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<UsagesResult> listUsagesAsync(String resourceGroupName, String accountName);

}
