// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** An IP Configuration of the private endpoint. */
@JsonFlatten
@Fluent
public class PrivateEndpointIpConfiguration {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PrivateEndpointIpConfiguration.class);

    /*
     * The name of the resource that is unique within a resource group.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * The resource type.
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /*
     * A unique read-only string that changes whenever the resource is updated.
     */
    @JsonProperty(value = "etag", access = JsonProperty.Access.WRITE_ONLY)
    private String etag;

    /*
     * The ID of a group obtained from the remote resource that this private
     * endpoint should connect to.
     */
    @JsonProperty(value = "properties.groupId")
    private String groupId;

    /*
     * The member name of a group obtained from the remote resource that this
     * private endpoint should connect to.
     */
    @JsonProperty(value = "properties.memberName")
    private String memberName;

    /*
     * A private ip address obtained from the private endpoint's subnet.
     */
    @JsonProperty(value = "properties.privateIPAddress")
    private String privateIpAddress;

    /**
     * Get the name property: The name of the resource that is unique within a resource group.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name of the resource that is unique within a resource group.
     *
     * @param name the name value to set.
     * @return the PrivateEndpointIpConfiguration object itself.
     */
    public PrivateEndpointIpConfiguration withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the type property: The resource type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Get the etag property: A unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value.
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Get the groupId property: The ID of a group obtained from the remote resource that this private endpoint should
     * connect to.
     *
     * @return the groupId value.
     */
    public String groupId() {
        return this.groupId;
    }

    /**
     * Set the groupId property: The ID of a group obtained from the remote resource that this private endpoint should
     * connect to.
     *
     * @param groupId the groupId value to set.
     * @return the PrivateEndpointIpConfiguration object itself.
     */
    public PrivateEndpointIpConfiguration withGroupId(String groupId) {
        this.groupId = groupId;
        return this;
    }

    /**
     * Get the memberName property: The member name of a group obtained from the remote resource that this private
     * endpoint should connect to.
     *
     * @return the memberName value.
     */
    public String memberName() {
        return this.memberName;
    }

    /**
     * Set the memberName property: The member name of a group obtained from the remote resource that this private
     * endpoint should connect to.
     *
     * @param memberName the memberName value to set.
     * @return the PrivateEndpointIpConfiguration object itself.
     */
    public PrivateEndpointIpConfiguration withMemberName(String memberName) {
        this.memberName = memberName;
        return this;
    }

    /**
     * Get the privateIpAddress property: A private ip address obtained from the private endpoint's subnet.
     *
     * @return the privateIpAddress value.
     */
    public String privateIpAddress() {
        return this.privateIpAddress;
    }

    /**
     * Set the privateIpAddress property: A private ip address obtained from the private endpoint's subnet.
     *
     * @param privateIpAddress the privateIpAddress value to set.
     * @return the PrivateEndpointIpConfiguration object itself.
     */
    public PrivateEndpointIpConfiguration withPrivateIpAddress(String privateIpAddress) {
        this.privateIpAddress = privateIpAddress;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
