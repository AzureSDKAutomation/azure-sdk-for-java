// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.NetworkManager;
import com.azure.resourcemanager.network.generated.fluent.models.NetworkVirtualApplianceSiteInner;
import com.azure.resourcemanager.network.generated.models.NetworkVirtualApplianceSite;
import com.azure.resourcemanager.network.generated.models.O365PolicyProperties;
import com.azure.resourcemanager.network.generated.models.ProvisioningState;
import com.azure.resourcemanager.network.generated.models.VirtualWanProperties;
import java.util.Collections;
import java.util.Map;

public final class NetworkVirtualApplianceSiteImpl
    implements NetworkVirtualApplianceSite, NetworkVirtualApplianceSite.Definition, NetworkVirtualApplianceSite.Update {
    private NetworkVirtualApplianceSiteInner innerObject;

    private final NetworkManager serviceManager;

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public VirtualWanProperties virtualWan() {
        return this.innerModel().virtualWan();
    }

    public String addressPrefix() {
        return this.innerModel().addressPrefix();
    }

    public O365PolicyProperties o365Policy() {
        return this.innerModel().o365Policy();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String id() {
        return this.innerModel().id();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public NetworkVirtualApplianceSiteInner innerModel() {
        return this.innerObject;
    }

    private NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String siteName;

    public NetworkVirtualApplianceSiteImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public NetworkVirtualApplianceSite create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkVirtualApplianceSites()
                .createOrUpdate(resourceGroupName, siteName, this.innerModel(), Context.NONE);
        return this;
    }

    public NetworkVirtualApplianceSite create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkVirtualApplianceSites()
                .createOrUpdate(resourceGroupName, siteName, this.innerModel(), context);
        return this;
    }

    NetworkVirtualApplianceSiteImpl(String name, NetworkManager serviceManager) {
        this.innerObject = new NetworkVirtualApplianceSiteInner();
        this.serviceManager = serviceManager;
        this.siteName = name;
    }

    public NetworkVirtualApplianceSiteImpl update() {
        return this;
    }

    public NetworkVirtualApplianceSite apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkVirtualApplianceSites()
                .createOrUpdate(resourceGroupName, siteName, this.innerModel(), Context.NONE);
        return this;
    }

    public NetworkVirtualApplianceSite apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkVirtualApplianceSites()
                .createOrUpdate(resourceGroupName, siteName, this.innerModel(), context);
        return this;
    }

    NetworkVirtualApplianceSiteImpl(NetworkVirtualApplianceSiteInner innerObject, NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.siteName = Utils.getValueFromIdByName(innerObject.id(), "virtualApplianceSites");
    }

    public NetworkVirtualApplianceSite refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkVirtualApplianceSites()
                .getByResourceGroupWithResponse(resourceGroupName, siteName, Context.NONE)
                .getValue();
        return this;
    }

    public NetworkVirtualApplianceSite refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkVirtualApplianceSites()
                .getByResourceGroupWithResponse(resourceGroupName, siteName, context)
                .getValue();
        return this;
    }

    public NetworkVirtualApplianceSiteImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public NetworkVirtualApplianceSiteImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public NetworkVirtualApplianceSiteImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public NetworkVirtualApplianceSiteImpl withVirtualWan(VirtualWanProperties virtualWan) {
        this.innerModel().withVirtualWan(virtualWan);
        return this;
    }

    public NetworkVirtualApplianceSiteImpl withAddressPrefix(String addressPrefix) {
        this.innerModel().withAddressPrefix(addressPrefix);
        return this;
    }

    public NetworkVirtualApplianceSiteImpl withO365Policy(O365PolicyProperties o365Policy) {
        this.innerModel().withO365Policy(o365Policy);
        return this;
    }
}
