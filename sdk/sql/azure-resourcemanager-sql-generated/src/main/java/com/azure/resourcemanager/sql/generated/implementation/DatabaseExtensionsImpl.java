// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.SqlManager;
import com.azure.resourcemanager.sql.generated.fluent.DatabaseExtensionsClient;
import com.azure.resourcemanager.sql.generated.fluent.models.ImportExportExtensionsOperationResultInner;
import com.azure.resourcemanager.sql.generated.models.DatabaseExtensions;
import com.azure.resourcemanager.sql.generated.models.ImportExportExtensionsOperationResult;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class DatabaseExtensionsImpl implements DatabaseExtensions {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DatabaseExtensionsImpl.class);

    private final DatabaseExtensionsClient innerClient;

    private final SqlManager serviceManager;

    public DatabaseExtensionsImpl(DatabaseExtensionsClient innerClient, SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public void get(String resourceGroupName, String serverName, String databaseName, String extensionName) {
        this.serviceClient().get(resourceGroupName, serverName, databaseName, extensionName);
    }

    public Response<Void> getWithResponse(
        String resourceGroupName, String serverName, String databaseName, String extensionName, Context context) {
        return this
            .serviceClient()
            .getWithResponse(resourceGroupName, serverName, databaseName, extensionName, context);
    }

    public PagedIterable<ImportExportExtensionsOperationResult> listByDatabase(
        String resourceGroupName, String serverName, String databaseName) {
        PagedIterable<ImportExportExtensionsOperationResultInner> inner =
            this.serviceClient().listByDatabase(resourceGroupName, serverName, databaseName);
        return inner.mapPage(inner1 -> new ImportExportExtensionsOperationResultImpl(inner1, this.manager()));
    }

    public PagedIterable<ImportExportExtensionsOperationResult> listByDatabase(
        String resourceGroupName, String serverName, String databaseName, Context context) {
        PagedIterable<ImportExportExtensionsOperationResultInner> inner =
            this.serviceClient().listByDatabase(resourceGroupName, serverName, databaseName, context);
        return inner.mapPage(inner1 -> new ImportExportExtensionsOperationResultImpl(inner1, this.manager()));
    }

    private DatabaseExtensionsClient serviceClient() {
        return this.innerClient;
    }

    private SqlManager manager() {
        return this.serviceManager;
    }

    public ImportExportExtensionsOperationResultImpl define(String name) {
        return new ImportExportExtensionsOperationResultImpl(name, this.manager());
    }
}
