/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * jkl
 */

package com.microsoft.azure.management.postgresql.v2020_10_05_privatepreview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.postgresql.v2020_10_05_privatepreview.FirewallRules;
import rx.Completable;
import rx.functions.Func1;
import rx.Observable;
import java.util.List;
import com.microsoft.azure.management.postgresql.v2020_10_05_privatepreview.FirewallRule;

class FirewallRulesImpl extends WrapperImpl<FirewallRulesInner> implements FirewallRules {
    private final DBForPostgreSqlManager manager;

    FirewallRulesImpl(DBForPostgreSqlManager manager) {
        super(manager.inner().firewallRules());
        this.manager = manager;
    }

    public DBForPostgreSqlManager manager() {
        return this.manager;
    }

    @Override
    public FirewallRuleImpl define(String name) {
        return wrapModel(name);
    }

    private FirewallRuleImpl wrapModel(FirewallRuleInner inner) {
        return  new FirewallRuleImpl(inner, manager());
    }

    private FirewallRuleImpl wrapModel(String name) {
        return new FirewallRuleImpl(name, this.manager());
    }

    @Override
    public Completable deleteAsync(String resourceGroupName, String serverGroupName, String firewallRuleName) {
        FirewallRulesInner client = this.inner();
        return client.deleteAsync(resourceGroupName, serverGroupName, firewallRuleName).toCompletable();
    }

    @Override
    public Observable<FirewallRule> getAsync(String resourceGroupName, String serverGroupName, String firewallRuleName) {
        FirewallRulesInner client = this.inner();
        return client.getAsync(resourceGroupName, serverGroupName, firewallRuleName)
        .map(new Func1<FirewallRuleInner, FirewallRule>() {
            @Override
            public FirewallRule call(FirewallRuleInner inner) {
                return new FirewallRuleImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<FirewallRule> listByServerGroupAsync(String resourceGroupName, String serverGroupName) {
        FirewallRulesInner client = this.inner();
        return client.listByServerGroupAsync(resourceGroupName, serverGroupName)
        .flatMap(new Func1<List<FirewallRuleInner>, Observable<FirewallRuleInner>>() {
            @Override
            public Observable<FirewallRuleInner> call(List<FirewallRuleInner> innerList) {
                return Observable.from(innerList);
            }
        })
        .map(new Func1<FirewallRuleInner, FirewallRule>() {
            @Override
            public FirewallRule call(FirewallRuleInner inner) {
                return new FirewallRuleImpl(inner, manager());
            }
        });
    }

}
