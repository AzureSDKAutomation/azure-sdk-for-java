/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.postgresql.v2020_10_05_privatepreview.implementation;

import com.microsoft.azure.management.postgresql.v2020_10_05_privatepreview.ServerGroupServer;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.postgresql.v2020_10_05_privatepreview.ServerHaState;
import com.microsoft.azure.management.postgresql.v2020_10_05_privatepreview.ServerRole;
import com.microsoft.azure.management.postgresql.v2020_10_05_privatepreview.ServerEdition;
import com.microsoft.azure.management.postgresql.v2020_10_05_privatepreview.ServerState;
import com.microsoft.azure.management.postgresql.v2020_10_05_privatepreview.ServerVersion;

class ServerGroupServerImpl extends WrapperImpl<ServerGroupServerInner> implements ServerGroupServer {
    private final DBForPostgreSqlManager manager;
    ServerGroupServerImpl(ServerGroupServerInner inner, DBForPostgreSqlManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public DBForPostgreSqlManager manager() {
        return this.manager;
    }

    @Override
    public String administratorLogin() {
        return this.inner().administratorLogin();
    }

    @Override
    public ServerHaState haState() {
        return this.inner().haState();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public Boolean isPublicIpRequested() {
        return this.inner().isPublicIpRequested();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public ServerRole role() {
        return this.inner().role();
    }

    @Override
    public ServerEdition serverEdition() {
        return this.inner().serverEdition();
    }

    @Override
    public Integer standbyCount() {
        return this.inner().standbyCount();
    }

    @Override
    public ServerState state() {
        return this.inner().state();
    }

    @Override
    public Long storageQuotaInMb() {
        return this.inner().storageQuotaInMb();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public Long vCores() {
        return this.inner().vCores();
    }

    @Override
    public ServerVersion version() {
        return this.inner().version();
    }

}
