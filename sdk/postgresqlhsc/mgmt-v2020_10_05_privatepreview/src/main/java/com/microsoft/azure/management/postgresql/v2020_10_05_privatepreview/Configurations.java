/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.postgresql.v2020_10_05_privatepreview;

import rx.Observable;
import com.microsoft.azure.management.postgresql.v2020_10_05_privatepreview.implementation.ConfigurationsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing Configurations.
 */
public interface Configurations extends HasInner<ConfigurationsInner> {
    /**
     * List all the configurations of a server group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverGroupName The name of the server group.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ServerGroupConfiguration> listByServerGroupAsync(final String resourceGroupName, final String serverGroupName);

    /**
     * Gets information about single server group configuration.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverGroupName The name of the server group.
     * @param configurationName The name of the server group configuration.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ServerGroupConfiguration> getAsync(String resourceGroupName, String serverGroupName, String configurationName);

    /**
     * List all the configurations of a server in server group.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serverGroupName The name of the server group.
     * @param serverName The name of the server.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ServerConfiguration> listByServerAsync(final String resourceGroupName, final String serverGroupName, final String serverName);

}
