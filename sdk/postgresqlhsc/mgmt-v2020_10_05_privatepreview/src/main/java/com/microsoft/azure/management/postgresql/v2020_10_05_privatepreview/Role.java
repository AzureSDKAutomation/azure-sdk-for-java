/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.postgresql.v2020_10_05_privatepreview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.postgresql.v2020_10_05_privatepreview.implementation.RoleInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.postgresql.v2020_10_05_privatepreview.implementation.DBForPostgreSqlManager;

/**
 * Type representing Role.
 */
public interface Role extends HasInner<RoleInner>, Indexable, Updatable<Role.Update>, HasManager<DBForPostgreSqlManager> {
    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the password value.
     */
    String password();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the Role definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithResourceGroupName, DefinitionStages.WithServerGroupName, DefinitionStages.WithPassword, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Role definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Role definition.
         */
        interface Blank extends WithResourceGroupName {
        }

        /**
         * The stage of the role definition allowing to specify ResourceGroupName.
         */
        interface WithResourceGroupName {
           /**
            * Specifies resourceGroupName.
            * @param resourceGroupName The name of the resource group. The name is case insensitive
            * @return the next definition stage
            */
            WithServerGroupName withResourceGroupName(String resourceGroupName);
        }

        /**
         * The stage of the role definition allowing to specify ServerGroupName.
         */
        interface WithServerGroupName {
           /**
            * Specifies serverGroupName.
            * @param serverGroupName The name of the server group
            * @return the next definition stage
            */
            WithPassword withServerGroupName(String serverGroupName);
        }

        /**
         * The stage of the role definition allowing to specify Password.
         */
        interface WithPassword {
           /**
            * Specifies password.
            * @param password The password of the server group role
            * @return the next definition stage
            */
            WithCreate withPassword(String password);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Role> {
        }
    }
    /**
     * The template for a Role update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Role>, UpdateStages.WithPassword {
    }

    /**
     * Grouping of Role update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the role update allowing to specify Password.
         */
        interface WithPassword {
            /**
             * Specifies password.
             * @param password The password of the server group role
             * @return the next update stage
             */
            Update withPassword(String password);
        }

    }
}
