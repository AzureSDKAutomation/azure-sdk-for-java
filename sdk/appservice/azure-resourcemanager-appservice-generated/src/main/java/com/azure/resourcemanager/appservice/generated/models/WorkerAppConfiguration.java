// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Non versioned Worker App configuration properties that define the mutable settings of a worker app. */
@Fluent
public final class WorkerAppConfiguration {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(WorkerAppConfiguration.class);

    /*
     * Collection of secrets used by a worker app
     */
    @JsonProperty(value = "secrets")
    private List<WorkerAppSecret> secrets;

    /*
     * Ingress configurations.
     */
    @JsonProperty(value = "ingress")
    private WorkerAppIngress ingress;

    /*
     * Collection of private container registry credentials for containers used
     * by the worker app
     */
    @JsonProperty(value = "registries")
    private List<WorkerAppRegistryCredentials> registries;

    /**
     * Get the secrets property: Collection of secrets used by a worker app.
     *
     * @return the secrets value.
     */
    public List<WorkerAppSecret> secrets() {
        return this.secrets;
    }

    /**
     * Set the secrets property: Collection of secrets used by a worker app.
     *
     * @param secrets the secrets value to set.
     * @return the WorkerAppConfiguration object itself.
     */
    public WorkerAppConfiguration withSecrets(List<WorkerAppSecret> secrets) {
        this.secrets = secrets;
        return this;
    }

    /**
     * Get the ingress property: Ingress configurations.
     *
     * @return the ingress value.
     */
    public WorkerAppIngress ingress() {
        return this.ingress;
    }

    /**
     * Set the ingress property: Ingress configurations.
     *
     * @param ingress the ingress value to set.
     * @return the WorkerAppConfiguration object itself.
     */
    public WorkerAppConfiguration withIngress(WorkerAppIngress ingress) {
        this.ingress = ingress;
        return this;
    }

    /**
     * Get the registries property: Collection of private container registry credentials for containers used by the
     * worker app.
     *
     * @return the registries value.
     */
    public List<WorkerAppRegistryCredentials> registries() {
        return this.registries;
    }

    /**
     * Set the registries property: Collection of private container registry credentials for containers used by the
     * worker app.
     *
     * @param registries the registries value to set.
     * @return the WorkerAppConfiguration object itself.
     */
    public WorkerAppConfiguration withRegistries(List<WorkerAppRegistryCredentials> registries) {
        this.registries = registries;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (secrets() != null) {
            secrets().forEach(e -> e.validate());
        }
        if (ingress() != null) {
            ingress().validate();
        }
        if (registries() != null) {
            registries().forEach(e -> e.validate());
        }
    }
}
