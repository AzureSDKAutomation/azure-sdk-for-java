// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appservice.generated.models.WorkerAppRevisionEvent;
import com.azure.resourcemanager.appservice.generated.models.WorkerAppTemplate;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** Worker App Revision. */
@JsonFlatten
@Fluent
public class WorkerAppRevisionInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(WorkerAppRevisionInner.class);

    /*
     * Timestamp describing when the revision was created
     * by controller
     */
    @JsonProperty(value = "properties.createdTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime createdTime;

    /*
     * Fully qualified domain name of the revision
     */
    @JsonProperty(value = "properties.fqdn", access = JsonProperty.Access.WRITE_ONLY)
    private String fqdn;

    /*
     * Worker App Revision Template with all possible settings and the
     * defaults if user did not provide them. The defaults are populated
     * as they were at the creation time
     */
    @JsonProperty(value = "properties.template", access = JsonProperty.Access.WRITE_ONLY)
    private WorkerAppTemplate template;

    /*
     * Boolean describing if the Revision is Active
     */
    @JsonProperty(value = "properties.active", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean active;

    /*
     * Number of pods currently running for this revision
     */
    @JsonProperty(value = "properties.replicas", access = JsonProperty.Access.WRITE_ONLY)
    private Integer replicas;

    /*
     * Defines the events with respect to Provisioning and Scaling the
     * Revision
     */
    @JsonProperty(value = "properties.history", access = JsonProperty.Access.WRITE_ONLY)
    private List<WorkerAppRevisionEvent> history;

    /*
     * Kind of resource.
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * Metadata pertaining to creation and last modification of the resource.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Get the createdTime property: Timestamp describing when the revision was created by controller.
     *
     * @return the createdTime value.
     */
    public OffsetDateTime createdTime() {
        return this.createdTime;
    }

    /**
     * Get the fqdn property: Fully qualified domain name of the revision.
     *
     * @return the fqdn value.
     */
    public String fqdn() {
        return this.fqdn;
    }

    /**
     * Get the template property: Worker App Revision Template with all possible settings and the defaults if user did
     * not provide them. The defaults are populated as they were at the creation time.
     *
     * @return the template value.
     */
    public WorkerAppTemplate template() {
        return this.template;
    }

    /**
     * Get the active property: Boolean describing if the Revision is Active.
     *
     * @return the active value.
     */
    public Boolean active() {
        return this.active;
    }

    /**
     * Get the replicas property: Number of pods currently running for this revision.
     *
     * @return the replicas value.
     */
    public Integer replicas() {
        return this.replicas;
    }

    /**
     * Get the history property: Defines the events with respect to Provisioning and Scaling the Revision.
     *
     * @return the history value.
     */
    public List<WorkerAppRevisionEvent> history() {
        return this.history;
    }

    /**
     * Get the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Kind of resource.
     *
     * @param kind the kind value to set.
     * @return the WorkerAppRevisionInner object itself.
     */
    public WorkerAppRevisionInner withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the systemData property: Metadata pertaining to creation and last modification of the resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /** {@inheritDoc} */
    @Override
    public WorkerAppRevisionInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public WorkerAppRevisionInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (template() != null) {
            template().validate();
        }
        if (history() != null) {
            history().forEach(e -> e.validate());
        }
    }
}
