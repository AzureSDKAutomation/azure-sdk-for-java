/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.policyinsights.v2019_10_01.implementation;

import com.microsoft.azure.management.policyinsights.v2019_10_01.Attestation;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.policyinsights.v2019_10_01.ComplianceState;
import org.joda.time.DateTime;
import java.util.List;
import com.microsoft.azure.management.policyinsights.v2019_10_01.AttestationEvidence;
import com.microsoft.azure.management.policyinsights.v2019_10_01.SystemData;

class AttestationImpl extends CreatableUpdatableImpl<Attestation, AttestationInner, AttestationImpl> implements Attestation, Attestation.Definition, Attestation.Update {
    private String subscriptionId;
    private String resourceGroupName;
    private String attestationName;
    private final PolicyInsightsManager manager;

    AttestationImpl(String name, PolicyInsightsManager manager) {
        super(name, new AttestationInner());
        this.manager = manager;
        // Set resource name
        this.attestationName = name;
        //
    }

    AttestationImpl(AttestationInner inner, PolicyInsightsManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.attestationName = inner.name();
        // set resource ancestor and positional variables
        this.subscriptionId = IdParsingUtils.getValueFromIdByName(inner.id(), "subscriptions");
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.attestationName = IdParsingUtils.getValueFromIdByName(inner.id(), "attestations");
        // set other parameters for create and update
    }

    @Override
    public PolicyInsightsManager manager() {
        return this.manager;
    }

    @Override
    public Observable<Attestation> createResourceAsync() {
        AttestationsInner client = this.manager().inner().attestations();
        return client.createOrUpdateAtResourceGroupAsync(this.subscriptionId, this.resourceGroupName, this.attestationName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<Attestation> updateResourceAsync() {
        AttestationsInner client = this.manager().inner().attestations();
        return client.createOrUpdateAtResourceGroupAsync(this.subscriptionId, this.resourceGroupName, this.attestationName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<AttestationInner> getInnerAsync() {
        AttestationsInner client = this.manager().inner().attestations();
        return client.getAtResourceAsync(this.subscriptionId, this.resourceGroupName, this.attestationName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public String comments() {
        return this.inner().comments();
    }

    @Override
    public ComplianceState complianceState() {
        return this.inner().complianceState();
    }

    @Override
    public List<AttestationEvidence> evidence() {
        return this.inner().evidence();
    }

    @Override
    public DateTime expiresOn() {
        return this.inner().expiresOn();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public DateTime lastComplianceStateChangeAt() {
        return this.inner().lastComplianceStateChangeAt();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String owner() {
        return this.inner().owner();
    }

    @Override
    public String policyAssignmentId() {
        return this.inner().policyAssignmentId();
    }

    @Override
    public String policyDefinitionReferenceId() {
        return this.inner().policyDefinitionReferenceId();
    }

    @Override
    public String provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public SystemData systemData() {
        return this.inner().systemData();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public AttestationImpl withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }

    @Override
    public AttestationImpl withResourceGroupName(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    @Override
    public AttestationImpl withPolicyAssignmentId(String policyAssignmentId) {
        this.inner().withPolicyAssignmentId(policyAssignmentId);
        return this;
    }

    @Override
    public AttestationImpl withComments(String comments) {
        this.inner().withComments(comments);
        return this;
    }

    @Override
    public AttestationImpl withComplianceState(ComplianceState complianceState) {
        this.inner().withComplianceState(complianceState);
        return this;
    }

    @Override
    public AttestationImpl withEvidence(List<AttestationEvidence> evidence) {
        this.inner().withEvidence(evidence);
        return this;
    }

    @Override
    public AttestationImpl withExpiresOn(DateTime expiresOn) {
        this.inner().withExpiresOn(expiresOn);
        return this;
    }

    @Override
    public AttestationImpl withOwner(String owner) {
        this.inner().withOwner(owner);
        return this;
    }

    @Override
    public AttestationImpl withPolicyDefinitionReferenceId(String policyDefinitionReferenceId) {
        this.inner().withPolicyDefinitionReferenceId(policyDefinitionReferenceId);
        return this;
    }

}
