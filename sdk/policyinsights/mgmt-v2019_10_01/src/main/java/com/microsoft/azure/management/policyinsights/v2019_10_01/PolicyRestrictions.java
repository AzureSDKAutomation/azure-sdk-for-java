/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.policyinsights.v2019_10_01;

import rx.Observable;
import com.microsoft.azure.management.policyinsights.v2019_10_01.implementation.PolicyRestrictionsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing PolicyRestrictions.
 */
public interface PolicyRestrictions extends HasInner<PolicyRestrictionsInner> {
    /**
     * Checks what restrictions Azure Policy will place on a resource within a subscription.
     *
     * @param subscriptionId The ID of the target subscription.
     * @param parameters The check policy restrictions parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<CheckRestrictionsResult> checkAtSubscriptionScopeAsync(String subscriptionId, CheckRestrictionsRequest parameters);

    /**
     * Checks what restrictions Azure Policy will place on a resource within a resource group. Use this when the resource group the resource will be created in is already known.
     *
     * @param subscriptionId The ID of the target subscription.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param parameters The check policy restrictions parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<CheckRestrictionsResult> checkAtResourceGroupScopeAsync(String subscriptionId, String resourceGroupName, CheckRestrictionsRequest parameters);

}
