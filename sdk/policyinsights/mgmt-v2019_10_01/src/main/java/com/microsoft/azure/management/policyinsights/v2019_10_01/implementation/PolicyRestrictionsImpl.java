/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.policyinsights.v2019_10_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.policyinsights.v2019_10_01.PolicyRestrictions;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.policyinsights.v2019_10_01.CheckRestrictionsResult;
import com.microsoft.azure.management.policyinsights.v2019_10_01.CheckRestrictionsRequest;

class PolicyRestrictionsImpl extends WrapperImpl<PolicyRestrictionsInner> implements PolicyRestrictions {
    private final PolicyInsightsManager manager;

    PolicyRestrictionsImpl(PolicyInsightsManager manager) {
        super(manager.inner().policyRestrictions());
        this.manager = manager;
    }

    public PolicyInsightsManager manager() {
        return this.manager;
    }

    @Override
    public Observable<CheckRestrictionsResult> checkAtSubscriptionScopeAsync(String subscriptionId, CheckRestrictionsRequest parameters) {
        PolicyRestrictionsInner client = this.inner();
        return client.checkAtSubscriptionScopeAsync(subscriptionId, parameters)
        .map(new Func1<CheckRestrictionsResultInner, CheckRestrictionsResult>() {
            @Override
            public CheckRestrictionsResult call(CheckRestrictionsResultInner inner) {
                return new CheckRestrictionsResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<CheckRestrictionsResult> checkAtResourceGroupScopeAsync(String subscriptionId, String resourceGroupName, CheckRestrictionsRequest parameters) {
        PolicyRestrictionsInner client = this.inner();
        return client.checkAtResourceGroupScopeAsync(subscriptionId, resourceGroupName, parameters)
        .map(new Func1<CheckRestrictionsResultInner, CheckRestrictionsResult>() {
            @Override
            public CheckRestrictionsResult call(CheckRestrictionsResultInner inner) {
                return new CheckRestrictionsResultImpl(inner, manager());
            }
        });
    }

}
