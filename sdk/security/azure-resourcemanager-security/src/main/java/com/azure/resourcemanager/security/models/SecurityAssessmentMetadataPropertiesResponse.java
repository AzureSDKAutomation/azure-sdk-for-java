// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Describes properties of an assessment metadata response. */
@Fluent
public final class SecurityAssessmentMetadataPropertiesResponse extends SecurityAssessmentMetadataProperties {
    @JsonIgnore
    private final ClientLogger logger = new ClientLogger(SecurityAssessmentMetadataPropertiesResponse.class);

    /*
     * The publishDates property.
     */
    @JsonProperty(value = "publishDates")
    private SecurityAssessmentMetadataPropertiesResponsePublishDates publishDates;

    /*
     * The plannedDeprecationDate property.
     */
    @JsonProperty(value = "plannedDeprecationDate")
    private String plannedDeprecationDate;

    /**
     * Get the publishDates property: The publishDates property.
     *
     * @return the publishDates value.
     */
    public SecurityAssessmentMetadataPropertiesResponsePublishDates publishDates() {
        return this.publishDates;
    }

    /**
     * Set the publishDates property: The publishDates property.
     *
     * @param publishDates the publishDates value to set.
     * @return the SecurityAssessmentMetadataPropertiesResponse object itself.
     */
    public SecurityAssessmentMetadataPropertiesResponse withPublishDates(
        SecurityAssessmentMetadataPropertiesResponsePublishDates publishDates) {
        this.publishDates = publishDates;
        return this;
    }

    /**
     * Get the plannedDeprecationDate property: The plannedDeprecationDate property.
     *
     * @return the plannedDeprecationDate value.
     */
    public String plannedDeprecationDate() {
        return this.plannedDeprecationDate;
    }

    /**
     * Set the plannedDeprecationDate property: The plannedDeprecationDate property.
     *
     * @param plannedDeprecationDate the plannedDeprecationDate value to set.
     * @return the SecurityAssessmentMetadataPropertiesResponse object itself.
     */
    public SecurityAssessmentMetadataPropertiesResponse withPlannedDeprecationDate(String plannedDeprecationDate) {
        this.plannedDeprecationDate = plannedDeprecationDate;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SecurityAssessmentMetadataPropertiesResponse withDisplayName(String displayName) {
        super.withDisplayName(displayName);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SecurityAssessmentMetadataPropertiesResponse withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SecurityAssessmentMetadataPropertiesResponse withRemediationDescription(String remediationDescription) {
        super.withRemediationDescription(remediationDescription);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SecurityAssessmentMetadataPropertiesResponse withCategories(List<Categories> categories) {
        super.withCategories(categories);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SecurityAssessmentMetadataPropertiesResponse withSeverity(Severity severity) {
        super.withSeverity(severity);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SecurityAssessmentMetadataPropertiesResponse withUserImpact(UserImpact userImpact) {
        super.withUserImpact(userImpact);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SecurityAssessmentMetadataPropertiesResponse withImplementationEffort(
        ImplementationEffort implementationEffort) {
        super.withImplementationEffort(implementationEffort);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SecurityAssessmentMetadataPropertiesResponse withThreats(List<Threats> threats) {
        super.withThreats(threats);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SecurityAssessmentMetadataPropertiesResponse withPreview(Boolean preview) {
        super.withPreview(preview);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SecurityAssessmentMetadataPropertiesResponse withAssessmentType(AssessmentType assessmentType) {
        super.withAssessmentType(assessmentType);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SecurityAssessmentMetadataPropertiesResponse withPartnerData(
        SecurityAssessmentMetadataPartnerData partnerData) {
        super.withPartnerData(partnerData);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (publishDates() != null) {
            publishDates().validate();
        }
    }
}
