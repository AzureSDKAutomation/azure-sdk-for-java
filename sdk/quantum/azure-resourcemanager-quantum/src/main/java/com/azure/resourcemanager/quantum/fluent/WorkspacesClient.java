// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.quantum.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.quantum.fluent.models.QuantumWorkspaceInner;

/** An instance of this class provides access to all the operations defined in WorkspacesClient. */
public interface WorkspacesClient {
    /**
     * Returns the Workspace resource associated with the given name.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource proxy definition object for quantum workspace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    QuantumWorkspaceInner getByResourceGroup(String resourceGroupName, String workspaceName);

    /**
     * Returns the Workspace resource associated with the given name.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource proxy definition object for quantum workspace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<QuantumWorkspaceInner> getByResourceGroupWithResponse(
        String resourceGroupName, String workspaceName, Context context);

    /**
     * Creates or updates a workspace resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @param quantumWorkspace Workspace details.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource proxy definition object for quantum workspace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<QuantumWorkspaceInner>, QuantumWorkspaceInner> beginCreateOrUpdate(
        String resourceGroupName, String workspaceName, QuantumWorkspaceInner quantumWorkspace);

    /**
     * Creates or updates a workspace resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @param quantumWorkspace Workspace details.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource proxy definition object for quantum workspace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<QuantumWorkspaceInner>, QuantumWorkspaceInner> beginCreateOrUpdate(
        String resourceGroupName, String workspaceName, QuantumWorkspaceInner quantumWorkspace, Context context);

    /**
     * Creates or updates a workspace resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @param quantumWorkspace Workspace details.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource proxy definition object for quantum workspace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    QuantumWorkspaceInner createOrUpdate(
        String resourceGroupName, String workspaceName, QuantumWorkspaceInner quantumWorkspace);

    /**
     * Creates or updates a workspace resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @param quantumWorkspace Workspace details.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource proxy definition object for quantum workspace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    QuantumWorkspaceInner createOrUpdate(
        String resourceGroupName, String workspaceName, QuantumWorkspaceInner quantumWorkspace, Context context);

    /**
     * Updates a Workspace resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @param quantumWorkspace Quantum workspace details.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource proxy definition object for quantum workspace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    QuantumWorkspaceInner update(
        String resourceGroupName, String workspaceName, QuantumWorkspaceInner quantumWorkspace);

    /**
     * Updates a Workspace resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @param quantumWorkspace Quantum workspace details.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the resource proxy definition object for quantum workspace.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<QuantumWorkspaceInner> updateWithResponse(
        String resourceGroupName, String workspaceName, QuantumWorkspaceInner quantumWorkspace, Context context);

    /**
     * Deletes a Workspace resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<QuantumWorkspaceInner>, QuantumWorkspaceInner> beginDelete(
        String resourceGroupName, String workspaceName);

    /**
     * Deletes a Workspace resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<QuantumWorkspaceInner>, QuantumWorkspaceInner> beginDelete(
        String resourceGroupName, String workspaceName, Context context);

    /**
     * Deletes a Workspace resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    QuantumWorkspaceInner delete(String resourceGroupName, String workspaceName);

    /**
     * Deletes a Workspace resource.
     *
     * @param resourceGroupName The name of the resource group.
     * @param workspaceName The name of the quantum workspace resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    QuantumWorkspaceInner delete(String resourceGroupName, String workspaceName, Context context);

    /**
     * Gets the list of Workspaces within a Subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Workspaces within a Subscription.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<QuantumWorkspaceInner> list();

    /**
     * Gets the list of Workspaces within a Subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Workspaces within a Subscription.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<QuantumWorkspaceInner> list(Context context);

    /**
     * Gets the list of Workspaces within a resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Workspaces within a resource group.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<QuantumWorkspaceInner> listByResourceGroup(String resourceGroupName);

    /**
     * Gets the list of Workspaces within a resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of Workspaces within a resource group.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<QuantumWorkspaceInner> listByResourceGroup(String resourceGroupName, Context context);
}
