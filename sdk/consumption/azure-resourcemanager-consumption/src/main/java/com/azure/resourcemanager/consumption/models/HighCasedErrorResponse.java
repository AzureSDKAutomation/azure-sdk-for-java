// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.consumption.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Error response indicates that the service is not able to process the incoming request. The reason is provided in the
 * error message.
 *
 * <p>Some Error responses:
 *
 * <p>* 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the
 * "x-ms-ratelimit-microsoft.consumption-retry-after" header.
 *
 * <p>* 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the
 * "Retry-After" header.
 */
@Fluent
public final class HighCasedErrorResponse {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(HighCasedErrorResponse.class);

    /*
     * The details of the error.
     */
    @JsonProperty(value = "Error")
    private HighCasedErrorDetails error;

    /**
     * Get the error property: The details of the error.
     *
     * @return the error value.
     */
    public HighCasedErrorDetails error() {
        return this.error;
    }

    /**
     * Set the error property: The details of the error.
     *
     * @param error the error value to set.
     * @return the HighCasedErrorResponse object itself.
     */
    public HighCasedErrorResponse withError(HighCasedErrorDetails error) {
        this.error = error;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (error() != null) {
            error().validate();
        }
    }
}
