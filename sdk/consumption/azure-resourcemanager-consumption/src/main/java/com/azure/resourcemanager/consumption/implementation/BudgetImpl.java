// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.consumption.implementation;

import com.azure.resourcemanager.consumption.ConsumptionManager;
import com.azure.resourcemanager.consumption.fluent.models.BudgetInner;
import com.azure.resourcemanager.consumption.models.Budget;
import com.azure.resourcemanager.consumption.models.BudgetFilter;
import com.azure.resourcemanager.consumption.models.BudgetTimePeriod;
import com.azure.resourcemanager.consumption.models.CategoryType;
import com.azure.resourcemanager.consumption.models.CurrentSpend;
import com.azure.resourcemanager.consumption.models.Notification;
import com.azure.resourcemanager.consumption.models.TimeGrainType;
import java.math.BigDecimal;
import java.util.Collections;
import java.util.Map;

public final class BudgetImpl implements Budget {
    private BudgetInner innerObject;

    private final ConsumptionManager serviceManager;

    public BudgetImpl(BudgetInner innerObject, ConsumptionManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public CategoryType category() {
        return this.innerModel().category();
    }

    public BigDecimal amount() {
        return this.innerModel().amount();
    }

    public TimeGrainType timeGrain() {
        return this.innerModel().timeGrain();
    }

    public BudgetTimePeriod timePeriod() {
        return this.innerModel().timePeriod();
    }

    public BudgetFilter filter() {
        return this.innerModel().filter();
    }

    public CurrentSpend currentSpend() {
        return this.innerModel().currentSpend();
    }

    public Map<String, Notification> notifications() {
        Map<String, Notification> inner = this.innerModel().notifications();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public BudgetInner innerModel() {
        return this.innerObject;
    }

    private ConsumptionManager manager() {
        return this.serviceManager;
    }
}
