/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory.v2018_06_01;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * Service principal credential.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", defaultImpl = ServicePrincipalCredential.class)
@JsonTypeName("ServicePrincipal")
@JsonFlatten
public class ServicePrincipalCredential extends Credential {
    /**
     * The app ID of the service principal used to authenticate.
     */
    @JsonProperty(value = "typeProperties.servicePrincipalId")
    private Object servicePrincipalId;

    /**
     * The key of the service principal used to authenticate.
     */
    @JsonProperty(value = "typeProperties.servicePrincipalKey")
    private AzureKeyVaultSecretReference servicePrincipalKey;

    /**
     * The ID of the tenant to which the service principal belongs.
     */
    @JsonProperty(value = "typeProperties.tenant")
    private Object tenant;

    /**
     * Get the app ID of the service principal used to authenticate.
     *
     * @return the servicePrincipalId value
     */
    public Object servicePrincipalId() {
        return this.servicePrincipalId;
    }

    /**
     * Set the app ID of the service principal used to authenticate.
     *
     * @param servicePrincipalId the servicePrincipalId value to set
     * @return the ServicePrincipalCredential object itself.
     */
    public ServicePrincipalCredential withServicePrincipalId(Object servicePrincipalId) {
        this.servicePrincipalId = servicePrincipalId;
        return this;
    }

    /**
     * Get the key of the service principal used to authenticate.
     *
     * @return the servicePrincipalKey value
     */
    public AzureKeyVaultSecretReference servicePrincipalKey() {
        return this.servicePrincipalKey;
    }

    /**
     * Set the key of the service principal used to authenticate.
     *
     * @param servicePrincipalKey the servicePrincipalKey value to set
     * @return the ServicePrincipalCredential object itself.
     */
    public ServicePrincipalCredential withServicePrincipalKey(AzureKeyVaultSecretReference servicePrincipalKey) {
        this.servicePrincipalKey = servicePrincipalKey;
        return this;
    }

    /**
     * Get the ID of the tenant to which the service principal belongs.
     *
     * @return the tenant value
     */
    public Object tenant() {
        return this.tenant;
    }

    /**
     * Set the ID of the tenant to which the service principal belongs.
     *
     * @param tenant the tenant value to set
     * @return the ServicePrincipalCredential object itself.
     */
    public ServicePrincipalCredential withTenant(Object tenant) {
        this.tenant = tenant;
        return this;
    }

}
