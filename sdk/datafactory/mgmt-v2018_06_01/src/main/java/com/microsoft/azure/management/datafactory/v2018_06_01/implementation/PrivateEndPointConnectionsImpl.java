/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.datafactory.v2018_06_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.datafactory.v2018_06_01.PrivateEndPointConnections;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.datafactory.v2018_06_01.PrivateEndpointConnectionResource;

class PrivateEndPointConnectionsImpl extends WrapperImpl<PrivateEndPointConnectionsInner> implements PrivateEndPointConnections {
    private final DataFactoryManager manager;

    PrivateEndPointConnectionsImpl(DataFactoryManager manager) {
        super(manager.inner().privateEndPointConnections());
        this.manager = manager;
    }

    public DataFactoryManager manager() {
        return this.manager;
    }

    private PrivateEndpointConnectionResourceImpl wrapModel(PrivateEndpointConnectionResourceInner inner) {
        return  new PrivateEndpointConnectionResourceImpl(inner, manager());
    }

    @Override
    public Observable<PrivateEndpointConnectionResource> listByFactoryAsync(final String resourceGroupName, final String factoryName) {
        PrivateEndPointConnectionsInner client = this.inner();
        return client.listByFactoryAsync(resourceGroupName, factoryName)
        .flatMapIterable(new Func1<Page<PrivateEndpointConnectionResourceInner>, Iterable<PrivateEndpointConnectionResourceInner>>() {
            @Override
            public Iterable<PrivateEndpointConnectionResourceInner> call(Page<PrivateEndpointConnectionResourceInner> page) {
                return page.items();
            }
        })
        .map(new Func1<PrivateEndpointConnectionResourceInner, PrivateEndpointConnectionResource>() {
            @Override
            public PrivateEndpointConnectionResource call(PrivateEndpointConnectionResourceInner inner) {
                return wrapModel(inner);
            }
        });
    }

}
