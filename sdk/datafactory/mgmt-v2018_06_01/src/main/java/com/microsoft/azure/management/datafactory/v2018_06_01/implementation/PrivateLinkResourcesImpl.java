/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.datafactory.v2018_06_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.datafactory.v2018_06_01.PrivateLinkResources;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.datafactory.v2018_06_01.PrivateLinkResourcesWrapper;

class PrivateLinkResourcesImpl extends WrapperImpl<PrivateLinkResourcesInner> implements PrivateLinkResources {
    private final DataFactoryManager manager;

    PrivateLinkResourcesImpl(DataFactoryManager manager) {
        super(manager.inner().privateLinkResources());
        this.manager = manager;
    }

    public DataFactoryManager manager() {
        return this.manager;
    }

    @Override
    public Observable<PrivateLinkResourcesWrapper> getAsync(String resourceGroupName, String factoryName) {
        PrivateLinkResourcesInner client = this.inner();
        return client.getAsync(resourceGroupName, factoryName)
        .map(new Func1<PrivateLinkResourcesWrapperInner, PrivateLinkResourcesWrapper>() {
            @Override
            public PrivateLinkResourcesWrapper call(PrivateLinkResourcesWrapperInner inner) {
                return new PrivateLinkResourcesWrapperImpl(inner, manager());
            }
        });
    }

}
