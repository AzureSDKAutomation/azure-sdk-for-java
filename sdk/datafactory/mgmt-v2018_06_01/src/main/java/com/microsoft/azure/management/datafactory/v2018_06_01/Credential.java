/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory.v2018_06_01;

import java.util.Map;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * The Azure Data Factory nested object which contains the information and
 * credential which can be used to connect with related store or compute
 * resource.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", defaultImpl = Credential.class)
@JsonTypeName("Credential")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "ServicePrincipal", value = ServicePrincipalCredential.class)
})
public class Credential {
    /**
     * Unmatched properties from the message are deserialized this collection.
     */
    @JsonProperty(value = "")
    private Map<String, Object> additionalProperties;

    /**
     * Credential description.
     */
    @JsonProperty(value = "description")
    private String description;

    /**
     * List of tags that can be used for describing the Credential.
     */
    @JsonProperty(value = "annotations")
    private List<Object> annotations;

    /**
     * Get unmatched properties from the message are deserialized this collection.
     *
     * @return the additionalProperties value
     */
    public Map<String, Object> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set unmatched properties from the message are deserialized this collection.
     *
     * @param additionalProperties the additionalProperties value to set
     * @return the Credential object itself.
     */
    public Credential withAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    /**
     * Get credential description.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Set credential description.
     *
     * @param description the description value to set
     * @return the Credential object itself.
     */
    public Credential withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get list of tags that can be used for describing the Credential.
     *
     * @return the annotations value
     */
    public List<Object> annotations() {
        return this.annotations;
    }

    /**
     * Set list of tags that can be used for describing the Credential.
     *
     * @param annotations the annotations value to set
     * @return the Credential object itself.
     */
    public Credential withAnnotations(List<Object> annotations) {
        this.annotations = annotations;
        return this;
    }

}
