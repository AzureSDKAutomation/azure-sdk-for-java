// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthbot.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.healthbot.fluent.models.HealthBotInner;
import com.azure.resourcemanager.healthbot.models.HealthBotUpdateParameters;

/** An instance of this class provides access to all the operations defined in PatchesClient. */
public interface PatchesClient {
    /**
     * Patch a Healthcare Bot.
     *
     * @param resourceGroupName The name of the Bot resource group in the user subscription.
     * @param resourceName The name of the Bot resource.
     * @param parameters Parameters for updating a HealthBot.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return healthBot resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    HealthBotInner bot(String resourceGroupName, String resourceName, HealthBotUpdateParameters parameters);

    /**
     * Patch a Healthcare Bot.
     *
     * @param resourceGroupName The name of the Bot resource group in the user subscription.
     * @param resourceName The name of the Bot resource.
     * @param parameters Parameters for updating a HealthBot.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return healthBot resource definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<HealthBotInner> botWithResponse(
        String resourceGroupName, String resourceName, HealthBotUpdateParameters parameters, Context context);
}
