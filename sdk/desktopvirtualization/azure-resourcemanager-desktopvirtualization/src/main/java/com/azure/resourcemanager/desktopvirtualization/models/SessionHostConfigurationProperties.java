// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Session host configurations of HostPool. */
@Fluent
public final class SessionHostConfigurationProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SessionHostConfigurationProperties.class);

    /*
     * The time when session host configuration was last modified and something
     * was changed.
     */
    @JsonProperty(value = "version", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime version;

    /*
     * The id of the size of a virtual machine connected to a hostpool.
     */
    @JsonProperty(value = "vmSizeId")
    private String vmSizeId;

    /*
     * The disk type used by virtual machine in hostpool session host.
     */
    @JsonProperty(value = "diskType")
    private VirtualMachineDiskType diskType;

    /*
     * The uri to the storage blob containing the arm template to be run on the
     * virtual machine after provisioning.
     */
    @JsonProperty(value = "vmCustomConfigurationUri")
    private String vmCustomConfigurationUri;

    /*
     * The uri to the storage blob containing the parameter file to be run on
     * the virtual machine after provisioning.
     */
    @JsonProperty(value = "vmCustomConfigurationParameterUri")
    private String vmCustomConfigurationParameterUri;

    /*
     * Image configurations of HostPool.
     */
    @JsonProperty(value = "imageInfo")
    private ImageInfoProperties imageInfo;

    /*
     * Domain configurations of session hosts.
     */
    @JsonProperty(value = "domainInfo")
    private DomainInfoProperties domainInfo;

    /**
     * Get the version property: The time when session host configuration was last modified and something was changed.
     *
     * @return the version value.
     */
    public OffsetDateTime version() {
        return this.version;
    }

    /**
     * Get the vmSizeId property: The id of the size of a virtual machine connected to a hostpool.
     *
     * @return the vmSizeId value.
     */
    public String vmSizeId() {
        return this.vmSizeId;
    }

    /**
     * Set the vmSizeId property: The id of the size of a virtual machine connected to a hostpool.
     *
     * @param vmSizeId the vmSizeId value to set.
     * @return the SessionHostConfigurationProperties object itself.
     */
    public SessionHostConfigurationProperties withVmSizeId(String vmSizeId) {
        this.vmSizeId = vmSizeId;
        return this;
    }

    /**
     * Get the diskType property: The disk type used by virtual machine in hostpool session host.
     *
     * @return the diskType value.
     */
    public VirtualMachineDiskType diskType() {
        return this.diskType;
    }

    /**
     * Set the diskType property: The disk type used by virtual machine in hostpool session host.
     *
     * @param diskType the diskType value to set.
     * @return the SessionHostConfigurationProperties object itself.
     */
    public SessionHostConfigurationProperties withDiskType(VirtualMachineDiskType diskType) {
        this.diskType = diskType;
        return this;
    }

    /**
     * Get the vmCustomConfigurationUri property: The uri to the storage blob containing the arm template to be run on
     * the virtual machine after provisioning.
     *
     * @return the vmCustomConfigurationUri value.
     */
    public String vmCustomConfigurationUri() {
        return this.vmCustomConfigurationUri;
    }

    /**
     * Set the vmCustomConfigurationUri property: The uri to the storage blob containing the arm template to be run on
     * the virtual machine after provisioning.
     *
     * @param vmCustomConfigurationUri the vmCustomConfigurationUri value to set.
     * @return the SessionHostConfigurationProperties object itself.
     */
    public SessionHostConfigurationProperties withVmCustomConfigurationUri(String vmCustomConfigurationUri) {
        this.vmCustomConfigurationUri = vmCustomConfigurationUri;
        return this;
    }

    /**
     * Get the vmCustomConfigurationParameterUri property: The uri to the storage blob containing the parameter file to
     * be run on the virtual machine after provisioning.
     *
     * @return the vmCustomConfigurationParameterUri value.
     */
    public String vmCustomConfigurationParameterUri() {
        return this.vmCustomConfigurationParameterUri;
    }

    /**
     * Set the vmCustomConfigurationParameterUri property: The uri to the storage blob containing the parameter file to
     * be run on the virtual machine after provisioning.
     *
     * @param vmCustomConfigurationParameterUri the vmCustomConfigurationParameterUri value to set.
     * @return the SessionHostConfigurationProperties object itself.
     */
    public SessionHostConfigurationProperties withVmCustomConfigurationParameterUri(
        String vmCustomConfigurationParameterUri) {
        this.vmCustomConfigurationParameterUri = vmCustomConfigurationParameterUri;
        return this;
    }

    /**
     * Get the imageInfo property: Image configurations of HostPool.
     *
     * @return the imageInfo value.
     */
    public ImageInfoProperties imageInfo() {
        return this.imageInfo;
    }

    /**
     * Set the imageInfo property: Image configurations of HostPool.
     *
     * @param imageInfo the imageInfo value to set.
     * @return the SessionHostConfigurationProperties object itself.
     */
    public SessionHostConfigurationProperties withImageInfo(ImageInfoProperties imageInfo) {
        this.imageInfo = imageInfo;
        return this;
    }

    /**
     * Get the domainInfo property: Domain configurations of session hosts.
     *
     * @return the domainInfo value.
     */
    public DomainInfoProperties domainInfo() {
        return this.domainInfo;
    }

    /**
     * Set the domainInfo property: Domain configurations of session hosts.
     *
     * @param domainInfo the domainInfo value to set.
     * @return the SessionHostConfigurationProperties object itself.
     */
    public SessionHostConfigurationProperties withDomainInfo(DomainInfoProperties domainInfo) {
        this.domainInfo = domainInfo;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (imageInfo() != null) {
            imageInfo().validate();
        }
        if (domainInfo() != null) {
            domainInfo().validate();
        }
    }
}
