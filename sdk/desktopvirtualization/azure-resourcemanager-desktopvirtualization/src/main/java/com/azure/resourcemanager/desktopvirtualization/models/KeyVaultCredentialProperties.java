// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Credentials kept in the keyvault. */
@Fluent
public final class KeyVaultCredentialProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(KeyVaultCredentialProperties.class);

    /*
     * The user name to the account.
     */
    @JsonProperty(value = "userName")
    private String username;

    /*
     * The keyvault resource id to the keyvault secrets.
     */
    @JsonProperty(value = "passwordKeyVaultResourceId")
    private String passwordKeyVaultResourceId;

    /*
     * The keyvault secret name the password is stored in.
     */
    @JsonProperty(value = "passwordSecretName")
    private String passwordSecretName;

    /**
     * Get the username property: The user name to the account.
     *
     * @return the username value.
     */
    public String username() {
        return this.username;
    }

    /**
     * Set the username property: The user name to the account.
     *
     * @param username the username value to set.
     * @return the KeyVaultCredentialProperties object itself.
     */
    public KeyVaultCredentialProperties withUsername(String username) {
        this.username = username;
        return this;
    }

    /**
     * Get the passwordKeyVaultResourceId property: The keyvault resource id to the keyvault secrets.
     *
     * @return the passwordKeyVaultResourceId value.
     */
    public String passwordKeyVaultResourceId() {
        return this.passwordKeyVaultResourceId;
    }

    /**
     * Set the passwordKeyVaultResourceId property: The keyvault resource id to the keyvault secrets.
     *
     * @param passwordKeyVaultResourceId the passwordKeyVaultResourceId value to set.
     * @return the KeyVaultCredentialProperties object itself.
     */
    public KeyVaultCredentialProperties withPasswordKeyVaultResourceId(String passwordKeyVaultResourceId) {
        this.passwordKeyVaultResourceId = passwordKeyVaultResourceId;
        return this;
    }

    /**
     * Get the passwordSecretName property: The keyvault secret name the password is stored in.
     *
     * @return the passwordSecretName value.
     */
    public String passwordSecretName() {
        return this.passwordSecretName;
    }

    /**
     * Set the passwordSecretName property: The keyvault secret name the password is stored in.
     *
     * @param passwordSecretName the passwordSecretName value to set.
     * @return the KeyVaultCredentialProperties object itself.
     */
    public KeyVaultCredentialProperties withPasswordSecretName(String passwordSecretName) {
        this.passwordSecretName = passwordSecretName;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
