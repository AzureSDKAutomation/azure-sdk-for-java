// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Represents properties for a hostpool update. */
@Fluent
public final class HostPoolControlParameter {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(HostPoolControlParameter.class);

    /*
     * Action types for controlling hostpool update.
     */
    @JsonProperty(value = "action")
    private HostPoolUpdateAction action;

    /*
     * The cancel message sent to the user on the session host.
     */
    @JsonProperty(value = "message")
    private String message;

    /**
     * Get the action property: Action types for controlling hostpool update.
     *
     * @return the action value.
     */
    public HostPoolUpdateAction action() {
        return this.action;
    }

    /**
     * Set the action property: Action types for controlling hostpool update.
     *
     * @param action the action value to set.
     * @return the HostPoolControlParameter object itself.
     */
    public HostPoolControlParameter withAction(HostPoolUpdateAction action) {
        this.action = action;
        return this;
    }

    /**
     * Get the message property: The cancel message sent to the user on the session host.
     *
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: The cancel message sent to the user on the session host.
     *
     * @param message the message value to set.
     * @return the HostPoolControlParameter object itself.
     */
    public HostPoolControlParameter withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
