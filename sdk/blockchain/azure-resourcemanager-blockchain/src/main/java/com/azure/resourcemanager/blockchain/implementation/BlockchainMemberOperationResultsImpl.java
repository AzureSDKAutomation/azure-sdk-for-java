// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.blockchain.implementation;

import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.blockchain.BlockchainManager;
import com.azure.resourcemanager.blockchain.fluent.BlockchainMemberOperationResultsClient;
import com.azure.resourcemanager.blockchain.fluent.models.OperationResultInner;
import com.azure.resourcemanager.blockchain.models.BlockchainMemberOperationResults;
import com.azure.resourcemanager.blockchain.models.OperationResult;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class BlockchainMemberOperationResultsImpl implements BlockchainMemberOperationResults {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(BlockchainMemberOperationResultsImpl.class);

    private final BlockchainMemberOperationResultsClient innerClient;

    private final BlockchainManager serviceManager;

    public BlockchainMemberOperationResultsImpl(
        BlockchainMemberOperationResultsClient innerClient, BlockchainManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public OperationResult get(String locationName, String operationId) {
        OperationResultInner inner = this.serviceClient().get(locationName, operationId);
        if (inner != null) {
            return new OperationResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public OperationResult get(String locationName, String operationId, Context context) {
        OperationResultInner inner = this.serviceClient().get(locationName, operationId, context);
        if (inner != null) {
            return new OperationResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private BlockchainMemberOperationResultsClient serviceClient() {
        return this.innerClient;
    }

    private BlockchainManager manager() {
        return this.serviceManager;
    }
}
