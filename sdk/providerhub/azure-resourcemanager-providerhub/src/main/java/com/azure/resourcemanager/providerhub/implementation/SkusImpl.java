// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.providerhub.ProviderhubManager;
import com.azure.resourcemanager.providerhub.fluent.SkusClient;
import com.azure.resourcemanager.providerhub.fluent.models.SkuResourceInner;
import com.azure.resourcemanager.providerhub.models.SkuResource;
import com.azure.resourcemanager.providerhub.models.Skus;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class SkusImpl implements Skus {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SkusImpl.class);

    private final SkusClient innerClient;

    private final ProviderhubManager serviceManager;

    public SkusImpl(SkusClient innerClient, ProviderhubManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public SkuResource get(String providerNamespace, String resourceType, String sku) {
        SkuResourceInner inner = this.serviceClient().get(providerNamespace, resourceType, sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> getWithResponse(
        String providerNamespace, String resourceType, String sku, Context context) {
        Response<SkuResourceInner> inner =
            this.serviceClient().getWithResponse(providerNamespace, resourceType, sku, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SkuResource createOrUpdate(String providerNamespace, String resourceType, String sku) {
        SkuResourceInner inner = this.serviceClient().createOrUpdate(providerNamespace, resourceType, sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> createOrUpdateWithResponse(
        String providerNamespace, String resourceType, String sku, Context context) {
        Response<SkuResourceInner> inner =
            this.serviceClient().createOrUpdateWithResponse(providerNamespace, resourceType, sku, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void delete(String providerNamespace, String resourceType, String sku) {
        this.serviceClient().delete(providerNamespace, resourceType, sku);
    }

    public Response<Void> deleteWithResponse(
        String providerNamespace, String resourceType, String sku, Context context) {
        return this.serviceClient().deleteWithResponse(providerNamespace, resourceType, sku, context);
    }

    public SkuResource getNestedResourceTypeFirst(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst, String sku) {
        SkuResourceInner inner =
            this
                .serviceClient()
                .getNestedResourceTypeFirst(providerNamespace, resourceType, nestedResourceTypeFirst, sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> getNestedResourceTypeFirstWithResponse(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst, String sku, Context context) {
        Response<SkuResourceInner> inner =
            this
                .serviceClient()
                .getNestedResourceTypeFirstWithResponse(
                    providerNamespace, resourceType, nestedResourceTypeFirst, sku, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SkuResource createOrUpdateNestedResourceTypeFirst(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst, String sku) {
        SkuResourceInner inner =
            this
                .serviceClient()
                .createOrUpdateNestedResourceTypeFirst(providerNamespace, resourceType, nestedResourceTypeFirst, sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> createOrUpdateNestedResourceTypeFirstWithResponse(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst, String sku, Context context) {
        Response<SkuResourceInner> inner =
            this
                .serviceClient()
                .createOrUpdateNestedResourceTypeFirstWithResponse(
                    providerNamespace, resourceType, nestedResourceTypeFirst, sku, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void deleteNestedResourceTypeFirst(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst, String sku) {
        this
            .serviceClient()
            .deleteNestedResourceTypeFirst(providerNamespace, resourceType, nestedResourceTypeFirst, sku);
    }

    public Response<Void> deleteNestedResourceTypeFirstWithResponse(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst, String sku, Context context) {
        return this
            .serviceClient()
            .deleteNestedResourceTypeFirstWithResponse(
                providerNamespace, resourceType, nestedResourceTypeFirst, sku, context);
    }

    public SkuResource getNestedResourceTypeSecond(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String sku) {
        SkuResourceInner inner =
            this
                .serviceClient()
                .getNestedResourceTypeSecond(
                    providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond, sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> getNestedResourceTypeSecondWithResponse(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String sku,
        Context context) {
        Response<SkuResourceInner> inner =
            this
                .serviceClient()
                .getNestedResourceTypeSecondWithResponse(
                    providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond, sku, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SkuResource createOrUpdateNestedResourceTypeSecond(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String sku) {
        SkuResourceInner inner =
            this
                .serviceClient()
                .createOrUpdateNestedResourceTypeSecond(
                    providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond, sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> createOrUpdateNestedResourceTypeSecondWithResponse(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String sku,
        Context context) {
        Response<SkuResourceInner> inner =
            this
                .serviceClient()
                .createOrUpdateNestedResourceTypeSecondWithResponse(
                    providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond, sku, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void deleteNestedResourceTypeSecond(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String sku) {
        this
            .serviceClient()
            .deleteNestedResourceTypeSecond(
                providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond, sku);
    }

    public Response<Void> deleteNestedResourceTypeSecondWithResponse(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String sku,
        Context context) {
        return this
            .serviceClient()
            .deleteNestedResourceTypeSecondWithResponse(
                providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond, sku, context);
    }

    public SkuResource getNestedResourceTypeThird(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird,
        String sku) {
        SkuResourceInner inner =
            this
                .serviceClient()
                .getNestedResourceTypeThird(
                    providerNamespace,
                    resourceType,
                    nestedResourceTypeFirst,
                    nestedResourceTypeSecond,
                    nestedResourceTypeThird,
                    sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> getNestedResourceTypeThirdWithResponse(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird,
        String sku,
        Context context) {
        Response<SkuResourceInner> inner =
            this
                .serviceClient()
                .getNestedResourceTypeThirdWithResponse(
                    providerNamespace,
                    resourceType,
                    nestedResourceTypeFirst,
                    nestedResourceTypeSecond,
                    nestedResourceTypeThird,
                    sku,
                    context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SkuResource createOrUpdateNestedResourceTypeThird(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird,
        String sku) {
        SkuResourceInner inner =
            this
                .serviceClient()
                .createOrUpdateNestedResourceTypeThird(
                    providerNamespace,
                    resourceType,
                    nestedResourceTypeFirst,
                    nestedResourceTypeSecond,
                    nestedResourceTypeThird,
                    sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> createOrUpdateNestedResourceTypeThirdWithResponse(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird,
        String sku,
        Context context) {
        Response<SkuResourceInner> inner =
            this
                .serviceClient()
                .createOrUpdateNestedResourceTypeThirdWithResponse(
                    providerNamespace,
                    resourceType,
                    nestedResourceTypeFirst,
                    nestedResourceTypeSecond,
                    nestedResourceTypeThird,
                    sku,
                    context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void deleteNestedResourceTypeThird(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird,
        String sku) {
        this
            .serviceClient()
            .deleteNestedResourceTypeThird(
                providerNamespace,
                resourceType,
                nestedResourceTypeFirst,
                nestedResourceTypeSecond,
                nestedResourceTypeThird,
                sku);
    }

    public Response<Void> deleteNestedResourceTypeThirdWithResponse(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird,
        String sku,
        Context context) {
        return this
            .serviceClient()
            .deleteNestedResourceTypeThirdWithResponse(
                providerNamespace,
                resourceType,
                nestedResourceTypeFirst,
                nestedResourceTypeSecond,
                nestedResourceTypeThird,
                sku,
                context);
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrations(String providerNamespace, String resourceType) {
        PagedIterable<SkuResourceInner> inner =
            this.serviceClient().listByResourceTypeRegistrations(providerNamespace, resourceType);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrations(
        String providerNamespace, String resourceType, Context context) {
        PagedIterable<SkuResourceInner> inner =
            this.serviceClient().listByResourceTypeRegistrations(providerNamespace, resourceType, context);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrationsNestedResourceTypeFirst(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst) {
        PagedIterable<SkuResourceInner> inner =
            this
                .serviceClient()
                .listByResourceTypeRegistrationsNestedResourceTypeFirst(
                    providerNamespace, resourceType, nestedResourceTypeFirst);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrationsNestedResourceTypeFirst(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst, Context context) {
        PagedIterable<SkuResourceInner> inner =
            this
                .serviceClient()
                .listByResourceTypeRegistrationsNestedResourceTypeFirst(
                    providerNamespace, resourceType, nestedResourceTypeFirst, context);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrationsNestedResourceTypeSecond(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond) {
        PagedIterable<SkuResourceInner> inner =
            this
                .serviceClient()
                .listByResourceTypeRegistrationsNestedResourceTypeSecond(
                    providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrationsNestedResourceTypeSecond(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        Context context) {
        PagedIterable<SkuResourceInner> inner =
            this
                .serviceClient()
                .listByResourceTypeRegistrationsNestedResourceTypeSecond(
                    providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond, context);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrationsNestedResourceTypeThird(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird) {
        PagedIterable<SkuResourceInner> inner =
            this
                .serviceClient()
                .listByResourceTypeRegistrationsNestedResourceTypeThird(
                    providerNamespace,
                    resourceType,
                    nestedResourceTypeFirst,
                    nestedResourceTypeSecond,
                    nestedResourceTypeThird);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrationsNestedResourceTypeThird(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird,
        Context context) {
        PagedIterable<SkuResourceInner> inner =
            this
                .serviceClient()
                .listByResourceTypeRegistrationsNestedResourceTypeThird(
                    providerNamespace,
                    resourceType,
                    nestedResourceTypeFirst,
                    nestedResourceTypeSecond,
                    nestedResourceTypeThird,
                    context);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    public SkuResource get(String providerNamespace, String resourceType, String sku) {
        SkuResourceInner inner = this.serviceClient().get(providerNamespace, resourceType, sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> getWithResponse(
        String providerNamespace, String resourceType, String sku, Context context) {
        Response<SkuResourceInner> inner =
            this.serviceClient().getWithResponse(providerNamespace, resourceType, sku, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SkuResource createOrUpdate(String providerNamespace, String resourceType, String sku) {
        SkuResourceInner inner = this.serviceClient().createOrUpdate(providerNamespace, resourceType, sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> createOrUpdateWithResponse(
        String providerNamespace, String resourceType, String sku, Context context) {
        Response<SkuResourceInner> inner =
            this.serviceClient().createOrUpdateWithResponse(providerNamespace, resourceType, sku, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void delete(String providerNamespace, String resourceType, String sku) {
        this.serviceClient().delete(providerNamespace, resourceType, sku);
    }

    public Response<Void> deleteWithResponse(
        String providerNamespace, String resourceType, String sku, Context context) {
        return this.serviceClient().deleteWithResponse(providerNamespace, resourceType, sku, context);
    }

    public SkuResource getNestedResourceTypeFirst(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst, String sku) {
        SkuResourceInner inner =
            this
                .serviceClient()
                .getNestedResourceTypeFirst(providerNamespace, resourceType, nestedResourceTypeFirst, sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> getNestedResourceTypeFirstWithResponse(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst, String sku, Context context) {
        Response<SkuResourceInner> inner =
            this
                .serviceClient()
                .getNestedResourceTypeFirstWithResponse(
                    providerNamespace, resourceType, nestedResourceTypeFirst, sku, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SkuResource createOrUpdateNestedResourceTypeFirst(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst, String sku) {
        SkuResourceInner inner =
            this
                .serviceClient()
                .createOrUpdateNestedResourceTypeFirst(providerNamespace, resourceType, nestedResourceTypeFirst, sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> createOrUpdateNestedResourceTypeFirstWithResponse(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst, String sku, Context context) {
        Response<SkuResourceInner> inner =
            this
                .serviceClient()
                .createOrUpdateNestedResourceTypeFirstWithResponse(
                    providerNamespace, resourceType, nestedResourceTypeFirst, sku, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void deleteNestedResourceTypeFirst(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst, String sku) {
        this
            .serviceClient()
            .deleteNestedResourceTypeFirst(providerNamespace, resourceType, nestedResourceTypeFirst, sku);
    }

    public Response<Void> deleteNestedResourceTypeFirstWithResponse(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst, String sku, Context context) {
        return this
            .serviceClient()
            .deleteNestedResourceTypeFirstWithResponse(
                providerNamespace, resourceType, nestedResourceTypeFirst, sku, context);
    }

    public SkuResource getNestedResourceTypeSecond(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String sku) {
        SkuResourceInner inner =
            this
                .serviceClient()
                .getNestedResourceTypeSecond(
                    providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond, sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> getNestedResourceTypeSecondWithResponse(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String sku,
        Context context) {
        Response<SkuResourceInner> inner =
            this
                .serviceClient()
                .getNestedResourceTypeSecondWithResponse(
                    providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond, sku, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SkuResource createOrUpdateNestedResourceTypeSecond(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String sku) {
        SkuResourceInner inner =
            this
                .serviceClient()
                .createOrUpdateNestedResourceTypeSecond(
                    providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond, sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> createOrUpdateNestedResourceTypeSecondWithResponse(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String sku,
        Context context) {
        Response<SkuResourceInner> inner =
            this
                .serviceClient()
                .createOrUpdateNestedResourceTypeSecondWithResponse(
                    providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond, sku, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void deleteNestedResourceTypeSecond(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String sku) {
        this
            .serviceClient()
            .deleteNestedResourceTypeSecond(
                providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond, sku);
    }

    public Response<Void> deleteNestedResourceTypeSecondWithResponse(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String sku,
        Context context) {
        return this
            .serviceClient()
            .deleteNestedResourceTypeSecondWithResponse(
                providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond, sku, context);
    }

    public SkuResource getNestedResourceTypeThird(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird,
        String sku) {
        SkuResourceInner inner =
            this
                .serviceClient()
                .getNestedResourceTypeThird(
                    providerNamespace,
                    resourceType,
                    nestedResourceTypeFirst,
                    nestedResourceTypeSecond,
                    nestedResourceTypeThird,
                    sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> getNestedResourceTypeThirdWithResponse(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird,
        String sku,
        Context context) {
        Response<SkuResourceInner> inner =
            this
                .serviceClient()
                .getNestedResourceTypeThirdWithResponse(
                    providerNamespace,
                    resourceType,
                    nestedResourceTypeFirst,
                    nestedResourceTypeSecond,
                    nestedResourceTypeThird,
                    sku,
                    context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SkuResource createOrUpdateNestedResourceTypeThird(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird,
        String sku) {
        SkuResourceInner inner =
            this
                .serviceClient()
                .createOrUpdateNestedResourceTypeThird(
                    providerNamespace,
                    resourceType,
                    nestedResourceTypeFirst,
                    nestedResourceTypeSecond,
                    nestedResourceTypeThird,
                    sku);
        if (inner != null) {
            return new SkuResourceImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuResource> createOrUpdateNestedResourceTypeThirdWithResponse(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird,
        String sku,
        Context context) {
        Response<SkuResourceInner> inner =
            this
                .serviceClient()
                .createOrUpdateNestedResourceTypeThirdWithResponse(
                    providerNamespace,
                    resourceType,
                    nestedResourceTypeFirst,
                    nestedResourceTypeSecond,
                    nestedResourceTypeThird,
                    sku,
                    context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuResourceImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void deleteNestedResourceTypeThird(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird,
        String sku) {
        this
            .serviceClient()
            .deleteNestedResourceTypeThird(
                providerNamespace,
                resourceType,
                nestedResourceTypeFirst,
                nestedResourceTypeSecond,
                nestedResourceTypeThird,
                sku);
    }

    public Response<Void> deleteNestedResourceTypeThirdWithResponse(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird,
        String sku,
        Context context) {
        return this
            .serviceClient()
            .deleteNestedResourceTypeThirdWithResponse(
                providerNamespace,
                resourceType,
                nestedResourceTypeFirst,
                nestedResourceTypeSecond,
                nestedResourceTypeThird,
                sku,
                context);
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrations(String providerNamespace, String resourceType) {
        PagedIterable<SkuResourceInner> inner =
            this.serviceClient().listByResourceTypeRegistrations(providerNamespace, resourceType);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrations(
        String providerNamespace, String resourceType, Context context) {
        PagedIterable<SkuResourceInner> inner =
            this.serviceClient().listByResourceTypeRegistrations(providerNamespace, resourceType, context);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrationsNestedResourceTypeFirst(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst) {
        PagedIterable<SkuResourceInner> inner =
            this
                .serviceClient()
                .listByResourceTypeRegistrationsNestedResourceTypeFirst(
                    providerNamespace, resourceType, nestedResourceTypeFirst);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrationsNestedResourceTypeFirst(
        String providerNamespace, String resourceType, String nestedResourceTypeFirst, Context context) {
        PagedIterable<SkuResourceInner> inner =
            this
                .serviceClient()
                .listByResourceTypeRegistrationsNestedResourceTypeFirst(
                    providerNamespace, resourceType, nestedResourceTypeFirst, context);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrationsNestedResourceTypeSecond(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond) {
        PagedIterable<SkuResourceInner> inner =
            this
                .serviceClient()
                .listByResourceTypeRegistrationsNestedResourceTypeSecond(
                    providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrationsNestedResourceTypeSecond(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        Context context) {
        PagedIterable<SkuResourceInner> inner =
            this
                .serviceClient()
                .listByResourceTypeRegistrationsNestedResourceTypeSecond(
                    providerNamespace, resourceType, nestedResourceTypeFirst, nestedResourceTypeSecond, context);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrationsNestedResourceTypeThird(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird) {
        PagedIterable<SkuResourceInner> inner =
            this
                .serviceClient()
                .listByResourceTypeRegistrationsNestedResourceTypeThird(
                    providerNamespace,
                    resourceType,
                    nestedResourceTypeFirst,
                    nestedResourceTypeSecond,
                    nestedResourceTypeThird);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    public PagedIterable<SkuResource> listByResourceTypeRegistrationsNestedResourceTypeThird(
        String providerNamespace,
        String resourceType,
        String nestedResourceTypeFirst,
        String nestedResourceTypeSecond,
        String nestedResourceTypeThird,
        Context context) {
        PagedIterable<SkuResourceInner> inner =
            this
                .serviceClient()
                .listByResourceTypeRegistrationsNestedResourceTypeThird(
                    providerNamespace,
                    resourceType,
                    nestedResourceTypeFirst,
                    nestedResourceTypeSecond,
                    nestedResourceTypeThird,
                    context);
        return inner.mapPage(inner1 -> new SkuResourceImpl(inner1, this.manager()));
    }

    private SkusClient serviceClient() {
        return this.innerClient;
    }

    private ProviderhubManager manager() {
        return this.serviceManager;
    }
}
