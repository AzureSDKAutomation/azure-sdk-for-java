// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.providerhub.ProviderhubManager;
import com.azure.resourcemanager.providerhub.fluent.ResourceTypeRegistrationOperationsClient;
import com.azure.resourcemanager.providerhub.fluent.models.ResourceTypeRegistrationInner;
import com.azure.resourcemanager.providerhub.models.ResourceTypeRegistration;
import com.azure.resourcemanager.providerhub.models.ResourceTypeRegistrationOperations;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ResourceTypeRegistrationOperationsImpl implements ResourceTypeRegistrationOperations {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ResourceTypeRegistrationOperationsImpl.class);

    private final ResourceTypeRegistrationOperationsClient innerClient;

    private final ProviderhubManager serviceManager;

    public ResourceTypeRegistrationOperationsImpl(
        ResourceTypeRegistrationOperationsClient innerClient, ProviderhubManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public ResourceTypeRegistration createOrUpdate(String providerNamespace, String resourceType) {
        ResourceTypeRegistrationInner inner = this.serviceClient().createOrUpdate(providerNamespace, resourceType);
        if (inner != null) {
            return new ResourceTypeRegistrationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public ResourceTypeRegistration createOrUpdate(String providerNamespace, String resourceType, Context context) {
        ResourceTypeRegistrationInner inner =
            this.serviceClient().createOrUpdate(providerNamespace, resourceType, context);
        if (inner != null) {
            return new ResourceTypeRegistrationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void deleteByResourceGroup(String providerNamespace, String resourceType) {
        this.serviceClient().delete(providerNamespace, resourceType);
    }

    public Response<Void> deleteWithResponse(String providerNamespace, String resourceType, Context context) {
        return this.serviceClient().deleteWithResponse(providerNamespace, resourceType, context);
    }

    public ResourceTypeRegistration createOrUpdate(String providerNamespace, String resourceType) {
        ResourceTypeRegistrationInner inner = this.serviceClient().createOrUpdate(providerNamespace, resourceType);
        if (inner != null) {
            return new ResourceTypeRegistrationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public ResourceTypeRegistration createOrUpdate(String providerNamespace, String resourceType, Context context) {
        ResourceTypeRegistrationInner inner =
            this.serviceClient().createOrUpdate(providerNamespace, resourceType, context);
        if (inner != null) {
            return new ResourceTypeRegistrationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void delete(String providerNamespace, String resourceType) {
        this.serviceClient().delete(providerNamespace, resourceType);
    }

    public Response<Void> deleteWithResponse(String providerNamespace, String resourceType, Context context) {
        return this.serviceClient().deleteWithResponse(providerNamespace, resourceType, context);
    }

    private ResourceTypeRegistrationOperationsClient serviceClient() {
        return this.innerClient;
    }

    private ProviderhubManager manager() {
        return this.serviceManager;
    }
}
