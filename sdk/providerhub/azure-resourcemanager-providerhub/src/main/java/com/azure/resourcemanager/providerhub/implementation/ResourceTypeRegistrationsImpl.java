// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.providerhub.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.providerhub.ProviderhubManager;
import com.azure.resourcemanager.providerhub.fluent.ResourceTypeRegistrationsClient;
import com.azure.resourcemanager.providerhub.fluent.models.ResourceTypeRegistrationInner;
import com.azure.resourcemanager.providerhub.models.ResourceTypeRegistration;
import com.azure.resourcemanager.providerhub.models.ResourceTypeRegistrations;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ResourceTypeRegistrationsImpl implements ResourceTypeRegistrations {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ResourceTypeRegistrationsImpl.class);

    private final ResourceTypeRegistrationsClient innerClient;

    private final ProviderhubManager serviceManager;

    public ResourceTypeRegistrationsImpl(
        ResourceTypeRegistrationsClient innerClient, ProviderhubManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public ResourceTypeRegistration get(String providerNamespace, String resourceType) {
        ResourceTypeRegistrationInner inner = this.serviceClient().get(providerNamespace, resourceType);
        if (inner != null) {
            return new ResourceTypeRegistrationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ResourceTypeRegistration> getWithResponse(
        String providerNamespace, String resourceType, Context context) {
        Response<ResourceTypeRegistrationInner> inner =
            this.serviceClient().getWithResponse(providerNamespace, resourceType, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ResourceTypeRegistrationImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PagedIterable<ResourceTypeRegistration> listByProviderRegistration(String providerNamespace) {
        PagedIterable<ResourceTypeRegistrationInner> inner =
            this.serviceClient().listByProviderRegistration(providerNamespace);
        return inner.mapPage(inner1 -> new ResourceTypeRegistrationImpl(inner1, this.manager()));
    }

    public PagedIterable<ResourceTypeRegistration> listByProviderRegistration(
        String providerNamespace, Context context) {
        PagedIterable<ResourceTypeRegistrationInner> inner =
            this.serviceClient().listByProviderRegistration(providerNamespace, context);
        return inner.mapPage(inner1 -> new ResourceTypeRegistrationImpl(inner1, this.manager()));
    }

    public ResourceTypeRegistration get(String providerNamespace, String resourceType) {
        ResourceTypeRegistrationInner inner = this.serviceClient().get(providerNamespace, resourceType);
        if (inner != null) {
            return new ResourceTypeRegistrationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ResourceTypeRegistration> getWithResponse(
        String providerNamespace, String resourceType, Context context) {
        Response<ResourceTypeRegistrationInner> inner =
            this.serviceClient().getWithResponse(providerNamespace, resourceType, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ResourceTypeRegistrationImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PagedIterable<ResourceTypeRegistration> listByProviderRegistration(String providerNamespace) {
        PagedIterable<ResourceTypeRegistrationInner> inner =
            this.serviceClient().listByProviderRegistration(providerNamespace);
        return inner.mapPage(inner1 -> new ResourceTypeRegistrationImpl(inner1, this.manager()));
    }

    public PagedIterable<ResourceTypeRegistration> listByProviderRegistration(
        String providerNamespace, Context context) {
        PagedIterable<ResourceTypeRegistrationInner> inner =
            this.serviceClient().listByProviderRegistration(providerNamespace, context);
        return inner.mapPage(inner1 -> new ResourceTypeRegistrationImpl(inner1, this.manager()));
    }

    private ResourceTypeRegistrationsClient serviceClient() {
        return this.innerClient;
    }

    private ProviderhubManager manager() {
        return this.serviceManager;
    }
}
