// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cloudshell.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Settings for virtual network setup. */
@Fluent
public final class VnetSettings {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(VnetSettings.class);

    /*
     * The storage profile of the user settings.
     */
    @JsonProperty(value = "isolatedStorageProfile")
    private StorageProfile isolatedStorageProfile;

    /*
     * Location of virtual network.
     */
    @JsonProperty(value = "location")
    private String location;

    /*
     * Resource id of network profile.
     */
    @JsonProperty(value = "networkProfileResourceId")
    private String networkProfileResourceId;

    /*
     * Resource id of relay namespace.
     */
    @JsonProperty(value = "relayNamespaceResourceId")
    private String relayNamespaceResourceId;

    /**
     * Get the isolatedStorageProfile property: The storage profile of the user settings.
     *
     * @return the isolatedStorageProfile value.
     */
    public StorageProfile isolatedStorageProfile() {
        return this.isolatedStorageProfile;
    }

    /**
     * Set the isolatedStorageProfile property: The storage profile of the user settings.
     *
     * @param isolatedStorageProfile the isolatedStorageProfile value to set.
     * @return the VnetSettings object itself.
     */
    public VnetSettings withIsolatedStorageProfile(StorageProfile isolatedStorageProfile) {
        this.isolatedStorageProfile = isolatedStorageProfile;
        return this;
    }

    /**
     * Get the location property: Location of virtual network.
     *
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: Location of virtual network.
     *
     * @param location the location value to set.
     * @return the VnetSettings object itself.
     */
    public VnetSettings withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the networkProfileResourceId property: Resource id of network profile.
     *
     * @return the networkProfileResourceId value.
     */
    public String networkProfileResourceId() {
        return this.networkProfileResourceId;
    }

    /**
     * Set the networkProfileResourceId property: Resource id of network profile.
     *
     * @param networkProfileResourceId the networkProfileResourceId value to set.
     * @return the VnetSettings object itself.
     */
    public VnetSettings withNetworkProfileResourceId(String networkProfileResourceId) {
        this.networkProfileResourceId = networkProfileResourceId;
        return this;
    }

    /**
     * Get the relayNamespaceResourceId property: Resource id of relay namespace.
     *
     * @return the relayNamespaceResourceId value.
     */
    public String relayNamespaceResourceId() {
        return this.relayNamespaceResourceId;
    }

    /**
     * Set the relayNamespaceResourceId property: Resource id of relay namespace.
     *
     * @param relayNamespaceResourceId the relayNamespaceResourceId value to set.
     * @return the VnetSettings object itself.
     */
    public VnetSettings withRelayNamespaceResourceId(String relayNamespaceResourceId) {
        this.relayNamespaceResourceId = relayNamespaceResourceId;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (isolatedStorageProfile() != null) {
            isolatedStorageProfile().validate();
        }
    }
}
