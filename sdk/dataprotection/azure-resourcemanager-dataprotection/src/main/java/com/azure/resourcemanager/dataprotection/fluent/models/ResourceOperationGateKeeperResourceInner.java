// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.dataprotection.models.DppIdentityDetails;
import com.azure.resourcemanager.dataprotection.models.DppTrackedResource;
import com.azure.resourcemanager.dataprotection.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** ResourceOperationGateKeeper Resource. */
@JsonFlatten
@Immutable
public class ResourceOperationGateKeeperResourceInner extends DppTrackedResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ResourceOperationGateKeeperResourceInner.class);

    /*
     * Provisioning state of the resource
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * {readonly} List of operations that can be protected by the
     * ResourceOperationGateKeeper
     */
    @JsonProperty(value = "properties.operations", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> operations;

    /*
     * LastTime ResourceOperationGateKeeper is updated
     */
    @JsonProperty(value = "properties.lastLockUpdateTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastLockUpdateTime;

    /**
     * Get the provisioningState property: Provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the operations property: {readonly} List of operations that can be protected by the
     * ResourceOperationGateKeeper.
     *
     * @return the operations value.
     */
    public List<String> operations() {
        return this.operations;
    }

    /**
     * Get the lastLockUpdateTime property: LastTime ResourceOperationGateKeeper is updated.
     *
     * @return the lastLockUpdateTime value.
     */
    public OffsetDateTime lastLockUpdateTime() {
        return this.lastLockUpdateTime;
    }

    /** {@inheritDoc} */
    @Override
    public ResourceOperationGateKeeperResourceInner withEtag(String etag) {
        super.withEtag(etag);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ResourceOperationGateKeeperResourceInner withIdentity(DppIdentityDetails identity) {
        super.withIdentity(identity);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ResourceOperationGateKeeperResourceInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ResourceOperationGateKeeperResourceInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
