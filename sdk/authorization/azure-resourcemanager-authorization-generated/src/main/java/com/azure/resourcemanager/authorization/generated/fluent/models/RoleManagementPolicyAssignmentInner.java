// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.authorization.generated.models.PolicyAssignmentProperties;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Role management policy. */
@JsonFlatten
@Fluent
public class RoleManagementPolicyAssignmentInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RoleManagementPolicyAssignmentInner.class);

    /*
     * The role management policy Id.
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /*
     * The role management policy name.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * The role management policy type.
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /*
     * The role management policy scope.
     */
    @JsonProperty(value = "properties.scope")
    private String scope;

    /*
     * The role definition of management policy assignment.
     */
    @JsonProperty(value = "properties.roleDefinitionId")
    private String roleDefinitionId;

    /*
     * The policy id role management policy assignment.
     */
    @JsonProperty(value = "properties.policyId")
    private String policyId;

    /*
     * Additional properties of scope, role definition and policy
     */
    @JsonProperty(value = "properties.policyAssignmentProperties", access = JsonProperty.Access.WRITE_ONLY)
    private PolicyAssignmentProperties policyAssignmentProperties;

    /**
     * Get the id property: The role management policy Id.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the name property: The role management policy name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the type property: The role management policy type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Get the scope property: The role management policy scope.
     *
     * @return the scope value.
     */
    public String scope() {
        return this.scope;
    }

    /**
     * Set the scope property: The role management policy scope.
     *
     * @param scope the scope value to set.
     * @return the RoleManagementPolicyAssignmentInner object itself.
     */
    public RoleManagementPolicyAssignmentInner withScope(String scope) {
        this.scope = scope;
        return this;
    }

    /**
     * Get the roleDefinitionId property: The role definition of management policy assignment.
     *
     * @return the roleDefinitionId value.
     */
    public String roleDefinitionId() {
        return this.roleDefinitionId;
    }

    /**
     * Set the roleDefinitionId property: The role definition of management policy assignment.
     *
     * @param roleDefinitionId the roleDefinitionId value to set.
     * @return the RoleManagementPolicyAssignmentInner object itself.
     */
    public RoleManagementPolicyAssignmentInner withRoleDefinitionId(String roleDefinitionId) {
        this.roleDefinitionId = roleDefinitionId;
        return this;
    }

    /**
     * Get the policyId property: The policy id role management policy assignment.
     *
     * @return the policyId value.
     */
    public String policyId() {
        return this.policyId;
    }

    /**
     * Set the policyId property: The policy id role management policy assignment.
     *
     * @param policyId the policyId value to set.
     * @return the RoleManagementPolicyAssignmentInner object itself.
     */
    public RoleManagementPolicyAssignmentInner withPolicyId(String policyId) {
        this.policyId = policyId;
        return this;
    }

    /**
     * Get the policyAssignmentProperties property: Additional properties of scope, role definition and policy.
     *
     * @return the policyAssignmentProperties value.
     */
    public PolicyAssignmentProperties policyAssignmentProperties() {
        return this.policyAssignmentProperties;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (policyAssignmentProperties() != null) {
            policyAssignmentProperties().validate();
        }
    }
}
