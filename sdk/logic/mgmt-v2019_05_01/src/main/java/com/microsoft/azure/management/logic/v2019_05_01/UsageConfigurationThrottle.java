/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.logic.v2019_05_01;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The usage configuration throttle.
 */
public class UsageConfigurationThrottle {
    /**
     * The number of operations to throttle at.
     */
    @JsonProperty(value = "threshold")
    private Double threshold;

    /**
     * The usage configuration throttle period.
     */
    @JsonProperty(value = "period")
    private UsageConfigurationThrottlePeriod periodProperty;

    /**
     * The trigger statuses to throttle.
     */
    @JsonProperty(value = "triggerStatuses")
    private List<WorkflowStatus> triggerStatuses;

    /**
     * The action statuses to throttle.
     */
    @JsonProperty(value = "actionStatuses")
    private List<WorkflowStatus> actionStatuses;

    /**
     * Get the number of operations to throttle at.
     *
     * @return the threshold value
     */
    public Double threshold() {
        return this.threshold;
    }

    /**
     * Set the number of operations to throttle at.
     *
     * @param threshold the threshold value to set
     * @return the UsageConfigurationThrottle object itself.
     */
    public UsageConfigurationThrottle withThreshold(Double threshold) {
        this.threshold = threshold;
        return this;
    }

    /**
     * Get the usage configuration throttle period.
     *
     * @return the periodProperty value
     */
    public UsageConfigurationThrottlePeriod periodProperty() {
        return this.periodProperty;
    }

    /**
     * Set the usage configuration throttle period.
     *
     * @param periodProperty the periodProperty value to set
     * @return the UsageConfigurationThrottle object itself.
     */
    public UsageConfigurationThrottle withPeriodProperty(UsageConfigurationThrottlePeriod periodProperty) {
        this.periodProperty = periodProperty;
        return this;
    }

    /**
     * Get the trigger statuses to throttle.
     *
     * @return the triggerStatuses value
     */
    public List<WorkflowStatus> triggerStatuses() {
        return this.triggerStatuses;
    }

    /**
     * Set the trigger statuses to throttle.
     *
     * @param triggerStatuses the triggerStatuses value to set
     * @return the UsageConfigurationThrottle object itself.
     */
    public UsageConfigurationThrottle withTriggerStatuses(List<WorkflowStatus> triggerStatuses) {
        this.triggerStatuses = triggerStatuses;
        return this;
    }

    /**
     * Get the action statuses to throttle.
     *
     * @return the actionStatuses value
     */
    public List<WorkflowStatus> actionStatuses() {
        return this.actionStatuses;
    }

    /**
     * Set the action statuses to throttle.
     *
     * @param actionStatuses the actionStatuses value to set
     * @return the UsageConfigurationThrottle object itself.
     */
    public UsageConfigurationThrottle withActionStatuses(List<WorkflowStatus> actionStatuses) {
        this.actionStatuses = actionStatuses;
        return this;
    }

}
