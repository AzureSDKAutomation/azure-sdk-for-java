/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.policy.v2020_09_01.implementation;

import java.util.List;
import com.microsoft.azure.management.policy.v2020_09_01.ResourceTypeAliases;
import com.microsoft.azure.management.policy.v2020_09_01.DataEffect;
import com.microsoft.azure.management.policy.v2020_09_01.DataManifestCustomResourceFunctionDefinition;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * The data policy manifest.
 */
@JsonFlatten
public class DataPolicyManifestInner extends ProxyResource {
    /**
     * The list of namespaces for the data policy manifest.
     */
    @JsonProperty(value = "properties.namespaces")
    private List<String> namespaces;

    /**
     * The policy mode of the data policy manifest.
     */
    @JsonProperty(value = "properties.policyMode")
    private String policyMode;

    /**
     * A value indicating whether policy mode is allowed only in built-in
     * definitions.
     */
    @JsonProperty(value = "properties.isBuiltInOnly")
    private Boolean isBuiltInOnly;

    /**
     * An array of resource type aliases.
     */
    @JsonProperty(value = "properties.resourceTypeAliases")
    private List<ResourceTypeAliases> resourceTypeAliases;

    /**
     * The effect definition.
     */
    @JsonProperty(value = "properties.effects")
    private List<DataEffect> effects;

    /**
     * The non-alias field accessor values that can be used in the policy rule.
     */
    @JsonProperty(value = "properties.fieldValues")
    private List<String> fieldValues;

    /**
     * The standard resource functions (subscription and/or resourceGroup).
     */
    @JsonProperty(value = "properties.resourceFunctions.standard")
    private List<String> standard;

    /**
     * An array of data manifest custom resource definition.
     */
    @JsonProperty(value = "properties.resourceFunctions.custom")
    private List<DataManifestCustomResourceFunctionDefinition> custom;

    /**
     * Get the list of namespaces for the data policy manifest.
     *
     * @return the namespaces value
     */
    public List<String> namespaces() {
        return this.namespaces;
    }

    /**
     * Set the list of namespaces for the data policy manifest.
     *
     * @param namespaces the namespaces value to set
     * @return the DataPolicyManifestInner object itself.
     */
    public DataPolicyManifestInner withNamespaces(List<String> namespaces) {
        this.namespaces = namespaces;
        return this;
    }

    /**
     * Get the policy mode of the data policy manifest.
     *
     * @return the policyMode value
     */
    public String policyMode() {
        return this.policyMode;
    }

    /**
     * Set the policy mode of the data policy manifest.
     *
     * @param policyMode the policyMode value to set
     * @return the DataPolicyManifestInner object itself.
     */
    public DataPolicyManifestInner withPolicyMode(String policyMode) {
        this.policyMode = policyMode;
        return this;
    }

    /**
     * Get a value indicating whether policy mode is allowed only in built-in definitions.
     *
     * @return the isBuiltInOnly value
     */
    public Boolean isBuiltInOnly() {
        return this.isBuiltInOnly;
    }

    /**
     * Set a value indicating whether policy mode is allowed only in built-in definitions.
     *
     * @param isBuiltInOnly the isBuiltInOnly value to set
     * @return the DataPolicyManifestInner object itself.
     */
    public DataPolicyManifestInner withIsBuiltInOnly(Boolean isBuiltInOnly) {
        this.isBuiltInOnly = isBuiltInOnly;
        return this;
    }

    /**
     * Get an array of resource type aliases.
     *
     * @return the resourceTypeAliases value
     */
    public List<ResourceTypeAliases> resourceTypeAliases() {
        return this.resourceTypeAliases;
    }

    /**
     * Set an array of resource type aliases.
     *
     * @param resourceTypeAliases the resourceTypeAliases value to set
     * @return the DataPolicyManifestInner object itself.
     */
    public DataPolicyManifestInner withResourceTypeAliases(List<ResourceTypeAliases> resourceTypeAliases) {
        this.resourceTypeAliases = resourceTypeAliases;
        return this;
    }

    /**
     * Get the effect definition.
     *
     * @return the effects value
     */
    public List<DataEffect> effects() {
        return this.effects;
    }

    /**
     * Set the effect definition.
     *
     * @param effects the effects value to set
     * @return the DataPolicyManifestInner object itself.
     */
    public DataPolicyManifestInner withEffects(List<DataEffect> effects) {
        this.effects = effects;
        return this;
    }

    /**
     * Get the non-alias field accessor values that can be used in the policy rule.
     *
     * @return the fieldValues value
     */
    public List<String> fieldValues() {
        return this.fieldValues;
    }

    /**
     * Set the non-alias field accessor values that can be used in the policy rule.
     *
     * @param fieldValues the fieldValues value to set
     * @return the DataPolicyManifestInner object itself.
     */
    public DataPolicyManifestInner withFieldValues(List<String> fieldValues) {
        this.fieldValues = fieldValues;
        return this;
    }

    /**
     * Get the standard resource functions (subscription and/or resourceGroup).
     *
     * @return the standard value
     */
    public List<String> standard() {
        return this.standard;
    }

    /**
     * Set the standard resource functions (subscription and/or resourceGroup).
     *
     * @param standard the standard value to set
     * @return the DataPolicyManifestInner object itself.
     */
    public DataPolicyManifestInner withStandard(List<String> standard) {
        this.standard = standard;
        return this;
    }

    /**
     * Get an array of data manifest custom resource definition.
     *
     * @return the custom value
     */
    public List<DataManifestCustomResourceFunctionDefinition> custom() {
        return this.custom;
    }

    /**
     * Set an array of data manifest custom resource definition.
     *
     * @param custom the custom value to set
     * @return the DataPolicyManifestInner object itself.
     */
    public DataPolicyManifestInner withCustom(List<DataManifestCustomResourceFunctionDefinition> custom) {
        this.custom = custom;
        return this;
    }

}
