// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.synapse.fluent.models.ManagedPrivateEndpointInner;

/** An immutable client-side representation of ManagedPrivateEndpoint. */
public interface ManagedPrivateEndpoint {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the privateLinkResourceId property: The ARM resource ID of the resource to which the managed private
     * endpoint is created.
     *
     * @return the privateLinkResourceId value.
     */
    String privateLinkResourceId();

    /**
     * Gets the groupId property: The groupId to which the managed private endpoint is created.
     *
     * @return the groupId value.
     */
    String groupId();

    /**
     * Gets the provisioningState property: The managed private endpoint provisioning state.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the connectionState property: The managed private endpoint connection state.
     *
     * @return the connectionState value.
     */
    ManagedPrivateEndpointConnectionState connectionState();

    /**
     * Gets the isReserved property: Denotes whether the managed private endpoint is reserved.
     *
     * @return the isReserved value.
     */
    Boolean isReserved();

    /**
     * Gets the inner com.azure.resourcemanager.synapse.fluent.models.ManagedPrivateEndpointInner object.
     *
     * @return the inner object.
     */
    ManagedPrivateEndpointInner innerModel();

    /** The entirety of the ManagedPrivateEndpoint definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The ManagedPrivateEndpoint definition stages. */
    interface DefinitionStages {
        /** The first stage of the ManagedPrivateEndpoint definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the ManagedPrivateEndpoint definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, workspaceName, managedVirtualNetworkName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param workspaceName The name of the workspace.
             * @param managedVirtualNetworkName Managed virtual network name.
             * @return the next definition stage.
             */
            WithCreate withExistingManagedVirtualNetwork(
                String resourceGroupName, String workspaceName, String managedVirtualNetworkName);
        }
        /**
         * The stage of the ManagedPrivateEndpoint definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithPrivateLinkResourceId,
                DefinitionStages.WithGroupId,
                DefinitionStages.WithConnectionState {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ManagedPrivateEndpoint create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ManagedPrivateEndpoint create(Context context);
        }
        /** The stage of the ManagedPrivateEndpoint definition allowing to specify privateLinkResourceId. */
        interface WithPrivateLinkResourceId {
            /**
             * Specifies the privateLinkResourceId property: The ARM resource ID of the resource to which the managed
             * private endpoint is created.
             *
             * @param privateLinkResourceId The ARM resource ID of the resource to which the managed private endpoint is
             *     created.
             * @return the next definition stage.
             */
            WithCreate withPrivateLinkResourceId(String privateLinkResourceId);
        }
        /** The stage of the ManagedPrivateEndpoint definition allowing to specify groupId. */
        interface WithGroupId {
            /**
             * Specifies the groupId property: The groupId to which the managed private endpoint is created.
             *
             * @param groupId The groupId to which the managed private endpoint is created.
             * @return the next definition stage.
             */
            WithCreate withGroupId(String groupId);
        }
        /** The stage of the ManagedPrivateEndpoint definition allowing to specify connectionState. */
        interface WithConnectionState {
            /**
             * Specifies the connectionState property: The managed private endpoint connection state.
             *
             * @param connectionState The managed private endpoint connection state.
             * @return the next definition stage.
             */
            WithCreate withConnectionState(ManagedPrivateEndpointConnectionState connectionState);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ManagedPrivateEndpoint refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ManagedPrivateEndpoint refresh(Context context);
}
