// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.synapse.models.ManagedPrivateEndpointConnectionState;
import com.azure.resourcemanager.synapse.models.SystemData;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Managed private endpoint. */
@JsonFlatten
@Fluent
public class ManagedPrivateEndpointInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ManagedPrivateEndpointInner.class);

    /*
     * Metadata pertaining to creation and last modification of the resource.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * The ARM resource ID of the resource to which the managed private
     * endpoint is created
     */
    @JsonProperty(value = "properties.privateLinkResourceId")
    private String privateLinkResourceId;

    /*
     * The groupId to which the managed private endpoint is created
     */
    @JsonProperty(value = "properties.groupId")
    private String groupId;

    /*
     * The managed private endpoint provisioning state
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /*
     * The managed private endpoint connection state
     */
    @JsonProperty(value = "properties.connectionState")
    private ManagedPrivateEndpointConnectionState connectionState;

    /*
     * Denotes whether the managed private endpoint is reserved
     */
    @JsonProperty(value = "properties.isReserved", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isReserved;

    /**
     * Get the systemData property: Metadata pertaining to creation and last modification of the resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the privateLinkResourceId property: The ARM resource ID of the resource to which the managed private endpoint
     * is created.
     *
     * @return the privateLinkResourceId value.
     */
    public String privateLinkResourceId() {
        return this.privateLinkResourceId;
    }

    /**
     * Set the privateLinkResourceId property: The ARM resource ID of the resource to which the managed private endpoint
     * is created.
     *
     * @param privateLinkResourceId the privateLinkResourceId value to set.
     * @return the ManagedPrivateEndpointInner object itself.
     */
    public ManagedPrivateEndpointInner withPrivateLinkResourceId(String privateLinkResourceId) {
        this.privateLinkResourceId = privateLinkResourceId;
        return this;
    }

    /**
     * Get the groupId property: The groupId to which the managed private endpoint is created.
     *
     * @return the groupId value.
     */
    public String groupId() {
        return this.groupId;
    }

    /**
     * Set the groupId property: The groupId to which the managed private endpoint is created.
     *
     * @param groupId the groupId value to set.
     * @return the ManagedPrivateEndpointInner object itself.
     */
    public ManagedPrivateEndpointInner withGroupId(String groupId) {
        this.groupId = groupId;
        return this;
    }

    /**
     * Get the provisioningState property: The managed private endpoint provisioning state.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the connectionState property: The managed private endpoint connection state.
     *
     * @return the connectionState value.
     */
    public ManagedPrivateEndpointConnectionState connectionState() {
        return this.connectionState;
    }

    /**
     * Set the connectionState property: The managed private endpoint connection state.
     *
     * @param connectionState the connectionState value to set.
     * @return the ManagedPrivateEndpointInner object itself.
     */
    public ManagedPrivateEndpointInner withConnectionState(ManagedPrivateEndpointConnectionState connectionState) {
        this.connectionState = connectionState;
        return this;
    }

    /**
     * Get the isReserved property: Denotes whether the managed private endpoint is reserved.
     *
     * @return the isReserved value.
     */
    public Boolean isReserved() {
        return this.isReserved;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (systemData() != null) {
            systemData().validate();
        }
        if (connectionState() != null) {
            connectionState().validate();
        }
    }
}
