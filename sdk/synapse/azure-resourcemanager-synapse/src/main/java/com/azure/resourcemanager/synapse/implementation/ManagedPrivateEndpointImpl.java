// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.synapse.SynapseManager;
import com.azure.resourcemanager.synapse.fluent.models.ManagedPrivateEndpointInner;
import com.azure.resourcemanager.synapse.models.ManagedPrivateEndpoint;
import com.azure.resourcemanager.synapse.models.ManagedPrivateEndpointConnectionState;

public final class ManagedPrivateEndpointImpl implements ManagedPrivateEndpoint, ManagedPrivateEndpoint.Definition {
    private ManagedPrivateEndpointInner innerObject;

    private final SynapseManager serviceManager;

    ManagedPrivateEndpointImpl(ManagedPrivateEndpointInner innerObject, SynapseManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String privateLinkResourceId() {
        return this.innerModel().privateLinkResourceId();
    }

    public String groupId() {
        return this.innerModel().groupId();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public ManagedPrivateEndpointConnectionState connectionState() {
        return this.innerModel().connectionState();
    }

    public Boolean isReserved() {
        return this.innerModel().isReserved();
    }

    public ManagedPrivateEndpointInner innerModel() {
        return this.innerObject;
    }

    private SynapseManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String managedVirtualNetworkName;

    private String managedPrivateEndpointName;

    public ManagedPrivateEndpointImpl withExistingManagedVirtualNetwork(
        String resourceGroupName, String workspaceName, String managedVirtualNetworkName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        this.managedVirtualNetworkName = managedVirtualNetworkName;
        return this;
    }

    public ManagedPrivateEndpoint create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedPrivateEndpoints()
                .createWithResponse(
                    resourceGroupName,
                    workspaceName,
                    managedVirtualNetworkName,
                    managedPrivateEndpointName,
                    this.innerModel(),
                    Context.NONE)
                .getValue();
        return this;
    }

    public ManagedPrivateEndpoint create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedPrivateEndpoints()
                .createWithResponse(
                    resourceGroupName,
                    workspaceName,
                    managedVirtualNetworkName,
                    managedPrivateEndpointName,
                    this.innerModel(),
                    context)
                .getValue();
        return this;
    }

    ManagedPrivateEndpointImpl(String name, SynapseManager serviceManager) {
        this.innerObject = new ManagedPrivateEndpointInner();
        this.serviceManager = serviceManager;
        this.managedPrivateEndpointName = name;
    }

    public ManagedPrivateEndpoint refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedPrivateEndpoints()
                .getWithResponse(
                    resourceGroupName,
                    workspaceName,
                    managedVirtualNetworkName,
                    managedPrivateEndpointName,
                    Context.NONE)
                .getValue();
        return this;
    }

    public ManagedPrivateEndpoint refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getManagedPrivateEndpoints()
                .getWithResponse(
                    resourceGroupName, workspaceName, managedVirtualNetworkName, managedPrivateEndpointName, context)
                .getValue();
        return this;
    }

    public ManagedPrivateEndpointImpl withPrivateLinkResourceId(String privateLinkResourceId) {
        this.innerModel().withPrivateLinkResourceId(privateLinkResourceId);
        return this;
    }

    public ManagedPrivateEndpointImpl withGroupId(String groupId) {
        this.innerModel().withGroupId(groupId);
        return this;
    }

    public ManagedPrivateEndpointImpl withConnectionState(ManagedPrivateEndpointConnectionState connectionState) {
        this.innerModel().withConnectionState(connectionState);
        return this;
    }
}
