// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.synapse.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The connection state of a managed private endpoint. */
@Fluent
public final class ManagedPrivateEndpointConnectionState {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ManagedPrivateEndpointConnectionState.class);

    /*
     * The approval status
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private String status;

    /*
     * The managed private endpoint description
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * The actions required on the managed private endpoint
     */
    @JsonProperty(value = "actionsRequired")
    private String actionsRequired;

    /**
     * Get the status property: The approval status.
     *
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Get the description property: The managed private endpoint description.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The managed private endpoint description.
     *
     * @param description the description value to set.
     * @return the ManagedPrivateEndpointConnectionState object itself.
     */
    public ManagedPrivateEndpointConnectionState withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the actionsRequired property: The actions required on the managed private endpoint.
     *
     * @return the actionsRequired value.
     */
    public String actionsRequired() {
        return this.actionsRequired;
    }

    /**
     * Set the actionsRequired property: The actions required on the managed private endpoint.
     *
     * @param actionsRequired the actionsRequired value to set.
     * @return the ManagedPrivateEndpointConnectionState object itself.
     */
    public ManagedPrivateEndpointConnectionState withActionsRequired(String actionsRequired) {
        this.actionsRequired = actionsRequired;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
