/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.synapse.v2019_06_01_preview.implementation;

import com.microsoft.azure.management.synapse.v2019_06_01_preview.SqlPoolWorkspaceWorkloadGroup;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;

class SqlPoolWorkspaceWorkloadGroupImpl extends IndexableRefreshableWrapperImpl<SqlPoolWorkspaceWorkloadGroup, WorkloadGroupInner> implements SqlPoolWorkspaceWorkloadGroup {
    private final SynapseManager manager;
    private String resourceGroupName;
    private String workspaceName;
    private String sqlPoolName;
    private String workloadGroupName;

    SqlPoolWorkspaceWorkloadGroupImpl(WorkloadGroupInner inner,  SynapseManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.workspaceName = IdParsingUtils.getValueFromIdByName(inner.id(), "workspaces");
        this.sqlPoolName = IdParsingUtils.getValueFromIdByName(inner.id(), "sqlPools");
        this.workloadGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "workloadGroups");
    }

    @Override
    public SynapseManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<WorkloadGroupInner> getInnerAsync() {
        SqlPoolWorkloadGroupsInner client = this.manager().inner().sqlPoolWorkloadGroups();
        return client.getAsync(this.resourceGroupName, this.workspaceName, this.sqlPoolName, this.workloadGroupName);
    }



    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String importance() {
        return this.inner().importance();
    }

    @Override
    public int maxResourcePercent() {
        return this.inner().maxResourcePercent();
    }

    @Override
    public Double maxResourcePercentPerRequest() {
        return this.inner().maxResourcePercentPerRequest();
    }

    @Override
    public int minResourcePercent() {
        return this.inner().minResourcePercent();
    }

    @Override
    public double minResourcePercentPerRequest() {
        return this.inner().minResourcePercentPerRequest();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public Integer queryExecutionTimeout() {
        return this.inner().queryExecutionTimeout();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

}
