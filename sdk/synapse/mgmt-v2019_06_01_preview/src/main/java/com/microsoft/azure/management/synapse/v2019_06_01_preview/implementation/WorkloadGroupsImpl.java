/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.synapse.v2019_06_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.synapse.v2019_06_01_preview.WorkloadGroups;
import rx.Completable;

class WorkloadGroupsImpl extends WrapperImpl<WorkloadGroupsInner> implements WorkloadGroups {
    private final SynapseManager manager;

    WorkloadGroupsImpl(SynapseManager manager) {
        super(manager.inner().workloadGroups());
        this.manager = manager;
    }

    public SynapseManager manager() {
        return this.manager;
    }

    @Override
    public SqlPoolWorkspaceWorkloadGroupModelImpl define(String name) {
        return wrapModel(name);
    }

    private SqlPoolWorkspaceWorkloadGroupModelImpl wrapModel(WorkloadGroupInner inner) {
        return  new SqlPoolWorkspaceWorkloadGroupModelImpl(inner, manager());
    }

    private SqlPoolWorkspaceWorkloadGroupModelImpl wrapModel(String name) {
        return new SqlPoolWorkspaceWorkloadGroupModelImpl(name, this.manager());
    }

    @Override
    public Completable deleteAsync(String resourceGroupName, String workspaceName, String sqlPoolName, String workloadGroupName) {
        WorkloadGroupsInner client = this.inner();
        return client.deleteAsync(resourceGroupName, workspaceName, sqlPoolName, workloadGroupName).toCompletable();
    }

}
