// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.resourcehealth.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.resourcehealth.ResourcehealthManager;
import com.azure.resourcemanager.resourcehealth.fluent.PotentialOutagesClient;
import com.azure.resourcemanager.resourcehealth.fluent.models.PotentialOutagesGetResultInner;
import com.azure.resourcemanager.resourcehealth.models.PotentialOutages;
import com.azure.resourcemanager.resourcehealth.models.PotentialOutagesGetResult;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class PotentialOutagesImpl implements PotentialOutages {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PotentialOutagesImpl.class);

    private final PotentialOutagesClient innerClient;

    private final ResourcehealthManager serviceManager;

    public PotentialOutagesImpl(PotentialOutagesClient innerClient, ResourcehealthManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PotentialOutagesGetResult get(String outageId) {
        PotentialOutagesGetResultInner inner = this.serviceClient().get(outageId);
        if (inner != null) {
            return new PotentialOutagesGetResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<PotentialOutagesGetResult> getWithResponse(String outageId, Context context) {
        Response<PotentialOutagesGetResultInner> inner = this.serviceClient().getWithResponse(outageId, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new PotentialOutagesGetResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PagedIterable<PotentialOutagesGetResult> list() {
        PagedIterable<PotentialOutagesGetResultInner> inner = this.serviceClient().list();
        return inner.mapPage(inner1 -> new PotentialOutagesGetResultImpl(inner1, this.manager()));
    }

    public PagedIterable<PotentialOutagesGetResult> list(Context context) {
        PagedIterable<PotentialOutagesGetResultInner> inner = this.serviceClient().list(context);
        return inner.mapPage(inner1 -> new PotentialOutagesGetResultImpl(inner1, this.manager()));
    }

    private PotentialOutagesClient serviceClient() {
        return this.innerClient;
    }

    private ResourcehealthManager manager() {
        return this.serviceManager;
    }
}
