// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.avs.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** An iSCSI volume from Microsoft.StoragePool provider. */
@Fluent
public final class DiskPoolVolume {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DiskPoolVolume.class);

    /*
     * iSCSI provider target IP address list
     */
    @JsonProperty(value = "endpoints")
    private List<String> endpoints;

    /*
     * Name of the LUN to be used
     */
    @JsonProperty(value = "lunName")
    private String lunName;

    /**
     * Get the endpoints property: iSCSI provider target IP address list.
     *
     * @return the endpoints value.
     */
    public List<String> endpoints() {
        return this.endpoints;
    }

    /**
     * Set the endpoints property: iSCSI provider target IP address list.
     *
     * @param endpoints the endpoints value to set.
     * @return the DiskPoolVolume object itself.
     */
    public DiskPoolVolume withEndpoints(List<String> endpoints) {
        this.endpoints = endpoints;
        return this;
    }

    /**
     * Get the lunName property: Name of the LUN to be used.
     *
     * @return the lunName value.
     */
    public String lunName() {
        return this.lunName;
    }

    /**
     * Set the lunName property: Name of the LUN to be used.
     *
     * @param lunName the lunName value to set.
     * @return the DiskPoolVolume object itself.
     */
    public DiskPoolVolume withLunName(String lunName) {
        this.lunName = lunName;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
