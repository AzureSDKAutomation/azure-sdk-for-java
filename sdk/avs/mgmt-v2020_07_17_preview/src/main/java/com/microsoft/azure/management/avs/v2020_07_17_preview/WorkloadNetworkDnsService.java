/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.avs.v2020_07_17_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.avs.v2020_07_17_preview.implementation.WorkloadNetworkDnsServiceInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.avs.v2020_07_17_preview.implementation.AVSManager;
import java.util.List;

/**
 * Type representing WorkloadNetworkDnsService.
 */
public interface WorkloadNetworkDnsService extends HasInner<WorkloadNetworkDnsServiceInner>, Indexable, Updatable<WorkloadNetworkDnsService.Update>, HasManager<AVSManager> {
    /**
     * @return the defaultDnsZone value.
     */
    String defaultDnsZone();

    /**
     * @return the displayName value.
     */
    String displayName();

    /**
     * @return the dnsServiceIp value.
     */
    String dnsServiceIp();

    /**
     * @return the fqdnZones value.
     */
    List<String> fqdnZones();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the logLevel value.
     */
    DnsServiceLogLevelEnum logLevel();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the provisioningState value.
     */
    WorkloadNetworkDnsServiceProvisioningState provisioningState();

    /**
     * @return the revision value.
     */
    Long revision();

    /**
     * @return the status value.
     */
    DnsServiceStatusEnum status();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the WorkloadNetworkDnsService definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithWorkloadNetwork, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of WorkloadNetworkDnsService definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a WorkloadNetworkDnsService definition.
         */
        interface Blank extends WithWorkloadNetwork {
        }

        /**
         * The stage of the workloadnetworkdnsservice definition allowing to specify WorkloadNetwork.
         */
        interface WithWorkloadNetwork {
           /**
            * Specifies resourceGroupName, privateCloudName.
            * @param resourceGroupName The name of the resource group. The name is case insensitive
            * @param privateCloudName Name of the private cloud
            * @return the next definition stage
            */
            WithCreate withExistingWorkloadNetwork(String resourceGroupName, String privateCloudName);
        }

        /**
         * The stage of the workloadnetworkdnsservice definition allowing to specify DefaultDnsZone.
         */
        interface WithDefaultDnsZone {
            /**
             * Specifies defaultDnsZone.
             * @param defaultDnsZone Default DNS zone of the DNS Service
             * @return the next definition stage
             */
            WithCreate withDefaultDnsZone(String defaultDnsZone);
        }

        /**
         * The stage of the workloadnetworkdnsservice definition allowing to specify DisplayName.
         */
        interface WithDisplayName {
            /**
             * Specifies displayName.
             * @param displayName Display name of the DNS Service
             * @return the next definition stage
             */
            WithCreate withDisplayName(String displayName);
        }

        /**
         * The stage of the workloadnetworkdnsservice definition allowing to specify DnsServiceIp.
         */
        interface WithDnsServiceIp {
            /**
             * Specifies dnsServiceIp.
             * @param dnsServiceIp DNS service IP of the DNS Service
             * @return the next definition stage
             */
            WithCreate withDnsServiceIp(String dnsServiceIp);
        }

        /**
         * The stage of the workloadnetworkdnsservice definition allowing to specify FqdnZones.
         */
        interface WithFqdnZones {
            /**
             * Specifies fqdnZones.
             * @param fqdnZones FQDN zones of the DNS Service
             * @return the next definition stage
             */
            WithCreate withFqdnZones(List<String> fqdnZones);
        }

        /**
         * The stage of the workloadnetworkdnsservice definition allowing to specify LogLevel.
         */
        interface WithLogLevel {
            /**
             * Specifies logLevel.
             * @param logLevel DNS Service log level. Possible values include: 'DEBUG', 'INFO', 'WARNING', 'ERROR', 'FATAL'
             * @return the next definition stage
             */
            WithCreate withLogLevel(DnsServiceLogLevelEnum logLevel);
        }

        /**
         * The stage of the workloadnetworkdnsservice definition allowing to specify Revision.
         */
        interface WithRevision {
            /**
             * Specifies revision.
             * @param revision NSX revision number
             * @return the next definition stage
             */
            WithCreate withRevision(Long revision);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<WorkloadNetworkDnsService>, DefinitionStages.WithDefaultDnsZone, DefinitionStages.WithDisplayName, DefinitionStages.WithDnsServiceIp, DefinitionStages.WithFqdnZones, DefinitionStages.WithLogLevel, DefinitionStages.WithRevision {
        }
    }
    /**
     * The template for a WorkloadNetworkDnsService update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<WorkloadNetworkDnsService>, UpdateStages.WithDefaultDnsZone, UpdateStages.WithDisplayName, UpdateStages.WithDnsServiceIp, UpdateStages.WithFqdnZones, UpdateStages.WithLogLevel, UpdateStages.WithRevision {
    }

    /**
     * Grouping of WorkloadNetworkDnsService update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the workloadnetworkdnsservice update allowing to specify DefaultDnsZone.
         */
        interface WithDefaultDnsZone {
            /**
             * Specifies defaultDnsZone.
             * @param defaultDnsZone Default DNS zone of the DNS Service
             * @return the next update stage
             */
            Update withDefaultDnsZone(String defaultDnsZone);
        }

        /**
         * The stage of the workloadnetworkdnsservice update allowing to specify DisplayName.
         */
        interface WithDisplayName {
            /**
             * Specifies displayName.
             * @param displayName Display name of the DNS Service
             * @return the next update stage
             */
            Update withDisplayName(String displayName);
        }

        /**
         * The stage of the workloadnetworkdnsservice update allowing to specify DnsServiceIp.
         */
        interface WithDnsServiceIp {
            /**
             * Specifies dnsServiceIp.
             * @param dnsServiceIp DNS service IP of the DNS Service
             * @return the next update stage
             */
            Update withDnsServiceIp(String dnsServiceIp);
        }

        /**
         * The stage of the workloadnetworkdnsservice update allowing to specify FqdnZones.
         */
        interface WithFqdnZones {
            /**
             * Specifies fqdnZones.
             * @param fqdnZones FQDN zones of the DNS Service
             * @return the next update stage
             */
            Update withFqdnZones(List<String> fqdnZones);
        }

        /**
         * The stage of the workloadnetworkdnsservice update allowing to specify LogLevel.
         */
        interface WithLogLevel {
            /**
             * Specifies logLevel.
             * @param logLevel DNS Service log level. Possible values include: 'DEBUG', 'INFO', 'WARNING', 'ERROR', 'FATAL'
             * @return the next update stage
             */
            Update withLogLevel(DnsServiceLogLevelEnum logLevel);
        }

        /**
         * The stage of the workloadnetworkdnsservice update allowing to specify Revision.
         */
        interface WithRevision {
            /**
             * Specifies revision.
             * @param revision NSX revision number
             * @return the next update stage
             */
            Update withRevision(Long revision);
        }

    }
}
