/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.avs.v2020_07_17_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.avs.v2020_07_17_preview.implementation.GlobalReachConnectionInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.avs.v2020_07_17_preview.implementation.AVSManager;

/**
 * Type representing GlobalReachConnection.
 */
public interface GlobalReachConnection extends HasInner<GlobalReachConnectionInner>, Indexable, Refreshable<GlobalReachConnection>, Updatable<GlobalReachConnection.Update>, HasManager<AVSManager> {
    /**
     * @return the addressPrefix value.
     */
    String addressPrefix();

    /**
     * @return the authorizationKey value.
     */
    String authorizationKey();

    /**
     * @return the circuitConnectionStatus value.
     */
    GlobalReachConnectionStatus circuitConnectionStatus();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the peerExpressRouteCircuit value.
     */
    String peerExpressRouteCircuit();

    /**
     * @return the provisioningState value.
     */
    GlobalReachConnectionProvisioningState provisioningState();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the GlobalReachConnection definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithPrivateCloud, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of GlobalReachConnection definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a GlobalReachConnection definition.
         */
        interface Blank extends WithPrivateCloud {
        }

        /**
         * The stage of the globalreachconnection definition allowing to specify PrivateCloud.
         */
        interface WithPrivateCloud {
           /**
            * Specifies resourceGroupName, privateCloudName.
            * @param resourceGroupName The name of the resource group. The name is case insensitive
            * @param privateCloudName The name of the private cloud
            * @return the next definition stage
            */
            WithCreate withExistingPrivateCloud(String resourceGroupName, String privateCloudName);
        }

        /**
         * The stage of the globalreachconnection definition allowing to specify AuthorizationKey.
         */
        interface WithAuthorizationKey {
            /**
             * Specifies authorizationKey.
             * @param authorizationKey Authorization key from the peer express route used for the global reach connection
             * @return the next definition stage
             */
            WithCreate withAuthorizationKey(String authorizationKey);
        }

        /**
         * The stage of the globalreachconnection definition allowing to specify PeerExpressRouteCircuit.
         */
        interface WithPeerExpressRouteCircuit {
            /**
             * Specifies peerExpressRouteCircuit.
             * @param peerExpressRouteCircuit Identifier of the ExpressRoute Circuit to peer with in the global reach connection
             * @return the next definition stage
             */
            WithCreate withPeerExpressRouteCircuit(String peerExpressRouteCircuit);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<GlobalReachConnection>, DefinitionStages.WithAuthorizationKey, DefinitionStages.WithPeerExpressRouteCircuit {
        }
    }
    /**
     * The template for a GlobalReachConnection update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<GlobalReachConnection>, UpdateStages.WithAuthorizationKey, UpdateStages.WithPeerExpressRouteCircuit {
    }

    /**
     * Grouping of GlobalReachConnection update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the globalreachconnection update allowing to specify AuthorizationKey.
         */
        interface WithAuthorizationKey {
            /**
             * Specifies authorizationKey.
             * @param authorizationKey Authorization key from the peer express route used for the global reach connection
             * @return the next update stage
             */
            Update withAuthorizationKey(String authorizationKey);
        }

        /**
         * The stage of the globalreachconnection update allowing to specify PeerExpressRouteCircuit.
         */
        interface WithPeerExpressRouteCircuit {
            /**
             * Specifies peerExpressRouteCircuit.
             * @param peerExpressRouteCircuit Identifier of the ExpressRoute Circuit to peer with in the global reach connection
             * @return the next update stage
             */
            Update withPeerExpressRouteCircuit(String peerExpressRouteCircuit);
        }

    }
}
