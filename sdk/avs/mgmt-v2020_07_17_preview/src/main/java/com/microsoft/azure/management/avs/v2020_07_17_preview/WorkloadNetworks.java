/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.avs.v2020_07_17_preview;

import rx.Completable;
import rx.Observable;

/**
 * Type representing WorkloadNetworks.
 */
public interface WorkloadNetworks {
    /**
     * Begins definition for a new Segment resource.
     * @param name resource name.
     * @return the first stage of the new Segment definition.
     */
    WorkloadNetworkSegment.DefinitionStages.Blank defineSegment(String name);

    /**
     * Begins definition for a new DhcpConfiguration resource.
     * @param name resource name.
     * @return the first stage of the new DhcpConfiguration definition.
     */
    WorkloadNetworkDhcp.DefinitionStages.Blank defineDhcpConfiguration(String name);

    /**
     * Begins definition for a new PortMirroringProfile resource.
     * @param name resource name.
     * @return the first stage of the new PortMirroringProfile definition.
     */
    WorkloadNetworkPortMirroring.DefinitionStages.Blank definePortMirroringProfile(String name);

    /**
     * Begins definition for a new VmGroup resource.
     * @param name resource name.
     * @return the first stage of the new VmGroup definition.
     */
    WorkloadNetworkVMGroup.DefinitionStages.Blank defineVmGroup(String name);

    /**
     * Begins definition for a new DnsService resource.
     * @param name resource name.
     * @return the first stage of the new DnsService definition.
     */
    WorkloadNetworkDnsService.DefinitionStages.Blank defineDnsService(String name);

    /**
     * Begins definition for a new DnsZone resource.
     * @param name resource name.
     * @return the first stage of the new DnsZone definition.
     */
    WorkloadNetworkDnsZone.DefinitionStages.Blank defineDnsZone(String name);

    /**
     * List of segments in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkSegment> listSegmentsAsync(final String resourceGroupName, final String privateCloudName);

    /**
     * Get a segment by id in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param segmentId NSX Segment identifier. Generally the same as the Segment's display name
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkSegment> getSegmentAsync(String resourceGroupName, String privateCloudName, String segmentId);

    /**
     * Delete a segment by id in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param segmentId NSX Segment identifier. Generally the same as the Segment's display name
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteSegmentAsync(String resourceGroupName, String privateCloudName, String segmentId);

    /**
     * List dhcp in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkDhcp> listDhcpAsync(final String resourceGroupName, final String privateCloudName);

    /**
     * Get dhcp by id in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dhcpId NSX DHCP identifier. Generally the same as the DHCP display name
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkDhcp> getDhcpAsync(String resourceGroupName, String dhcpId, String privateCloudName);

    /**
     * Delete dhcp by id in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param dhcpId NSX DHCP identifier. Generally the same as the DHCP display name
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteDhcpAsync(String resourceGroupName, String privateCloudName, String dhcpId);

    /**
     * List of gateways in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkGateway> listGatewaysAsync(final String resourceGroupName, final String privateCloudName);

    /**
     * Get a gateway by id in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param gatewayId NSX Gateway identifier. Generally the same as the Gateway's display name
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkGateway> getGatewayAsync(String resourceGroupName, String privateCloudName, String gatewayId);

    /**
     * List of port mirroring profiles in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkPortMirroring> listPortMirroringAsync(final String resourceGroupName, final String privateCloudName);

    /**
     * Get a port mirroring profile by id in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param portMirroringId NSX Port Mirroring identifier. Generally the same as the Port Mirroring display name
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkPortMirroring> getPortMirroringAsync(String resourceGroupName, String privateCloudName, String portMirroringId);

    /**
     * Delete a port mirroring profile by id in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param portMirroringId NSX Port Mirroring identifier. Generally the same as the Port Mirroring display name
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deletePortMirroringAsync(String resourceGroupName, String portMirroringId, String privateCloudName);

    /**
     * List of vm groups in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkVMGroup> listVMGroupsAsync(final String resourceGroupName, final String privateCloudName);

    /**
     * Get a vm group by id in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param vmGroupId NSX VM Group identifier. Generally the same as the VM Group's display name
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkVMGroup> getVMGroupAsync(String resourceGroupName, String privateCloudName, String vmGroupId);

    /**
     * Delete a vm group by id in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmGroupId NSX VM Group identifier. Generally the same as the VM Group's display name
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteVMGroupAsync(String resourceGroupName, String vmGroupId, String privateCloudName);

    /**
     * List of virtual machines in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkVirtualMachine> listVirtualMachinesAsync(final String resourceGroupName, final String privateCloudName);

    /**
     * Get a virtual machine by id in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param virtualMachineId NSX Virtual Machine identifier.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkVirtualMachine> getVirtualMachineAsync(String resourceGroupName, String privateCloudName, String virtualMachineId);

    /**
     * List of DNS services in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkDnsService> listDnsServicesAsync(final String resourceGroupName, final String privateCloudName);

    /**
     * Get a DNS service by id in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param dnsServiceId NSX DNS Service identifier. Generally the same as the DNS Service's display name
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkDnsService> getDnsServiceAsync(String resourceGroupName, String privateCloudName, String dnsServiceId);

    /**
     * Delete a DNS service by id in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsServiceId NSX DNS Service identifier. Generally the same as the DNS Service's display name
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteDnsServiceAsync(String resourceGroupName, String dnsServiceId, String privateCloudName);

    /**
     * List of DNS zones in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkDnsZone> listDnsZonesAsync(final String resourceGroupName, final String privateCloudName);

    /**
     * Get a DNS zone by id in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateCloudName Name of the private cloud
     * @param dnsZoneId NSX DNS Zone identifier. Generally the same as the DNS Zone's display name
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkloadNetworkDnsZone> getDnsZoneAsync(String resourceGroupName, String privateCloudName, String dnsZoneId);

    /**
     * Delete a DNS zone by id in a private cloud workload network.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param dnsZoneId NSX DNS Zone identifier. Generally the same as the DNS Zone's display name
     * @param privateCloudName Name of the private cloud
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteDnsZoneAsync(String resourceGroupName, String dnsZoneId, String privateCloudName);

}
