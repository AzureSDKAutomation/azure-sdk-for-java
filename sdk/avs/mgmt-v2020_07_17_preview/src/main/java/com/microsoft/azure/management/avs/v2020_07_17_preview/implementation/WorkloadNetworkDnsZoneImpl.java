/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.avs.v2020_07_17_preview.implementation;

import com.microsoft.azure.management.avs.v2020_07_17_preview.WorkloadNetworkDnsZone;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import java.util.List;
import com.microsoft.azure.management.avs.v2020_07_17_preview.WorkloadNetworkDnsZoneProvisioningState;

class WorkloadNetworkDnsZoneImpl extends CreatableUpdatableImpl<WorkloadNetworkDnsZone, WorkloadNetworkDnsZoneInner, WorkloadNetworkDnsZoneImpl> implements WorkloadNetworkDnsZone, WorkloadNetworkDnsZone.Definition, WorkloadNetworkDnsZone.Update {
    private final AVSManager manager;
    private String resourceGroupName;
    private String privateCloudName;
    private String dnsZoneId;

    WorkloadNetworkDnsZoneImpl(String name, AVSManager manager) {
        super(name, new WorkloadNetworkDnsZoneInner());
        this.manager = manager;
        // Set resource name
        this.dnsZoneId = name;
        //
    }

    WorkloadNetworkDnsZoneImpl(WorkloadNetworkDnsZoneInner inner, AVSManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.dnsZoneId = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.privateCloudName = IdParsingUtils.getValueFromIdByName(inner.id(), "privateClouds");
        this.dnsZoneId = IdParsingUtils.getValueFromIdByName(inner.id(), "dnsZones");
        //
    }

    @Override
    public AVSManager manager() {
        return this.manager;
    }

    @Override
    public Observable<WorkloadNetworkDnsZone> createResourceAsync() {
        WorkloadNetworksInner client = this.manager().inner().workloadNetworks();
        return client.createDnsZoneAsync(this.resourceGroupName, this.privateCloudName, this.dnsZoneId, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<WorkloadNetworkDnsZone> updateResourceAsync() {
        WorkloadNetworksInner client = this.manager().inner().workloadNetworks();
        return client.updateDnsZoneAsync(this.resourceGroupName, this.privateCloudName, this.dnsZoneId, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<WorkloadNetworkDnsZoneInner> getInnerAsync() {
        WorkloadNetworksInner client = this.manager().inner().workloadNetworks();
        return null; // NOP getInnerAsync implementation as get is not supported
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public String displayName() {
        return this.inner().displayName();
    }

    @Override
    public List<String> dnsServerIps() {
        return this.inner().dnsServerIps();
    }

    @Override
    public Long dnsServices() {
        return this.inner().dnsServices();
    }

    @Override
    public List<String> domain() {
        return this.inner().domain();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public WorkloadNetworkDnsZoneProvisioningState provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public Long revision() {
        return this.inner().revision();
    }

    @Override
    public String sourceIp() {
        return this.inner().sourceIp();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public WorkloadNetworkDnsZoneImpl withExistingWorkloadNetwork(String resourceGroupName, String privateCloudName) {
        this.resourceGroupName = resourceGroupName;
        this.privateCloudName = privateCloudName;
        return this;
    }

    @Override
    public WorkloadNetworkDnsZoneImpl withDisplayName(String displayName) {
        this.inner().withDisplayName(displayName);
        return this;
    }

    @Override
    public WorkloadNetworkDnsZoneImpl withDnsServerIps(List<String> dnsServerIps) {
        this.inner().withDnsServerIps(dnsServerIps);
        return this;
    }

    @Override
    public WorkloadNetworkDnsZoneImpl withDnsServices(Long dnsServices) {
        this.inner().withDnsServices(dnsServices);
        return this;
    }

    @Override
    public WorkloadNetworkDnsZoneImpl withDomain(List<String> domain) {
        this.inner().withDomain(domain);
        return this;
    }

    @Override
    public WorkloadNetworkDnsZoneImpl withRevision(Long revision) {
        this.inner().withRevision(revision);
        return this;
    }

    @Override
    public WorkloadNetworkDnsZoneImpl withSourceIp(String sourceIp) {
        this.inner().withSourceIp(sourceIp);
        return this;
    }

}
