/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.avs.v2020_07_17_preview.implementation;

import java.util.List;
import com.microsoft.azure.management.avs.v2020_07_17_preview.DnsServiceLogLevelEnum;
import com.microsoft.azure.management.avs.v2020_07_17_preview.DnsServiceStatusEnum;
import com.microsoft.azure.management.avs.v2020_07_17_preview.WorkloadNetworkDnsServiceProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * NSX DNS Service.
 */
@JsonFlatten
public class WorkloadNetworkDnsServiceInner extends ProxyResource {
    /**
     * Display name of the DNS Service.
     */
    @JsonProperty(value = "properties.displayName")
    private String displayName;

    /**
     * DNS service IP of the DNS Service.
     */
    @JsonProperty(value = "properties.dnsServiceIp")
    private String dnsServiceIp;

    /**
     * Default DNS zone of the DNS Service.
     */
    @JsonProperty(value = "properties.defaultDnsZone")
    private String defaultDnsZone;

    /**
     * FQDN zones of the DNS Service.
     */
    @JsonProperty(value = "properties.fqdnZones")
    private List<String> fqdnZones;

    /**
     * DNS Service log level. Possible values include: 'DEBUG', 'INFO',
     * 'WARNING', 'ERROR', 'FATAL'.
     */
    @JsonProperty(value = "properties.logLevel")
    private DnsServiceLogLevelEnum logLevel;

    /**
     * DNS Service status. Possible values include: 'SUCCESS', 'FAILURE'.
     */
    @JsonProperty(value = "properties.status", access = JsonProperty.Access.WRITE_ONLY)
    private DnsServiceStatusEnum status;

    /**
     * The provisioning state. Possible values include: 'Succeeded', 'Failed',
     * 'Building', 'Deleting', 'Updating'.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private WorkloadNetworkDnsServiceProvisioningState provisioningState;

    /**
     * NSX revision number.
     */
    @JsonProperty(value = "properties.revision")
    private Long revision;

    /**
     * Get display name of the DNS Service.
     *
     * @return the displayName value
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set display name of the DNS Service.
     *
     * @param displayName the displayName value to set
     * @return the WorkloadNetworkDnsServiceInner object itself.
     */
    public WorkloadNetworkDnsServiceInner withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get dNS service IP of the DNS Service.
     *
     * @return the dnsServiceIp value
     */
    public String dnsServiceIp() {
        return this.dnsServiceIp;
    }

    /**
     * Set dNS service IP of the DNS Service.
     *
     * @param dnsServiceIp the dnsServiceIp value to set
     * @return the WorkloadNetworkDnsServiceInner object itself.
     */
    public WorkloadNetworkDnsServiceInner withDnsServiceIp(String dnsServiceIp) {
        this.dnsServiceIp = dnsServiceIp;
        return this;
    }

    /**
     * Get default DNS zone of the DNS Service.
     *
     * @return the defaultDnsZone value
     */
    public String defaultDnsZone() {
        return this.defaultDnsZone;
    }

    /**
     * Set default DNS zone of the DNS Service.
     *
     * @param defaultDnsZone the defaultDnsZone value to set
     * @return the WorkloadNetworkDnsServiceInner object itself.
     */
    public WorkloadNetworkDnsServiceInner withDefaultDnsZone(String defaultDnsZone) {
        this.defaultDnsZone = defaultDnsZone;
        return this;
    }

    /**
     * Get fQDN zones of the DNS Service.
     *
     * @return the fqdnZones value
     */
    public List<String> fqdnZones() {
        return this.fqdnZones;
    }

    /**
     * Set fQDN zones of the DNS Service.
     *
     * @param fqdnZones the fqdnZones value to set
     * @return the WorkloadNetworkDnsServiceInner object itself.
     */
    public WorkloadNetworkDnsServiceInner withFqdnZones(List<String> fqdnZones) {
        this.fqdnZones = fqdnZones;
        return this;
    }

    /**
     * Get dNS Service log level. Possible values include: 'DEBUG', 'INFO', 'WARNING', 'ERROR', 'FATAL'.
     *
     * @return the logLevel value
     */
    public DnsServiceLogLevelEnum logLevel() {
        return this.logLevel;
    }

    /**
     * Set dNS Service log level. Possible values include: 'DEBUG', 'INFO', 'WARNING', 'ERROR', 'FATAL'.
     *
     * @param logLevel the logLevel value to set
     * @return the WorkloadNetworkDnsServiceInner object itself.
     */
    public WorkloadNetworkDnsServiceInner withLogLevel(DnsServiceLogLevelEnum logLevel) {
        this.logLevel = logLevel;
        return this;
    }

    /**
     * Get dNS Service status. Possible values include: 'SUCCESS', 'FAILURE'.
     *
     * @return the status value
     */
    public DnsServiceStatusEnum status() {
        return this.status;
    }

    /**
     * Get the provisioning state. Possible values include: 'Succeeded', 'Failed', 'Building', 'Deleting', 'Updating'.
     *
     * @return the provisioningState value
     */
    public WorkloadNetworkDnsServiceProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get nSX revision number.
     *
     * @return the revision value
     */
    public Long revision() {
        return this.revision;
    }

    /**
     * Set nSX revision number.
     *
     * @param revision the revision value to set
     * @return the WorkloadNetworkDnsServiceInner object itself.
     */
    public WorkloadNetworkDnsServiceInner withRevision(Long revision) {
        this.revision = revision;
        return this;
    }

}
