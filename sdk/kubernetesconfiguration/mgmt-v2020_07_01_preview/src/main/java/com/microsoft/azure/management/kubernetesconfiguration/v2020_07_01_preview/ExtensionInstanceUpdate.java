/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.kubernetesconfiguration.v2020_07_01_preview;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * Update Extension Instance request object.
 */
@JsonFlatten
public class ExtensionInstanceUpdate {
    /**
     * Flag to note if this instance participates in Extension Lifecycle
     * Management or not.
     */
    @JsonProperty(value = "properties.autoUpgradeMinorVersion")
    private Boolean autoUpgradeMinorVersion;

    /**
     * ReleaseTrain this extension instance participates in for auto-upgrade
     * (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is
     * 'true'.
     */
    @JsonProperty(value = "properties.releaseTrain")
    private String releaseTrain;

    /**
     * Version number of extension, to 'pin' to a specific version.
     * autoUpgradeMinorVersion must be 'false'.
     */
    @JsonProperty(value = "properties.version")
    private String version;

    /**
     * Get flag to note if this instance participates in Extension Lifecycle Management or not.
     *
     * @return the autoUpgradeMinorVersion value
     */
    public Boolean autoUpgradeMinorVersion() {
        return this.autoUpgradeMinorVersion;
    }

    /**
     * Set flag to note if this instance participates in Extension Lifecycle Management or not.
     *
     * @param autoUpgradeMinorVersion the autoUpgradeMinorVersion value to set
     * @return the ExtensionInstanceUpdate object itself.
     */
    public ExtensionInstanceUpdate withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion) {
        this.autoUpgradeMinorVersion = autoUpgradeMinorVersion;
        return this;
    }

    /**
     * Get releaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.
     *
     * @return the releaseTrain value
     */
    public String releaseTrain() {
        return this.releaseTrain;
    }

    /**
     * Set releaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.
     *
     * @param releaseTrain the releaseTrain value to set
     * @return the ExtensionInstanceUpdate object itself.
     */
    public ExtensionInstanceUpdate withReleaseTrain(String releaseTrain) {
        this.releaseTrain = releaseTrain;
        return this;
    }

    /**
     * Get version number of extension, to 'pin' to a specific version.  autoUpgradeMinorVersion must be 'false'.
     *
     * @return the version value
     */
    public String version() {
        return this.version;
    }

    /**
     * Set version number of extension, to 'pin' to a specific version.  autoUpgradeMinorVersion must be 'false'.
     *
     * @param version the version value to set
     * @return the ExtensionInstanceUpdate object itself.
     */
    public ExtensionInstanceUpdate withVersion(String version) {
        this.version = version;
        return this;
    }

}
