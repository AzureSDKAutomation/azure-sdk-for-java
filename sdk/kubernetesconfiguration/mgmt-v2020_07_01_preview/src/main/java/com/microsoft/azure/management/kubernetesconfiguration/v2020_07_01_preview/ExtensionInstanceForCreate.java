/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.kubernetesconfiguration.v2020_07_01_preview;

import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * Object to create a new Extension Instance.
 */
@JsonFlatten
public class ExtensionInstanceForCreate extends ProxyResource {
    /**
     * Type of the Extension, of which this resource is an instance of.  It
     * must be one of the Extension Types registered with
     * Microsoft.KubernetesConfiguration by the Extension publisher.
     */
    @JsonProperty(value = "properties.extensionType")
    private String extensionType;

    /**
     * Flag to note if this instance participates in auto upgrade of minor
     * version, or not.
     */
    @JsonProperty(value = "properties.autoUpgradeMinorVersion")
    private Boolean autoUpgradeMinorVersion;

    /**
     * ReleaseTrain this extension instance participates in for auto-upgrade
     * (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is
     * 'true'.
     */
    @JsonProperty(value = "properties.releaseTrain")
    private String releaseTrain;

    /**
     * Version of the extension for this extension instance, if it is 'pinned'
     * to a specific version. autoUpgradeMinorVersion must be 'false'.
     */
    @JsonProperty(value = "properties.version")
    private String version;

    /**
     * Scope at which the extension instance is installed.
     */
    @JsonProperty(value = "properties.scope")
    private Scope scope;

    /**
     * Configuration settings, as name-value pairs for configuring this
     * instance of the extension.
     */
    @JsonProperty(value = "properties.configurationSettings")
    private Map<String, String> configurationSettings;

    /**
     * Configuration settings that are sensitive, as name-value pairs for
     * configuring this instance of the extension.
     */
    @JsonProperty(value = "properties.configurationProtectedSettings")
    private Map<String, String> configurationProtectedSettings;

    /**
     * The identity of the configuration.
     */
    @JsonProperty(value = "identity")
    private ConfigurationIdentity identity;

    /**
     * Get type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.
     *
     * @return the extensionType value
     */
    public String extensionType() {
        return this.extensionType;
    }

    /**
     * Set type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.
     *
     * @param extensionType the extensionType value to set
     * @return the ExtensionInstanceForCreate object itself.
     */
    public ExtensionInstanceForCreate withExtensionType(String extensionType) {
        this.extensionType = extensionType;
        return this;
    }

    /**
     * Get flag to note if this instance participates in auto upgrade of minor version, or not.
     *
     * @return the autoUpgradeMinorVersion value
     */
    public Boolean autoUpgradeMinorVersion() {
        return this.autoUpgradeMinorVersion;
    }

    /**
     * Set flag to note if this instance participates in auto upgrade of minor version, or not.
     *
     * @param autoUpgradeMinorVersion the autoUpgradeMinorVersion value to set
     * @return the ExtensionInstanceForCreate object itself.
     */
    public ExtensionInstanceForCreate withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion) {
        this.autoUpgradeMinorVersion = autoUpgradeMinorVersion;
        return this;
    }

    /**
     * Get releaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.
     *
     * @return the releaseTrain value
     */
    public String releaseTrain() {
        return this.releaseTrain;
    }

    /**
     * Set releaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.
     *
     * @param releaseTrain the releaseTrain value to set
     * @return the ExtensionInstanceForCreate object itself.
     */
    public ExtensionInstanceForCreate withReleaseTrain(String releaseTrain) {
        this.releaseTrain = releaseTrain;
        return this;
    }

    /**
     * Get version of the extension for this extension instance, if it is 'pinned' to a specific version. autoUpgradeMinorVersion must be 'false'.
     *
     * @return the version value
     */
    public String version() {
        return this.version;
    }

    /**
     * Set version of the extension for this extension instance, if it is 'pinned' to a specific version. autoUpgradeMinorVersion must be 'false'.
     *
     * @param version the version value to set
     * @return the ExtensionInstanceForCreate object itself.
     */
    public ExtensionInstanceForCreate withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get scope at which the extension instance is installed.
     *
     * @return the scope value
     */
    public Scope scope() {
        return this.scope;
    }

    /**
     * Set scope at which the extension instance is installed.
     *
     * @param scope the scope value to set
     * @return the ExtensionInstanceForCreate object itself.
     */
    public ExtensionInstanceForCreate withScope(Scope scope) {
        this.scope = scope;
        return this;
    }

    /**
     * Get configuration settings, as name-value pairs for configuring this instance of the extension.
     *
     * @return the configurationSettings value
     */
    public Map<String, String> configurationSettings() {
        return this.configurationSettings;
    }

    /**
     * Set configuration settings, as name-value pairs for configuring this instance of the extension.
     *
     * @param configurationSettings the configurationSettings value to set
     * @return the ExtensionInstanceForCreate object itself.
     */
    public ExtensionInstanceForCreate withConfigurationSettings(Map<String, String> configurationSettings) {
        this.configurationSettings = configurationSettings;
        return this;
    }

    /**
     * Get configuration settings that are sensitive, as name-value pairs for configuring this instance of the extension.
     *
     * @return the configurationProtectedSettings value
     */
    public Map<String, String> configurationProtectedSettings() {
        return this.configurationProtectedSettings;
    }

    /**
     * Set configuration settings that are sensitive, as name-value pairs for configuring this instance of the extension.
     *
     * @param configurationProtectedSettings the configurationProtectedSettings value to set
     * @return the ExtensionInstanceForCreate object itself.
     */
    public ExtensionInstanceForCreate withConfigurationProtectedSettings(Map<String, String> configurationProtectedSettings) {
        this.configurationProtectedSettings = configurationProtectedSettings;
        return this;
    }

    /**
     * Get the identity of the configuration.
     *
     * @return the identity value
     */
    public ConfigurationIdentity identity() {
        return this.identity;
    }

    /**
     * Set the identity of the configuration.
     *
     * @param identity the identity value to set
     * @return the ExtensionInstanceForCreate object itself.
     */
    public ExtensionInstanceForCreate withIdentity(ConfigurationIdentity identity) {
        this.identity = identity;
        return this;
    }

}
