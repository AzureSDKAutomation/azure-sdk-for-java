/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.kubernetesconfiguration.v2020_07_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.kubernetesconfiguration.v2020_07_01_preview.implementation.ExtensionInstanceInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.kubernetesconfiguration.v2020_07_01_preview.implementation.KubernetesConfigurationManager;
import java.util.Map;
import java.util.List;

/**
 * Type representing ExtensionInstance.
 */
public interface ExtensionInstance extends HasInner<ExtensionInstanceInner>, Indexable, Updatable<ExtensionInstance.Update>, HasManager<KubernetesConfigurationManager> {
    /**
     * @return the autoUpgradeMinorVersion value.
     */
    Boolean autoUpgradeMinorVersion();

    /**
     * @return the configurationSettings value.
     */
    Map<String, String> configurationSettings();

    /**
     * @return the creationTime value.
     */
    String creationTime();

    /**
     * @return the errorInfo value.
     */
    ErrorDefinition errorInfo();

    /**
     * @return the extensionType value.
     */
    String extensionType();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the identity value.
     */
    ConfigurationIdentity identity();

    /**
     * @return the installState value.
     */
    InstallStateType installState();

    /**
     * @return the lastModifiedTime value.
     */
    String lastModifiedTime();

    /**
     * @return the lastStatusTime value.
     */
    String lastStatusTime();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the releaseTrain value.
     */
    String releaseTrain();

    /**
     * @return the scope value.
     */
    Scope scope();

    /**
     * @return the statuses value.
     */
    List<ExtensionStatus> statuses();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the version value.
     */
    String version();

    /**
     * The entirety of the ExtensionInstance definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithProvider, DefinitionStages.WithClusterResourceName, DefinitionStages.WithClusterName, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of ExtensionInstance definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a ExtensionInstance definition.
         */
        interface Blank extends WithProvider {
        }

        /**
         * The stage of the extensioninstance definition allowing to specify Provider.
         */
        interface WithProvider {
           /**
            * Specifies resourceGroupName, clusterRp.
            * @param resourceGroupName The name of the resource group
            * @param clusterRp The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters). Possible values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
            * @return the next definition stage
            */
            WithClusterResourceName withExistingProvider(String resourceGroupName, String clusterRp);
        }

        /**
         * The stage of the extensioninstance definition allowing to specify ClusterResourceName.
         */
        interface WithClusterResourceName {
           /**
            * Specifies clusterResourceName.
            * @param clusterResourceName The Kubernetes cluster resource name - either managedClusters (for AKS clusters) or connectedClusters (for OnPrem K8S clusters). Possible values include: 'managedClusters', 'connectedClusters'
            * @return the next definition stage
            */
            WithClusterName withClusterResourceName(String clusterResourceName);
        }

        /**
         * The stage of the extensioninstance definition allowing to specify ClusterName.
         */
        interface WithClusterName {
           /**
            * Specifies clusterName.
            * @param clusterName The name of the kubernetes cluster
            * @return the next definition stage
            */
            WithCreate withClusterName(String clusterName);
        }

        /**
         * The stage of the extensioninstance definition allowing to specify AutoUpgradeMinorVersion.
         */
        interface WithAutoUpgradeMinorVersion {
            /**
             * Specifies autoUpgradeMinorVersion.
             * @param autoUpgradeMinorVersion Flag to note if this instance participates in auto upgrade of minor version, or not
             * @return the next definition stage
             */
            WithCreate withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion);
        }

        /**
         * The stage of the extensioninstance definition allowing to specify ConfigurationProtectedSettings.
         */
        interface WithConfigurationProtectedSettings {
            /**
             * Specifies configurationProtectedSettings.
             * @param configurationProtectedSettings Configuration settings that are sensitive, as name-value pairs for configuring this instance of the extension
             * @return the next definition stage
             */
            WithCreate withConfigurationProtectedSettings(Map<String, String> configurationProtectedSettings);
        }

        /**
         * The stage of the extensioninstance definition allowing to specify ConfigurationSettings.
         */
        interface WithConfigurationSettings {
            /**
             * Specifies configurationSettings.
             * @param configurationSettings Configuration settings, as name-value pairs for configuring this instance of the extension
             * @return the next definition stage
             */
            WithCreate withConfigurationSettings(Map<String, String> configurationSettings);
        }

        /**
         * The stage of the extensioninstance definition allowing to specify ExtensionType.
         */
        interface WithExtensionType {
            /**
             * Specifies extensionType.
             * @param extensionType Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher
             * @return the next definition stage
             */
            WithCreate withExtensionType(String extensionType);
        }

        /**
         * The stage of the extensioninstance definition allowing to specify Identity.
         */
        interface WithIdentity {
            /**
             * Specifies identity.
             * @param identity The identity of the configuration
             * @return the next definition stage
             */
            WithCreate withIdentity(ConfigurationIdentity identity);
        }

        /**
         * The stage of the extensioninstance definition allowing to specify ReleaseTrain.
         */
        interface WithReleaseTrain {
            /**
             * Specifies releaseTrain.
             * @param releaseTrain ReleaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'
             * @return the next definition stage
             */
            WithCreate withReleaseTrain(String releaseTrain);
        }

        /**
         * The stage of the extensioninstance definition allowing to specify Scope.
         */
        interface WithScope {
            /**
             * Specifies scope.
             * @param scope Scope at which the extension instance is installed
             * @return the next definition stage
             */
            WithCreate withScope(Scope scope);
        }

        /**
         * The stage of the extensioninstance definition allowing to specify Version.
         */
        interface WithVersion {
            /**
             * Specifies version.
             * @param version Version of the extension for this extension instance, if it is 'pinned' to a specific version. autoUpgradeMinorVersion must be 'false'
             * @return the next definition stage
             */
            WithCreate withVersion(String version);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<ExtensionInstance>, DefinitionStages.WithAutoUpgradeMinorVersion, DefinitionStages.WithConfigurationProtectedSettings, DefinitionStages.WithConfigurationSettings, DefinitionStages.WithExtensionType, DefinitionStages.WithIdentity, DefinitionStages.WithReleaseTrain, DefinitionStages.WithScope, DefinitionStages.WithVersion {
        }
    }
    /**
     * The template for a ExtensionInstance update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<ExtensionInstance>, UpdateStages.WithAutoUpgradeMinorVersion, UpdateStages.WithReleaseTrain, UpdateStages.WithVersion {
    }

    /**
     * Grouping of ExtensionInstance update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the extensioninstance update allowing to specify AutoUpgradeMinorVersion.
         */
        interface WithAutoUpgradeMinorVersion {
            /**
             * Specifies autoUpgradeMinorVersion.
             * @param autoUpgradeMinorVersion Flag to note if this instance participates in Extension Lifecycle Management or not
             * @return the next update stage
             */
            Update withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion);
        }

        /**
         * The stage of the extensioninstance update allowing to specify ReleaseTrain.
         */
        interface WithReleaseTrain {
            /**
             * Specifies releaseTrain.
             * @param releaseTrain ReleaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'
             * @return the next update stage
             */
            Update withReleaseTrain(String releaseTrain);
        }

        /**
         * The stage of the extensioninstance update allowing to specify Version.
         */
        interface WithVersion {
            /**
             * Specifies version.
             * @param version Version number of extension, to 'pin' to a specific version.  autoUpgradeMinorVersion must be 'false'
             * @return the next update stage
             */
            Update withVersion(String version);
        }

    }
}
