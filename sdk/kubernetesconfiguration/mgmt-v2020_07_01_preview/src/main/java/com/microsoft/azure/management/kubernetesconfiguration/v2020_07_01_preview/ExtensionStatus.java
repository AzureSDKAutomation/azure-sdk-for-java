/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.kubernetesconfiguration.v2020_07_01_preview;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Status from this instance of the extension.
 */
public class ExtensionStatus {
    /**
     * Status code provided by the Extension.
     */
    @JsonProperty(value = "code")
    private String code;

    /**
     * Short description of status of this instance of the extension.
     */
    @JsonProperty(value = "displayStatus")
    private String displayStatus;

    /**
     * Level of the status. Possible values include: 'Error', 'Warning',
     * 'Information'.
     */
    @JsonProperty(value = "level")
    private LevelType level;

    /**
     * Detailed message of the status from the Extension instance.
     */
    @JsonProperty(value = "message")
    private String message;

    /**
     * DateLiteral (per ISO8601) noting the time of installation status.
     */
    @JsonProperty(value = "time")
    private String time;

    /**
     * Get status code provided by the Extension.
     *
     * @return the code value
     */
    public String code() {
        return this.code;
    }

    /**
     * Set status code provided by the Extension.
     *
     * @param code the code value to set
     * @return the ExtensionStatus object itself.
     */
    public ExtensionStatus withCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Get short description of status of this instance of the extension.
     *
     * @return the displayStatus value
     */
    public String displayStatus() {
        return this.displayStatus;
    }

    /**
     * Set short description of status of this instance of the extension.
     *
     * @param displayStatus the displayStatus value to set
     * @return the ExtensionStatus object itself.
     */
    public ExtensionStatus withDisplayStatus(String displayStatus) {
        this.displayStatus = displayStatus;
        return this;
    }

    /**
     * Get level of the status. Possible values include: 'Error', 'Warning', 'Information'.
     *
     * @return the level value
     */
    public LevelType level() {
        return this.level;
    }

    /**
     * Set level of the status. Possible values include: 'Error', 'Warning', 'Information'.
     *
     * @param level the level value to set
     * @return the ExtensionStatus object itself.
     */
    public ExtensionStatus withLevel(LevelType level) {
        this.level = level;
        return this;
    }

    /**
     * Get detailed message of the status from the Extension instance.
     *
     * @return the message value
     */
    public String message() {
        return this.message;
    }

    /**
     * Set detailed message of the status from the Extension instance.
     *
     * @param message the message value to set
     * @return the ExtensionStatus object itself.
     */
    public ExtensionStatus withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get dateLiteral (per ISO8601) noting the time of installation status.
     *
     * @return the time value
     */
    public String time() {
        return this.time;
    }

    /**
     * Set dateLiteral (per ISO8601) noting the time of installation status.
     *
     * @param time the time value to set
     * @return the ExtensionStatus object itself.
     */
    public ExtensionStatus withTime(String time) {
        this.time = time;
        return this;
    }

}
