// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.kubernetesconfiguration.fluent.LocationExtensionTypesClient;
import com.azure.resourcemanager.kubernetesconfiguration.fluent.models.ExtensionTypeInner;
import com.azure.resourcemanager.kubernetesconfiguration.models.ExtensionType;
import com.azure.resourcemanager.kubernetesconfiguration.models.LocationExtensionTypes;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class LocationExtensionTypesImpl implements LocationExtensionTypes {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(LocationExtensionTypesImpl.class);

    private final LocationExtensionTypesClient innerClient;

    private final com.azure.resourcemanager.kubernetesconfiguration.SourceControlConfigurationManager serviceManager;

    public LocationExtensionTypesImpl(
        LocationExtensionTypesClient innerClient,
        com.azure.resourcemanager.kubernetesconfiguration.SourceControlConfigurationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<ExtensionType> list(String location) {
        PagedIterable<ExtensionTypeInner> inner = this.serviceClient().list(location);
        return Utils.mapPage(inner, inner1 -> new ExtensionTypeImpl(inner1, this.manager()));
    }

    public PagedIterable<ExtensionType> list(String location, Context context) {
        PagedIterable<ExtensionTypeInner> inner = this.serviceClient().list(location, context);
        return Utils.mapPage(inner, inner1 -> new ExtensionTypeImpl(inner1, this.manager()));
    }

    private LocationExtensionTypesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.kubernetesconfiguration.SourceControlConfigurationManager manager() {
        return this.serviceManager;
    }
}
