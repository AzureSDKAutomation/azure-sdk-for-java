// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Extension scopes. */
@Fluent
public final class SupportedScopes {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SupportedScopes.class);

    /*
     * Default extension scopes: cluster or namespace
     */
    @JsonProperty(value = "defaultScope")
    private String defaultScope;

    /*
     * Scope settings
     */
    @JsonProperty(value = "clusterScopeSettings")
    private ClusterScopeSettings clusterScopeSettings;

    /**
     * Get the defaultScope property: Default extension scopes: cluster or namespace.
     *
     * @return the defaultScope value.
     */
    public String defaultScope() {
        return this.defaultScope;
    }

    /**
     * Set the defaultScope property: Default extension scopes: cluster or namespace.
     *
     * @param defaultScope the defaultScope value to set.
     * @return the SupportedScopes object itself.
     */
    public SupportedScopes withDefaultScope(String defaultScope) {
        this.defaultScope = defaultScope;
        return this;
    }

    /**
     * Get the clusterScopeSettings property: Scope settings.
     *
     * @return the clusterScopeSettings value.
     */
    public ClusterScopeSettings clusterScopeSettings() {
        return this.clusterScopeSettings;
    }

    /**
     * Set the clusterScopeSettings property: Scope settings.
     *
     * @param clusterScopeSettings the clusterScopeSettings value to set.
     * @return the SupportedScopes object itself.
     */
    public SupportedScopes withClusterScopeSettings(ClusterScopeSettings clusterScopeSettings) {
        this.clusterScopeSettings = clusterScopeSettings;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (clusterScopeSettings() != null) {
            clusterScopeSettings().validate();
        }
    }
}
