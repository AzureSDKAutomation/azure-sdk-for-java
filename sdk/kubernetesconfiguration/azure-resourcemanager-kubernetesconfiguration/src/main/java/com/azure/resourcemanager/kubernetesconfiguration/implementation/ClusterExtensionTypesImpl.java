// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.kubernetesconfiguration.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.kubernetesconfiguration.fluent.ClusterExtensionTypesClient;
import com.azure.resourcemanager.kubernetesconfiguration.fluent.models.ExtensionTypeInner;
import com.azure.resourcemanager.kubernetesconfiguration.models.ClusterExtensionTypeClusterType;
import com.azure.resourcemanager.kubernetesconfiguration.models.ClusterExtensionTypes;
import com.azure.resourcemanager.kubernetesconfiguration.models.ExtensionType;
import com.azure.resourcemanager.kubernetesconfiguration.models.ExtensionsClusterRp;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ClusterExtensionTypesImpl implements ClusterExtensionTypes {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ClusterExtensionTypesImpl.class);

    private final ClusterExtensionTypesClient innerClient;

    private final com.azure.resourcemanager.kubernetesconfiguration.SourceControlConfigurationManager serviceManager;

    public ClusterExtensionTypesImpl(
        ClusterExtensionTypesClient innerClient,
        com.azure.resourcemanager.kubernetesconfiguration.SourceControlConfigurationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public ExtensionType get(
        String resourceGroupName,
        ExtensionsClusterRp clusterRp,
        ClusterExtensionTypeClusterType clusterType,
        String clusterName,
        String extensionTypeName) {
        ExtensionTypeInner inner =
            this.serviceClient().get(resourceGroupName, clusterRp, clusterType, clusterName, extensionTypeName);
        if (inner != null) {
            return new ExtensionTypeImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ExtensionType> getWithResponse(
        String resourceGroupName,
        ExtensionsClusterRp clusterRp,
        ClusterExtensionTypeClusterType clusterType,
        String clusterName,
        String extensionTypeName,
        Context context) {
        Response<ExtensionTypeInner> inner =
            this
                .serviceClient()
                .getWithResponse(resourceGroupName, clusterRp, clusterType, clusterName, extensionTypeName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ExtensionTypeImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private ClusterExtensionTypesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.kubernetesconfiguration.SourceControlConfigurationManager manager() {
        return this.serviceManager;
    }
}
