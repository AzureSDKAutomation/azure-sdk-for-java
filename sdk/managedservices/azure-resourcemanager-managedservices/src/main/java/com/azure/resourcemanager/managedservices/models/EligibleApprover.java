// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.managedservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** A principal Id and user-friendly display name representing an eligible authorization approver. */
@Fluent
public final class EligibleApprover {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(EligibleApprover.class);

    /*
     * Principal Id of the user or security group that will approve JIT
     * activation requests for the eligible authorization.
     */
    @JsonProperty(value = "principalId", required = true)
    private String principalId;

    /*
     * Display name of the principal Id.
     */
    @JsonProperty(value = "principalIdDisplayName")
    private String principalIdDisplayName;

    /**
     * Get the principalId property: Principal Id of the user or security group that will approve JIT activation
     * requests for the eligible authorization.
     *
     * @return the principalId value.
     */
    public String principalId() {
        return this.principalId;
    }

    /**
     * Set the principalId property: Principal Id of the user or security group that will approve JIT activation
     * requests for the eligible authorization.
     *
     * @param principalId the principalId value to set.
     * @return the EligibleApprover object itself.
     */
    public EligibleApprover withPrincipalId(String principalId) {
        this.principalId = principalId;
        return this;
    }

    /**
     * Get the principalIdDisplayName property: Display name of the principal Id.
     *
     * @return the principalIdDisplayName value.
     */
    public String principalIdDisplayName() {
        return this.principalIdDisplayName;
    }

    /**
     * Set the principalIdDisplayName property: Display name of the principal Id.
     *
     * @param principalIdDisplayName the principalIdDisplayName value to set.
     * @return the EligibleApprover object itself.
     */
    public EligibleApprover withPrincipalIdDisplayName(String principalIdDisplayName) {
        this.principalIdDisplayName = principalIdDisplayName;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (principalId() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property principalId in model EligibleApprover"));
        }
    }
}
