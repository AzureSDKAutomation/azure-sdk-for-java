// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.databoxedge.DataBoxEdgeManager;
import com.azure.resourcemanager.databoxedge.fluent.NodesClient;
import com.azure.resourcemanager.databoxedge.fluent.models.NodeListInner;
import com.azure.resourcemanager.databoxedge.models.NodeList;
import com.azure.resourcemanager.databoxedge.models.Nodes;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class NodesImpl implements Nodes {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(NodesImpl.class);

    private final NodesClient innerClient;

    private final DataBoxEdgeManager serviceManager;

    public NodesImpl(NodesClient innerClient, DataBoxEdgeManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public NodeList listByDataBoxEdgeDevice(String deviceName, String resourceGroupName) {
        NodeListInner inner = this.serviceClient().listByDataBoxEdgeDevice(deviceName, resourceGroupName);
        if (inner != null) {
            return new NodeListImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<NodeList> listByDataBoxEdgeDeviceWithResponse(
        String deviceName, String resourceGroupName, Context context) {
        Response<NodeListInner> inner =
            this.serviceClient().listByDataBoxEdgeDeviceWithResponse(deviceName, resourceGroupName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new NodeListImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private NodesClient serviceClient() {
        return this.innerClient;
    }

    private DataBoxEdgeManager manager() {
        return this.serviceManager;
    }
}
