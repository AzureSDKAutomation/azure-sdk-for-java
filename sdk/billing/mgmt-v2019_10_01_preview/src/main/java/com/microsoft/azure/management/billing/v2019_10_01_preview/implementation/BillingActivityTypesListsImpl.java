/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.billing.v2019_10_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.billing.v2019_10_01_preview.BillingActivityTypesLists;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.billing.v2019_10_01_preview.BillingActivityEventCategory;

class BillingActivityTypesListsImpl extends WrapperImpl<BillingActivityTypesListsInner> implements BillingActivityTypesLists {
    private final BillingManager manager;

    BillingActivityTypesListsImpl(BillingManager manager) {
        super(manager.inner().billingActivityTypesLists());
        this.manager = manager;
    }

    public BillingManager manager() {
        return this.manager;
    }

    @Override
    public Observable<BillingActivityEventCategory> getAsync(final String billingAccountName) {
        BillingActivityTypesListsInner client = this.inner();
        return client.getAsync(billingAccountName)
        .flatMapIterable(new Func1<Page<BillingActivityEventCategoryInner>, Iterable<BillingActivityEventCategoryInner>>() {
            @Override
            public Iterable<BillingActivityEventCategoryInner> call(Page<BillingActivityEventCategoryInner> page) {
                return page.items();
            }
        })
        .map(new Func1<BillingActivityEventCategoryInner, BillingActivityEventCategory>() {
            @Override
            public BillingActivityEventCategory call(BillingActivityEventCategoryInner inner) {
                return new BillingActivityEventCategoryImpl(inner, manager());
            }
        });
    }

}
