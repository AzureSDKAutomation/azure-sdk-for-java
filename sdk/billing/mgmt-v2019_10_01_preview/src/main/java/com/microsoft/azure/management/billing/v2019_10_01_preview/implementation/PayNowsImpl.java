/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.billing.v2019_10_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.billing.v2019_10_01_preview.PayNows;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.billing.v2019_10_01_preview.PayNowDetails;
import com.microsoft.azure.management.billing.v2019_10_01_preview.PayableOverage;
import com.microsoft.azure.management.billing.v2019_10_01_preview.InitiatePayNowRequest;

class PayNowsImpl extends WrapperImpl<PayNowsInner> implements PayNows {
    private final BillingManager manager;

    PayNowsImpl(BillingManager manager) {
        super(manager.inner().payNows());
        this.manager = manager;
    }

    public BillingManager manager() {
        return this.manager;
    }

    @Override
    public Observable<PayNowDetails> initiateAsync(String billingAccountName, InitiatePayNowRequest parameters) {
        PayNowsInner client = this.inner();
        return client.initiateAsync(billingAccountName, parameters)
        .map(new Func1<PayNowDetailsInner, PayNowDetails>() {
            @Override
            public PayNowDetails call(PayNowDetailsInner inner) {
                return new PayNowDetailsImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<PayNowDetails> getAsync(String billingAccountName, String payNowName) {
        PayNowsInner client = this.inner();
        return client.getAsync(billingAccountName, payNowName)
        .map(new Func1<PayNowDetailsInner, PayNowDetails>() {
            @Override
            public PayNowDetails call(PayNowDetailsInner inner) {
                return new PayNowDetailsImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<PayNowDetails> listByBillingAccountAsync(final String billingAccountName) {
        PayNowsInner client = this.inner();
        return client.listByBillingAccountAsync(billingAccountName)
        .flatMapIterable(new Func1<Page<PayNowDetailsInner>, Iterable<PayNowDetailsInner>>() {
            @Override
            public Iterable<PayNowDetailsInner> call(Page<PayNowDetailsInner> page) {
                return page.items();
            }
        })
        .map(new Func1<PayNowDetailsInner, PayNowDetails>() {
            @Override
            public PayNowDetails call(PayNowDetailsInner inner) {
                return new PayNowDetailsImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<PayableOverage> getPayableOverageAsync(String billingAccountName, InitiatePayNowRequest parameters) {
        PayNowsInner client = this.inner();
        return client.getPayableOverageAsync(billingAccountName, parameters)
        .map(new Func1<PayableOverageInner, PayableOverage>() {
            @Override
            public PayableOverage call(PayableOverageInner inner) {
                return new PayableOverageImpl(inner, manager());
            }
        });
    }

}
