/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2019_10_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.billing.v2019_10_01_preview.implementation.DepartmentInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.billing.v2019_10_01_preview.implementation.BillingManager;
import java.util.List;
import com.microsoft.azure.management.billing.v2019_10_01_preview.implementation.EnrollmentAccountInner;

/**
 * Type representing Department.
 */
public interface Department extends HasInner<DepartmentInner>, Indexable, Refreshable<Department>, Updatable<Department.Update>, HasManager<BillingManager> {
    /**
     * @return the costCenter value.
     */
    String costCenter();

    /**
     * @return the departmentName value.
     */
    String departmentName();

    /**
     * @return the enrollmentAccounts value.
     */
    List<EnrollmentAccount> enrollmentAccounts();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the status value.
     */
    String status();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the Department definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithBillingAccount, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Department definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Department definition.
         */
        interface Blank extends WithBillingAccount {
        }

        /**
         * The stage of the department definition allowing to specify BillingAccount.
         */
        interface WithBillingAccount {
           /**
            * Specifies billingAccountName.
            * @param billingAccountName The ID that uniquely identifies a billing account
            * @return the next definition stage
            */
            WithCreate withExistingBillingAccount(String billingAccountName);
        }

        /**
         * The stage of the department definition allowing to specify CostCenter.
         */
        interface WithCostCenter {
            /**
             * Specifies costCenter.
             * @param costCenter The cost center associated with the department
             * @return the next definition stage
             */
            WithCreate withCostCenter(String costCenter);
        }

        /**
         * The stage of the department definition allowing to specify DepartmentName.
         */
        interface WithDepartmentName {
            /**
             * Specifies departmentName.
             * @param departmentName The name of the department
             * @return the next definition stage
             */
            WithCreate withDepartmentName(String departmentName);
        }

        /**
         * The stage of the department definition allowing to specify EnrollmentAccounts.
         */
        interface WithEnrollmentAccounts {
            /**
             * Specifies enrollmentAccounts.
             * @param enrollmentAccounts Associated enrollment accounts. By default this is not populated, unless it's specified in $expand
             * @return the next definition stage
             */
            WithCreate withEnrollmentAccounts(List<EnrollmentAccountInner> enrollmentAccounts);
        }

        /**
         * The stage of the department definition allowing to specify Status.
         */
        interface WithStatus {
            /**
             * Specifies status.
             * @param status The status of the department
             * @return the next definition stage
             */
            WithCreate withStatus(String status);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Department>, DefinitionStages.WithCostCenter, DefinitionStages.WithDepartmentName, DefinitionStages.WithEnrollmentAccounts, DefinitionStages.WithStatus {
        }
    }
    /**
     * The template for a Department update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Department>, UpdateStages.WithCostCenter, UpdateStages.WithDepartmentName, UpdateStages.WithEnrollmentAccounts, UpdateStages.WithStatus {
    }

    /**
     * Grouping of Department update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the department update allowing to specify CostCenter.
         */
        interface WithCostCenter {
            /**
             * Specifies costCenter.
             * @param costCenter The cost center associated with the department
             * @return the next update stage
             */
            Update withCostCenter(String costCenter);
        }

        /**
         * The stage of the department update allowing to specify DepartmentName.
         */
        interface WithDepartmentName {
            /**
             * Specifies departmentName.
             * @param departmentName The name of the department
             * @return the next update stage
             */
            Update withDepartmentName(String departmentName);
        }

        /**
         * The stage of the department update allowing to specify EnrollmentAccounts.
         */
        interface WithEnrollmentAccounts {
            /**
             * Specifies enrollmentAccounts.
             * @param enrollmentAccounts Associated enrollment accounts. By default this is not populated, unless it's specified in $expand
             * @return the next update stage
             */
            Update withEnrollmentAccounts(List<EnrollmentAccountInner> enrollmentAccounts);
        }

        /**
         * The stage of the department update allowing to specify Status.
         */
        interface WithStatus {
            /**
             * Specifies status.
             * @param status The status of the department
             * @return the next update stage
             */
            Update withStatus(String status);
        }

    }
}
