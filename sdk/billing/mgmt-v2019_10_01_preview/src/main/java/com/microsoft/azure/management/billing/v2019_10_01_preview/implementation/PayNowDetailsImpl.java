/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2019_10_01_preview.implementation;

import com.microsoft.azure.management.billing.v2019_10_01_preview.PayNowDetails;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import org.joda.time.DateTime;
import com.microsoft.azure.management.billing.v2019_10_01_preview.Amount;
import com.microsoft.azure.management.billing.v2019_10_01_preview.PayNowState;

class PayNowDetailsImpl extends WrapperImpl<PayNowDetailsInner> implements PayNowDetails {
    private final BillingManager manager;
    PayNowDetailsImpl(PayNowDetailsInner inner, BillingManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public BillingManager manager() {
        return this.manager;
    }

    @Override
    public DateTime creationTime() {
        return this.inner().creationTime();
    }

    @Override
    public String errorCode() {
        return this.inner().errorCode();
    }

    @Override
    public String errorMessage() {
        return this.inner().errorMessage();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String initiatorEmailAddress() {
        return this.inner().initiatorEmailAddress();
    }

    @Override
    public String invoiceName() {
        return this.inner().invoiceName();
    }

    @Override
    public DateTime lastModifiedTime() {
        return this.inner().lastModifiedTime();
    }

    @Override
    public Amount overageAmount() {
        return this.inner().overageAmount();
    }

    @Override
    public String payOffBillingAccountName() {
        return this.inner().payOffBillingAccountName();
    }

    @Override
    public String payOffDate() {
        return this.inner().payOffDate();
    }

    @Override
    public String percentComplete() {
        return this.inner().percentComplete();
    }

    @Override
    public PayNowState state() {
        return this.inner().state();
    }

}
