// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.billing.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.billing.models.AccountStatus;
import com.azure.resourcemanager.billing.models.AccountStatusReasonCode;
import com.azure.resourcemanager.billing.models.AccountType;
import com.azure.resourcemanager.billing.models.AddressDetails;
import com.azure.resourcemanager.billing.models.AgreementType;
import com.azure.resourcemanager.billing.models.BillingProfilesOnExpand;
import com.azure.resourcemanager.billing.models.Department;
import com.azure.resourcemanager.billing.models.Enrollment;
import com.azure.resourcemanager.billing.models.EnrollmentAccount;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** A billing account. */
@JsonFlatten
@Fluent
public class BillingAccountInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(BillingAccountInner.class);

    /*
     * The current status of the billing account.
     */
    @JsonProperty(value = "properties.accountStatus", access = JsonProperty.Access.WRITE_ONLY)
    private AccountStatus accountStatus;

    /*
     * Reason for the specified billing account status.
     */
    @JsonProperty(value = "properties.accountStatusReasonCode", access = JsonProperty.Access.WRITE_ONLY)
    private AccountStatusReasonCode accountStatusReasonCode;

    /*
     * The type of customer.
     */
    @JsonProperty(value = "properties.accountType", access = JsonProperty.Access.WRITE_ONLY)
    private AccountType accountType;

    /*
     * The type of agreement.
     */
    @JsonProperty(value = "properties.agreementType", access = JsonProperty.Access.WRITE_ONLY)
    private AgreementType agreementType;

    /*
     * The billing profiles associated with the billing account. By default
     * this is not populated, unless it's specified in $expand. This property
     * is available for agreement type Microsoft Customer Agreement and
     * Microsoft Partner Agreement.
     */
    @JsonProperty(value = "properties.billingProfiles")
    private BillingProfilesOnExpand billingProfiles;

    /*
     * The departments associated to the enrollment. This property is available
     * for agreement type Enterprise Agreement.
     */
    @JsonProperty(value = "properties.departments")
    private List<Department> departments;

    /*
     * The billing account name.
     */
    @JsonProperty(value = "properties.displayName")
    private String displayName;

    /*
     * The accounts associated to the enrollment. This property is available
     * for agreement type Enterprise Agreement.
     */
    @JsonProperty(value = "properties.enrollmentAccounts")
    private List<EnrollmentAccount> enrollmentAccounts;

    /*
     * The details about the associated legacy enrollment. By default this is
     * not populated, unless it's specified in $expand. This property is
     * available for agreement type Enterprise Agreement.
     */
    @JsonProperty(value = "properties.enrollmentDetails", access = JsonProperty.Access.WRITE_ONLY)
    private Enrollment enrollmentDetails;

    /*
     * Notification email address for legacy account. This property is
     * available for agreement type Microsoft Online Services Program.
     */
    @JsonProperty(value = "properties.notificationEmailAddress")
    private String notificationEmailAddress;

    /*
     * Indicates whether user has read access to the billing account.
     */
    @JsonProperty(value = "properties.hasReadAccess", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean hasReadAccess;

    /*
     * The address of the individual or organization that is responsible for
     * the billing account.
     */
    @JsonProperty(value = "properties.soldTo")
    private AddressDetails soldTo;

    /**
     * Get the accountStatus property: The current status of the billing account.
     *
     * @return the accountStatus value.
     */
    public AccountStatus accountStatus() {
        return this.accountStatus;
    }

    /**
     * Get the accountStatusReasonCode property: Reason for the specified billing account status.
     *
     * @return the accountStatusReasonCode value.
     */
    public AccountStatusReasonCode accountStatusReasonCode() {
        return this.accountStatusReasonCode;
    }

    /**
     * Get the accountType property: The type of customer.
     *
     * @return the accountType value.
     */
    public AccountType accountType() {
        return this.accountType;
    }

    /**
     * Get the agreementType property: The type of agreement.
     *
     * @return the agreementType value.
     */
    public AgreementType agreementType() {
        return this.agreementType;
    }

    /**
     * Get the billingProfiles property: The billing profiles associated with the billing account. By default this is
     * not populated, unless it's specified in $expand. This property is available for agreement type Microsoft Customer
     * Agreement and Microsoft Partner Agreement.
     *
     * @return the billingProfiles value.
     */
    public BillingProfilesOnExpand billingProfiles() {
        return this.billingProfiles;
    }

    /**
     * Set the billingProfiles property: The billing profiles associated with the billing account. By default this is
     * not populated, unless it's specified in $expand. This property is available for agreement type Microsoft Customer
     * Agreement and Microsoft Partner Agreement.
     *
     * @param billingProfiles the billingProfiles value to set.
     * @return the BillingAccountInner object itself.
     */
    public BillingAccountInner withBillingProfiles(BillingProfilesOnExpand billingProfiles) {
        this.billingProfiles = billingProfiles;
        return this;
    }

    /**
     * Get the departments property: The departments associated to the enrollment. This property is available for
     * agreement type Enterprise Agreement.
     *
     * @return the departments value.
     */
    public List<Department> departments() {
        return this.departments;
    }

    /**
     * Set the departments property: The departments associated to the enrollment. This property is available for
     * agreement type Enterprise Agreement.
     *
     * @param departments the departments value to set.
     * @return the BillingAccountInner object itself.
     */
    public BillingAccountInner withDepartments(List<Department> departments) {
        this.departments = departments;
        return this;
    }

    /**
     * Get the displayName property: The billing account name.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: The billing account name.
     *
     * @param displayName the displayName value to set.
     * @return the BillingAccountInner object itself.
     */
    public BillingAccountInner withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the enrollmentAccounts property: The accounts associated to the enrollment. This property is available for
     * agreement type Enterprise Agreement.
     *
     * @return the enrollmentAccounts value.
     */
    public List<EnrollmentAccount> enrollmentAccounts() {
        return this.enrollmentAccounts;
    }

    /**
     * Set the enrollmentAccounts property: The accounts associated to the enrollment. This property is available for
     * agreement type Enterprise Agreement.
     *
     * @param enrollmentAccounts the enrollmentAccounts value to set.
     * @return the BillingAccountInner object itself.
     */
    public BillingAccountInner withEnrollmentAccounts(List<EnrollmentAccount> enrollmentAccounts) {
        this.enrollmentAccounts = enrollmentAccounts;
        return this;
    }

    /**
     * Get the enrollmentDetails property: The details about the associated legacy enrollment. By default this is not
     * populated, unless it's specified in $expand. This property is available for agreement type Enterprise Agreement.
     *
     * @return the enrollmentDetails value.
     */
    public Enrollment enrollmentDetails() {
        return this.enrollmentDetails;
    }

    /**
     * Get the notificationEmailAddress property: Notification email address for legacy account. This property is
     * available for agreement type Microsoft Online Services Program.
     *
     * @return the notificationEmailAddress value.
     */
    public String notificationEmailAddress() {
        return this.notificationEmailAddress;
    }

    /**
     * Set the notificationEmailAddress property: Notification email address for legacy account. This property is
     * available for agreement type Microsoft Online Services Program.
     *
     * @param notificationEmailAddress the notificationEmailAddress value to set.
     * @return the BillingAccountInner object itself.
     */
    public BillingAccountInner withNotificationEmailAddress(String notificationEmailAddress) {
        this.notificationEmailAddress = notificationEmailAddress;
        return this;
    }

    /**
     * Get the hasReadAccess property: Indicates whether user has read access to the billing account.
     *
     * @return the hasReadAccess value.
     */
    public Boolean hasReadAccess() {
        return this.hasReadAccess;
    }

    /**
     * Get the soldTo property: The address of the individual or organization that is responsible for the billing
     * account.
     *
     * @return the soldTo value.
     */
    public AddressDetails soldTo() {
        return this.soldTo;
    }

    /**
     * Set the soldTo property: The address of the individual or organization that is responsible for the billing
     * account.
     *
     * @param soldTo the soldTo value to set.
     * @return the BillingAccountInner object itself.
     */
    public BillingAccountInner withSoldTo(AddressDetails soldTo) {
        this.soldTo = soldTo;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (billingProfiles() != null) {
            billingProfiles().validate();
        }
        if (departments() != null) {
            departments().forEach(e -> e.validate());
        }
        if (enrollmentAccounts() != null) {
            enrollmentAccounts().forEach(e -> e.validate());
        }
        if (enrollmentDetails() != null) {
            enrollmentDetails().validate();
        }
        if (soldTo() != null) {
            soldTo().validate();
        }
    }
}
