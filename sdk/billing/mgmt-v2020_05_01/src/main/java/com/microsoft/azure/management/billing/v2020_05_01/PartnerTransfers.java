/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2020_05_01;

import rx.Observable;
import com.microsoft.azure.management.billing.v2020_05_01.PartnerTransferDetails;

/**
 * Type representing PartnerTransfers.
 */
public interface PartnerTransfers {
    /**
     * Begins definition for a new Transfer resource.
     * @param name resource name.
     * @return the first stage of the new Transfer definition.
     */
    PartnerTransferDetails.DefinitionStages.Blank defineTransfer(String name);

    /**
     * Gets a transfer request by ID. The operation is supported only for billing accounts with agreement type Microsoft Partner Agreement.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param customerName The ID that uniquely identifies a customer.
     * @param transferName The ID that uniquely identifies a transfer request.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<PartnerTransferDetails> getAsync(String billingAccountName, String customerName, String transferName);

    /**
     * Lists the transfer requests sent to a customer. The operation is supported only for billing accounts with agreement type Microsoft Partner Agreement.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param customerName The ID that uniquely identifies a customer.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<PartnerTransferDetails> listAsync(final String billingAccountName, final String customerName);

    /**
     * Cancels a transfer request. The operation is supported only for billing accounts with agreement type Microsoft Partner Agreement.
     *
     * @param billingAccountName The ID that uniquely identifies a billing account.
     * @param customerName The ID that uniquely identifies a customer.
     * @param transferName The ID that uniquely identifies a transfer request.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<PartnerTransferDetails> cancelAsync(String billingAccountName, String customerName, String transferName);

}
