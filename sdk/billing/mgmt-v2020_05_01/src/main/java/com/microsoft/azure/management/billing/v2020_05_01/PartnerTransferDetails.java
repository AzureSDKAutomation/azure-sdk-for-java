/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.billing.v2020_05_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.billing.v2020_05_01.implementation.PartnerTransferDetailsInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.billing.v2020_05_01.implementation.BillingManager;
import org.joda.time.DateTime;
import java.util.List;

/**
 * Type representing PartnerTransferDetails.
 */
public interface PartnerTransferDetails extends HasInner<PartnerTransferDetailsInner>, Indexable, Refreshable<PartnerTransferDetails>, Updatable<PartnerTransferDetails.Update>, HasManager<BillingManager> {
    /**
     * @return the canceledBy value.
     */
    String canceledBy();

    /**
     * @return the creationTime value.
     */
    DateTime creationTime();

    /**
     * @return the detailedTransferStatus value.
     */
    List<DetailedTransferStatus> detailedTransferStatus();

    /**
     * @return the expirationTime value.
     */
    DateTime expirationTime();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the initiatorCustomerType value.
     */
    String initiatorCustomerType();

    /**
     * @return the initiatorEmailId value.
     */
    String initiatorEmailId();

    /**
     * @return the lastModifiedTime value.
     */
    DateTime lastModifiedTime();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the recipientEmailId value.
     */
    String recipientEmailId();

    /**
     * @return the resellerId value.
     */
    String resellerId();

    /**
     * @return the resellerName value.
     */
    String resellerName();

    /**
     * @return the transferStatus value.
     */
    TransferStatus transferStatus();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the PartnerTransferDetails definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithCustomer, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of PartnerTransferDetails definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a PartnerTransferDetails definition.
         */
        interface Blank extends WithCustomer {
        }

        /**
         * The stage of the partnertransferdetails definition allowing to specify Customer.
         */
        interface WithCustomer {
           /**
            * Specifies billingAccountName, customerName.
            * @param billingAccountName The ID that uniquely identifies a billing account
            * @param customerName The ID that uniquely identifies a customer
            * @return the next definition stage
            */
            WithCreate withExistingCustomer(String billingAccountName, String customerName);
        }

        /**
         * The stage of the partnertransferdetails definition allowing to specify RecipientEmailId.
         */
        interface WithRecipientEmailId {
            /**
             * Specifies recipientEmailId.
             * @param recipientEmailId The email ID of the recipient to whom the transfer request is sent
             * @return the next definition stage
             */
            WithCreate withRecipientEmailId(String recipientEmailId);
        }

        /**
         * The stage of the partnertransferdetails definition allowing to specify ResellerId.
         */
        interface WithResellerId {
            /**
             * Specifies resellerId.
             * @param resellerId Optional MPN ID of the reseller for transfer requests that are sent from a Microsoft Partner Agreement billing account
             * @return the next definition stage
             */
            WithCreate withResellerId(String resellerId);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<PartnerTransferDetails>, DefinitionStages.WithRecipientEmailId, DefinitionStages.WithResellerId {
        }
    }
    /**
     * The template for a PartnerTransferDetails update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<PartnerTransferDetails>, UpdateStages.WithRecipientEmailId, UpdateStages.WithResellerId {
    }

    /**
     * Grouping of PartnerTransferDetails update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the partnertransferdetails update allowing to specify RecipientEmailId.
         */
        interface WithRecipientEmailId {
            /**
             * Specifies recipientEmailId.
             * @param recipientEmailId The email ID of the recipient to whom the transfer request is sent
             * @return the next update stage
             */
            Update withRecipientEmailId(String recipientEmailId);
        }

        /**
         * The stage of the partnertransferdetails update allowing to specify ResellerId.
         */
        interface WithResellerId {
            /**
             * Specifies resellerId.
             * @param resellerId Optional MPN ID of the reseller for transfer requests that are sent from a Microsoft Partner Agreement billing account
             * @return the next update stage
             */
            Update withResellerId(String resellerId);
        }

    }
}
