// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azureactivedirectory.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.azureactivedirectory.fluent.models.PrivateEndpointConnectionInner;
import com.azure.resourcemanager.azureactivedirectory.models.TagsResource;

/** An instance of this class provides access to all the operations defined in PrivateEndpointConnectionsClient. */
public interface PrivateEndpointConnectionsClient {
    /**
     * Lists all Private Endpoint Connections for the given policy.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param policyName The name of the private link policy in Azure AD.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of private link resources.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PrivateEndpointConnectionInner> listByPolicyName(String resourceGroupName, String policyName);

    /**
     * Lists all Private Endpoint Connections for the given policy.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param policyName The name of the private link policy in Azure AD.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of private link resources.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<PrivateEndpointConnectionInner> listByPolicyName(
        String resourceGroupName, String policyName, Context context);

    /**
     * Updates the specified private endpoint connection associated with the given policy.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param policyName The name of the private link policy in Azure AD.
     * @param privateEndpointConnectionName The PrivateEndpointConnection name.
     * @param parameters The intended state of private endpoint connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return private endpoint connection resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<PrivateEndpointConnectionInner>, PrivateEndpointConnectionInner> beginCreate(
        String resourceGroupName,
        String policyName,
        String privateEndpointConnectionName,
        PrivateEndpointConnectionInner parameters);

    /**
     * Updates the specified private endpoint connection associated with the given policy.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param policyName The name of the private link policy in Azure AD.
     * @param privateEndpointConnectionName The PrivateEndpointConnection name.
     * @param parameters The intended state of private endpoint connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return private endpoint connection resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<PrivateEndpointConnectionInner>, PrivateEndpointConnectionInner> beginCreate(
        String resourceGroupName,
        String policyName,
        String privateEndpointConnectionName,
        PrivateEndpointConnectionInner parameters,
        Context context);

    /**
     * Updates the specified private endpoint connection associated with the given policy.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param policyName The name of the private link policy in Azure AD.
     * @param privateEndpointConnectionName The PrivateEndpointConnection name.
     * @param parameters The intended state of private endpoint connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return private endpoint connection resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PrivateEndpointConnectionInner create(
        String resourceGroupName,
        String policyName,
        String privateEndpointConnectionName,
        PrivateEndpointConnectionInner parameters);

    /**
     * Updates the specified private endpoint connection associated with the given policy.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param policyName The name of the private link policy in Azure AD.
     * @param privateEndpointConnectionName The PrivateEndpointConnection name.
     * @param parameters The intended state of private endpoint connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return private endpoint connection resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PrivateEndpointConnectionInner create(
        String resourceGroupName,
        String policyName,
        String privateEndpointConnectionName,
        PrivateEndpointConnectionInner parameters,
        Context context);

    /**
     * Deletes the specified private endpoint connection associated with the given policy.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param policyName The name of the private link policy in Azure AD.
     * @param privateEndpointConnectionName The PrivateEndpointConnection name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String policyName, String privateEndpointConnectionName);

    /**
     * Deletes the specified private endpoint connection associated with the given policy.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param policyName The name of the private link policy in Azure AD.
     * @param privateEndpointConnectionName The PrivateEndpointConnection name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String policyName, String privateEndpointConnectionName, Context context);

    /**
     * Deletes the specified private endpoint connection associated with the given policy.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param policyName The name of the private link policy in Azure AD.
     * @param privateEndpointConnectionName The PrivateEndpointConnection name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String policyName, String privateEndpointConnectionName);

    /**
     * Deletes the specified private endpoint connection associated with the given policy.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param policyName The name of the private link policy in Azure AD.
     * @param privateEndpointConnectionName The PrivateEndpointConnection name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String policyName, String privateEndpointConnectionName, Context context);

    /**
     * Gets the specified private endpoint connection associated with the given policy.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param policyName The name of the private link policy in Azure AD.
     * @param privateEndpointConnectionName The PrivateEndpointConnection name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified private endpoint connection associated with the given policy.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PrivateEndpointConnectionInner get(
        String resourceGroupName, String policyName, String privateEndpointConnectionName);

    /**
     * Gets the specified private endpoint connection associated with the given policy.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param policyName The name of the private link policy in Azure AD.
     * @param privateEndpointConnectionName The PrivateEndpointConnection name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the specified private endpoint connection associated with the given policy.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<PrivateEndpointConnectionInner> getWithResponse(
        String resourceGroupName, String policyName, String privateEndpointConnectionName, Context context);

    /**
     * Updates an existing Private Endpoint Connection's tags. To update other fields use the Put method.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param policyName The name of the private link policy in Azure AD.
     * @param privateEndpointConnectionName The PrivateEndpointConnection name.
     * @param privateLinkConnectionTags Updated tag information to set into the PrivateLinkConnection instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return private endpoint connection resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    PrivateEndpointConnectionInner updateTags(
        String resourceGroupName,
        String policyName,
        String privateEndpointConnectionName,
        TagsResource privateLinkConnectionTags);

    /**
     * Updates an existing Private Endpoint Connection's tags. To update other fields use the Put method.
     *
     * @param resourceGroupName Name of an Azure resource group.
     * @param policyName The name of the private link policy in Azure AD.
     * @param privateEndpointConnectionName The PrivateEndpointConnection name.
     * @param privateLinkConnectionTags Updated tag information to set into the PrivateLinkConnection instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return private endpoint connection resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<PrivateEndpointConnectionInner> updateTagsWithResponse(
        String resourceGroupName,
        String policyName,
        String privateEndpointConnectionName,
        TagsResource privateLinkConnectionTags,
        Context context);
}
