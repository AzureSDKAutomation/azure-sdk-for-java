// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.privatedns.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.privatedns.generated.fluent.models.PrivateZoneAutoGeneratedInner;
import com.azure.resourcemanager.privatedns.generated.fluent.models.PrivateZoneInner;
import com.azure.resourcemanager.privatedns.generated.models.PrivateZoneAutoGenerated;
import com.azure.resourcemanager.privatedns.generated.models.ProvisioningState;
import java.util.Collections;
import java.util.Map;

public final class PrivateZoneAutoGeneratedImpl
    implements PrivateZoneAutoGenerated, PrivateZoneAutoGenerated.Definition, PrivateZoneAutoGenerated.Update {
    private PrivateZoneAutoGeneratedInner innerObject;

    private final com.azure.resourcemanager.privatedns.generated.PrivateDnsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public Long maxNumberOfRecordSets() {
        return this.innerModel().maxNumberOfRecordSets();
    }

    public Long numberOfRecordSets() {
        return this.innerModel().numberOfRecordSets();
    }

    public Long maxNumberOfVirtualNetworkLinks() {
        return this.innerModel().maxNumberOfVirtualNetworkLinks();
    }

    public Long numberOfVirtualNetworkLinks() {
        return this.innerModel().numberOfVirtualNetworkLinks();
    }

    public Long maxNumberOfVirtualNetworkLinksWithRegistration() {
        return this.innerModel().maxNumberOfVirtualNetworkLinksWithRegistration();
    }

    public Long numberOfVirtualNetworkLinksWithRegistration() {
        return this.innerModel().numberOfVirtualNetworkLinksWithRegistration();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String internalId() {
        return this.innerModel().internalId();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public PrivateZoneAutoGeneratedInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.privatedns.generated.PrivateDnsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String privateZoneName;

    private String createIfMatch;

    private String createIfNoneMatch;

    private PrivateZoneInner createParameters;

    private String updateIfMatch;

    private PrivateZoneInner updateParameters;

    public PrivateZoneAutoGeneratedImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public PrivateZoneAutoGenerated create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPrivateZones()
                .createOrUpdate(
                    resourceGroupName,
                    privateZoneName,
                    createParameters,
                    createIfMatch,
                    createIfNoneMatch,
                    Context.NONE);
        return this;
    }

    public PrivateZoneAutoGenerated create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPrivateZones()
                .createOrUpdate(
                    resourceGroupName, privateZoneName, createParameters, createIfMatch, createIfNoneMatch, context);
        return this;
    }

    PrivateZoneAutoGeneratedImpl(
        String name, com.azure.resourcemanager.privatedns.generated.PrivateDnsManager serviceManager) {
        this.innerObject = new PrivateZoneAutoGeneratedInner();
        this.serviceManager = serviceManager;
        this.privateZoneName = name;
        this.createIfMatch = null;
        this.createIfNoneMatch = null;
        this.createParameters = new PrivateZoneInner();
    }

    public PrivateZoneAutoGeneratedImpl update() {
        this.updateIfMatch = null;
        this.updateParameters = new PrivateZoneInner();
        return this;
    }

    public PrivateZoneAutoGenerated apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPrivateZones()
                .update(resourceGroupName, privateZoneName, updateParameters, updateIfMatch, Context.NONE);
        return this;
    }

    public PrivateZoneAutoGenerated apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPrivateZones()
                .update(resourceGroupName, privateZoneName, updateParameters, updateIfMatch, context);
        return this;
    }

    PrivateZoneAutoGeneratedImpl(
        PrivateZoneAutoGeneratedInner innerObject,
        com.azure.resourcemanager.privatedns.generated.PrivateDnsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.privateZoneName = Utils.getValueFromIdByName(innerObject.id(), "privateDnsZones");
    }

    public PrivateZoneAutoGenerated refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPrivateZones()
                .getWithResponse(resourceGroupName, privateZoneName, Context.NONE)
                .getValue();
        return this;
    }

    public PrivateZoneAutoGenerated refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPrivateZones()
                .getWithResponse(resourceGroupName, privateZoneName, context)
                .getValue();
        return this;
    }

    public PrivateZoneAutoGeneratedImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public PrivateZoneAutoGeneratedImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public PrivateZoneAutoGeneratedImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.innerModel().withTags(tags);
            return this;
        }
    }

    public PrivateZoneAutoGeneratedImpl withEtag(String etag) {
        if (isInCreateMode()) {
            this.innerModel().withEtag(etag);
            return this;
        } else {
            this.innerModel().withEtag(etag);
            return this;
        }
    }

    public PrivateZoneAutoGeneratedImpl withIfMatch(String ifMatch) {
        if (isInCreateMode()) {
            this.createIfMatch = ifMatch;
            return this;
        } else {
            this.updateIfMatch = ifMatch;
            return this;
        }
    }

    public PrivateZoneAutoGeneratedImpl withIfNoneMatch(String ifNoneMatch) {
        this.createIfNoneMatch = ifNoneMatch;
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
