// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Configuration for compute binding. */
@Fluent
public final class ComputeConfiguration {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ComputeConfiguration.class);

    /*
     * Number of instances or nodes.
     */
    @JsonProperty(value = "instanceCount")
    private Integer instanceCount;

    /*
     * SKU type to run on.
     */
    @JsonProperty(value = "instanceType")
    private String instanceType;

    /*
     * Set to true for jobs running on local compute.
     */
    @JsonProperty(value = "isLocal")
    private Boolean isLocal;

    /*
     * Location for virtual cluster run.
     */
    @JsonProperty(value = "location")
    private String location;

    /*
     * Additional properties.
     */
    @JsonProperty(value = "properties")
    private Map<String, String> properties;

    /*
     * ARM resource ID of the compute resource.
     */
    @JsonProperty(value = "target")
    private String target;

    /**
     * Get the instanceCount property: Number of instances or nodes.
     *
     * @return the instanceCount value.
     */
    public Integer instanceCount() {
        return this.instanceCount;
    }

    /**
     * Set the instanceCount property: Number of instances or nodes.
     *
     * @param instanceCount the instanceCount value to set.
     * @return the ComputeConfiguration object itself.
     */
    public ComputeConfiguration withInstanceCount(Integer instanceCount) {
        this.instanceCount = instanceCount;
        return this;
    }

    /**
     * Get the instanceType property: SKU type to run on.
     *
     * @return the instanceType value.
     */
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Set the instanceType property: SKU type to run on.
     *
     * @param instanceType the instanceType value to set.
     * @return the ComputeConfiguration object itself.
     */
    public ComputeConfiguration withInstanceType(String instanceType) {
        this.instanceType = instanceType;
        return this;
    }

    /**
     * Get the isLocal property: Set to true for jobs running on local compute.
     *
     * @return the isLocal value.
     */
    public Boolean isLocal() {
        return this.isLocal;
    }

    /**
     * Set the isLocal property: Set to true for jobs running on local compute.
     *
     * @param isLocal the isLocal value to set.
     * @return the ComputeConfiguration object itself.
     */
    public ComputeConfiguration withIsLocal(Boolean isLocal) {
        this.isLocal = isLocal;
        return this;
    }

    /**
     * Get the location property: Location for virtual cluster run.
     *
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: Location for virtual cluster run.
     *
     * @param location the location value to set.
     * @return the ComputeConfiguration object itself.
     */
    public ComputeConfiguration withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the properties property: Additional properties.
     *
     * @return the properties value.
     */
    public Map<String, String> properties() {
        return this.properties;
    }

    /**
     * Set the properties property: Additional properties.
     *
     * @param properties the properties value to set.
     * @return the ComputeConfiguration object itself.
     */
    public ComputeConfiguration withProperties(Map<String, String> properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the target property: ARM resource ID of the compute resource.
     *
     * @return the target value.
     */
    public String target() {
        return this.target;
    }

    /**
     * Set the target property: ARM resource ID of the compute resource.
     *
     * @param target the target value to set.
     * @return the ComputeConfiguration object itself.
     */
    public ComputeConfiguration withTarget(String target) {
        this.target = target;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
