// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices;

import com.azure.core.credential.TokenCredential;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.AddDatePolicy;
import com.azure.core.http.policy.BearerTokenAuthenticationPolicy;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.http.policy.HttpLoggingPolicy;
import com.azure.core.http.policy.HttpPipelinePolicy;
import com.azure.core.http.policy.HttpPolicyProviders;
import com.azure.core.http.policy.RequestIdPolicy;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.util.Configuration;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.machinelearningservices.fluent.AzureMachineLearningWorkspaces;
import com.azure.resourcemanager.machinelearningservices.implementation.AzureMachineLearningWorkspacesBuilder;
import com.azure.resourcemanager.machinelearningservices.implementation.BatchDeploymentsImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.BatchEndpointsImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.CodeContainersImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.CodeVersionsImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.ComputesImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.DataContainersImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.DataVersionsImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.DatastoresImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.EnvironmentContainersImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.EnvironmentSpecificationVersionsImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.JobsImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.LabelingJobsImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.MachineLearningServicesImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.ModelContainersImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.ModelVersionsImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.NotebooksImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.OnlineDeploymentsImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.OnlineEndpointsImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.OperationsImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.PrivateEndpointConnectionsImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.PrivateLinkResourcesImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.QuotasImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.UsagesImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.VirtualMachineSizesImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.WorkspaceConnectionsImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.WorkspaceFeaturesImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.WorkspaceSkusImpl;
import com.azure.resourcemanager.machinelearningservices.implementation.WorkspacesImpl;
import com.azure.resourcemanager.machinelearningservices.models.BatchDeployments;
import com.azure.resourcemanager.machinelearningservices.models.BatchEndpoints;
import com.azure.resourcemanager.machinelearningservices.models.CodeContainers;
import com.azure.resourcemanager.machinelearningservices.models.CodeVersions;
import com.azure.resourcemanager.machinelearningservices.models.Computes;
import com.azure.resourcemanager.machinelearningservices.models.DataContainers;
import com.azure.resourcemanager.machinelearningservices.models.DataVersions;
import com.azure.resourcemanager.machinelearningservices.models.Datastores;
import com.azure.resourcemanager.machinelearningservices.models.EnvironmentContainers;
import com.azure.resourcemanager.machinelearningservices.models.EnvironmentSpecificationVersions;
import com.azure.resourcemanager.machinelearningservices.models.Jobs;
import com.azure.resourcemanager.machinelearningservices.models.LabelingJobs;
import com.azure.resourcemanager.machinelearningservices.models.MachineLearningServices;
import com.azure.resourcemanager.machinelearningservices.models.ModelContainers;
import com.azure.resourcemanager.machinelearningservices.models.ModelVersions;
import com.azure.resourcemanager.machinelearningservices.models.Notebooks;
import com.azure.resourcemanager.machinelearningservices.models.OnlineDeployments;
import com.azure.resourcemanager.machinelearningservices.models.OnlineEndpoints;
import com.azure.resourcemanager.machinelearningservices.models.Operations;
import com.azure.resourcemanager.machinelearningservices.models.PrivateEndpointConnections;
import com.azure.resourcemanager.machinelearningservices.models.PrivateLinkResources;
import com.azure.resourcemanager.machinelearningservices.models.Quotas;
import com.azure.resourcemanager.machinelearningservices.models.Usages;
import com.azure.resourcemanager.machinelearningservices.models.VirtualMachineSizes;
import com.azure.resourcemanager.machinelearningservices.models.WorkspaceConnections;
import com.azure.resourcemanager.machinelearningservices.models.WorkspaceFeatures;
import com.azure.resourcemanager.machinelearningservices.models.WorkspaceSkus;
import com.azure.resourcemanager.machinelearningservices.models.Workspaces;
import java.time.Duration;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Entry point to MachineLearningServicesManager. These APIs allow end users to operate on Azure Machine Learning
 * Workspace resources.
 */
public final class MachineLearningServicesManager {
    private Operations operations;

    private Workspaces workspaces;

    private Usages usages;

    private VirtualMachineSizes virtualMachineSizes;

    private Quotas quotas;

    private Computes computes;

    private PrivateEndpointConnections privateEndpointConnections;

    private PrivateLinkResources privateLinkResources;

    private Notebooks notebooks;

    private WorkspaceConnections workspaceConnections;

    private BatchEndpoints batchEndpoints;

    private BatchDeployments batchDeployments;

    private CodeContainers codeContainers;

    private CodeVersions codeVersions;

    private DataContainers dataContainers;

    private DataVersions dataVersions;

    private Datastores datastores;

    private EnvironmentContainers environmentContainers;

    private EnvironmentSpecificationVersions environmentSpecificationVersions;

    private Jobs jobs;

    private LabelingJobs labelingJobs;

    private ModelContainers modelContainers;

    private ModelVersions modelVersions;

    private OnlineEndpoints onlineEndpoints;

    private OnlineDeployments onlineDeployments;

    private MachineLearningServices machineLearningServices;

    private WorkspaceFeatures workspaceFeatures;

    private WorkspaceSkus workspaceSkus;

    private final AzureMachineLearningWorkspaces clientObject;

    private MachineLearningServicesManager(
        HttpPipeline httpPipeline, AzureProfile profile, Duration defaultPollInterval) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        this.clientObject =
            new AzureMachineLearningWorkspacesBuilder()
                .pipeline(httpPipeline)
                .endpoint(profile.getEnvironment().getResourceManagerEndpoint())
                .subscriptionId(profile.getSubscriptionId())
                .defaultPollInterval(defaultPollInterval)
                .buildClient();
    }

    /**
     * Creates an instance of MachineLearningServices service API entry point.
     *
     * @param credential the credential to use.
     * @param profile the Azure profile for client.
     * @return the MachineLearningServices service API instance.
     */
    public static MachineLearningServicesManager authenticate(TokenCredential credential, AzureProfile profile) {
        Objects.requireNonNull(credential, "'credential' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return configure().authenticate(credential, profile);
    }

    /**
     * Gets a Configurable instance that can be used to create MachineLearningServicesManager with optional
     * configuration.
     *
     * @return the Configurable instance allowing configurations.
     */
    public static Configurable configure() {
        return new MachineLearningServicesManager.Configurable();
    }

    /** The Configurable allowing configurations to be set. */
    public static final class Configurable {
        private final ClientLogger logger = new ClientLogger(Configurable.class);

        private HttpClient httpClient;
        private HttpLogOptions httpLogOptions;
        private final List<HttpPipelinePolicy> policies = new ArrayList<>();
        private RetryPolicy retryPolicy;
        private Duration defaultPollInterval;

        private Configurable() {
        }

        /**
         * Sets the http client.
         *
         * @param httpClient the HTTP client.
         * @return the configurable object itself.
         */
        public Configurable withHttpClient(HttpClient httpClient) {
            this.httpClient = Objects.requireNonNull(httpClient, "'httpClient' cannot be null.");
            return this;
        }

        /**
         * Sets the logging options to the HTTP pipeline.
         *
         * @param httpLogOptions the HTTP log options.
         * @return the configurable object itself.
         */
        public Configurable withLogOptions(HttpLogOptions httpLogOptions) {
            this.httpLogOptions = Objects.requireNonNull(httpLogOptions, "'httpLogOptions' cannot be null.");
            return this;
        }

        /**
         * Adds the pipeline policy to the HTTP pipeline.
         *
         * @param policy the HTTP pipeline policy.
         * @return the configurable object itself.
         */
        public Configurable withPolicy(HttpPipelinePolicy policy) {
            this.policies.add(Objects.requireNonNull(policy, "'policy' cannot be null."));
            return this;
        }

        /**
         * Sets the retry policy to the HTTP pipeline.
         *
         * @param retryPolicy the HTTP pipeline retry policy.
         * @return the configurable object itself.
         */
        public Configurable withRetryPolicy(RetryPolicy retryPolicy) {
            this.retryPolicy = Objects.requireNonNull(retryPolicy, "'retryPolicy' cannot be null.");
            return this;
        }

        /**
         * Sets the default poll interval, used when service does not provide "Retry-After" header.
         *
         * @param defaultPollInterval the default poll interval.
         * @return the configurable object itself.
         */
        public Configurable withDefaultPollInterval(Duration defaultPollInterval) {
            this.defaultPollInterval = Objects.requireNonNull(defaultPollInterval, "'retryPolicy' cannot be null.");
            if (this.defaultPollInterval.isNegative()) {
                throw logger.logExceptionAsError(new IllegalArgumentException("'httpPipeline' cannot be negative"));
            }
            return this;
        }

        /**
         * Creates an instance of MachineLearningServices service API entry point.
         *
         * @param credential the credential to use.
         * @param profile the Azure profile for client.
         * @return the MachineLearningServices service API instance.
         */
        public MachineLearningServicesManager authenticate(TokenCredential credential, AzureProfile profile) {
            Objects.requireNonNull(credential, "'credential' cannot be null.");
            Objects.requireNonNull(profile, "'profile' cannot be null.");

            StringBuilder userAgentBuilder = new StringBuilder();
            userAgentBuilder
                .append("azsdk-java")
                .append("-")
                .append("com.azure.resourcemanager.machinelearningservices")
                .append("/")
                .append("1.0.0-beta.1");
            if (!Configuration.getGlobalConfiguration().get("AZURE_TELEMETRY_DISABLED", false)) {
                userAgentBuilder
                    .append(" (")
                    .append(Configuration.getGlobalConfiguration().get("java.version"))
                    .append("; ")
                    .append(Configuration.getGlobalConfiguration().get("os.name"))
                    .append("; ")
                    .append(Configuration.getGlobalConfiguration().get("os.version"))
                    .append("; auto-generated)");
            } else {
                userAgentBuilder.append(" (auto-generated)");
            }

            if (retryPolicy == null) {
                retryPolicy = new RetryPolicy("Retry-After", ChronoUnit.SECONDS);
            }
            List<HttpPipelinePolicy> policies = new ArrayList<>();
            policies.add(new UserAgentPolicy(userAgentBuilder.toString()));
            policies.add(new RequestIdPolicy());
            HttpPolicyProviders.addBeforeRetryPolicies(policies);
            policies.add(retryPolicy);
            policies.add(new AddDatePolicy());
            policies
                .add(
                    new BearerTokenAuthenticationPolicy(
                        credential, profile.getEnvironment().getManagementEndpoint() + "/.default"));
            policies.addAll(this.policies);
            HttpPolicyProviders.addAfterRetryPolicies(policies);
            policies.add(new HttpLoggingPolicy(httpLogOptions));
            HttpPipeline httpPipeline =
                new HttpPipelineBuilder()
                    .httpClient(httpClient)
                    .policies(policies.toArray(new HttpPipelinePolicy[0]))
                    .build();
            return new MachineLearningServicesManager(httpPipeline, profile, defaultPollInterval);
        }
    }

    /** @return Resource collection API of Operations. */
    public Operations operations() {
        if (this.operations == null) {
            this.operations = new OperationsImpl(clientObject.getOperations(), this);
        }
        return operations;
    }

    /** @return Resource collection API of Workspaces. */
    public Workspaces workspaces() {
        if (this.workspaces == null) {
            this.workspaces = new WorkspacesImpl(clientObject.getWorkspaces(), this);
        }
        return workspaces;
    }

    /** @return Resource collection API of Usages. */
    public Usages usages() {
        if (this.usages == null) {
            this.usages = new UsagesImpl(clientObject.getUsages(), this);
        }
        return usages;
    }

    /** @return Resource collection API of VirtualMachineSizes. */
    public VirtualMachineSizes virtualMachineSizes() {
        if (this.virtualMachineSizes == null) {
            this.virtualMachineSizes = new VirtualMachineSizesImpl(clientObject.getVirtualMachineSizes(), this);
        }
        return virtualMachineSizes;
    }

    /** @return Resource collection API of Quotas. */
    public Quotas quotas() {
        if (this.quotas == null) {
            this.quotas = new QuotasImpl(clientObject.getQuotas(), this);
        }
        return quotas;
    }

    /** @return Resource collection API of Computes. */
    public Computes computes() {
        if (this.computes == null) {
            this.computes = new ComputesImpl(clientObject.getComputes(), this);
        }
        return computes;
    }

    /** @return Resource collection API of PrivateEndpointConnections. */
    public PrivateEndpointConnections privateEndpointConnections() {
        if (this.privateEndpointConnections == null) {
            this.privateEndpointConnections =
                new PrivateEndpointConnectionsImpl(clientObject.getPrivateEndpointConnections(), this);
        }
        return privateEndpointConnections;
    }

    /** @return Resource collection API of PrivateLinkResources. */
    public PrivateLinkResources privateLinkResources() {
        if (this.privateLinkResources == null) {
            this.privateLinkResources = new PrivateLinkResourcesImpl(clientObject.getPrivateLinkResources(), this);
        }
        return privateLinkResources;
    }

    /** @return Resource collection API of Notebooks. */
    public Notebooks notebooks() {
        if (this.notebooks == null) {
            this.notebooks = new NotebooksImpl(clientObject.getNotebooks(), this);
        }
        return notebooks;
    }

    /** @return Resource collection API of WorkspaceConnections. */
    public WorkspaceConnections workspaceConnections() {
        if (this.workspaceConnections == null) {
            this.workspaceConnections = new WorkspaceConnectionsImpl(clientObject.getWorkspaceConnections(), this);
        }
        return workspaceConnections;
    }

    /** @return Resource collection API of BatchEndpoints. */
    public BatchEndpoints batchEndpoints() {
        if (this.batchEndpoints == null) {
            this.batchEndpoints = new BatchEndpointsImpl(clientObject.getBatchEndpoints(), this);
        }
        return batchEndpoints;
    }

    /** @return Resource collection API of BatchDeployments. */
    public BatchDeployments batchDeployments() {
        if (this.batchDeployments == null) {
            this.batchDeployments = new BatchDeploymentsImpl(clientObject.getBatchDeployments(), this);
        }
        return batchDeployments;
    }

    /** @return Resource collection API of CodeContainers. */
    public CodeContainers codeContainers() {
        if (this.codeContainers == null) {
            this.codeContainers = new CodeContainersImpl(clientObject.getCodeContainers(), this);
        }
        return codeContainers;
    }

    /** @return Resource collection API of CodeVersions. */
    public CodeVersions codeVersions() {
        if (this.codeVersions == null) {
            this.codeVersions = new CodeVersionsImpl(clientObject.getCodeVersions(), this);
        }
        return codeVersions;
    }

    /** @return Resource collection API of DataContainers. */
    public DataContainers dataContainers() {
        if (this.dataContainers == null) {
            this.dataContainers = new DataContainersImpl(clientObject.getDataContainers(), this);
        }
        return dataContainers;
    }

    /** @return Resource collection API of DataVersions. */
    public DataVersions dataVersions() {
        if (this.dataVersions == null) {
            this.dataVersions = new DataVersionsImpl(clientObject.getDataVersions(), this);
        }
        return dataVersions;
    }

    /** @return Resource collection API of Datastores. */
    public Datastores datastores() {
        if (this.datastores == null) {
            this.datastores = new DatastoresImpl(clientObject.getDatastores(), this);
        }
        return datastores;
    }

    /** @return Resource collection API of EnvironmentContainers. */
    public EnvironmentContainers environmentContainers() {
        if (this.environmentContainers == null) {
            this.environmentContainers = new EnvironmentContainersImpl(clientObject.getEnvironmentContainers(), this);
        }
        return environmentContainers;
    }

    /** @return Resource collection API of EnvironmentSpecificationVersions. */
    public EnvironmentSpecificationVersions environmentSpecificationVersions() {
        if (this.environmentSpecificationVersions == null) {
            this.environmentSpecificationVersions =
                new EnvironmentSpecificationVersionsImpl(clientObject.getEnvironmentSpecificationVersions(), this);
        }
        return environmentSpecificationVersions;
    }

    /** @return Resource collection API of Jobs. */
    public Jobs jobs() {
        if (this.jobs == null) {
            this.jobs = new JobsImpl(clientObject.getJobs(), this);
        }
        return jobs;
    }

    /** @return Resource collection API of LabelingJobs. */
    public LabelingJobs labelingJobs() {
        if (this.labelingJobs == null) {
            this.labelingJobs = new LabelingJobsImpl(clientObject.getLabelingJobs(), this);
        }
        return labelingJobs;
    }

    /** @return Resource collection API of ModelContainers. */
    public ModelContainers modelContainers() {
        if (this.modelContainers == null) {
            this.modelContainers = new ModelContainersImpl(clientObject.getModelContainers(), this);
        }
        return modelContainers;
    }

    /** @return Resource collection API of ModelVersions. */
    public ModelVersions modelVersions() {
        if (this.modelVersions == null) {
            this.modelVersions = new ModelVersionsImpl(clientObject.getModelVersions(), this);
        }
        return modelVersions;
    }

    /** @return Resource collection API of OnlineEndpoints. */
    public OnlineEndpoints onlineEndpoints() {
        if (this.onlineEndpoints == null) {
            this.onlineEndpoints = new OnlineEndpointsImpl(clientObject.getOnlineEndpoints(), this);
        }
        return onlineEndpoints;
    }

    /** @return Resource collection API of OnlineDeployments. */
    public OnlineDeployments onlineDeployments() {
        if (this.onlineDeployments == null) {
            this.onlineDeployments = new OnlineDeploymentsImpl(clientObject.getOnlineDeployments(), this);
        }
        return onlineDeployments;
    }

    /** @return Resource collection API of MachineLearningServices. */
    public MachineLearningServices machineLearningServices() {
        if (this.machineLearningServices == null) {
            this.machineLearningServices =
                new MachineLearningServicesImpl(clientObject.getMachineLearningServices(), this);
        }
        return machineLearningServices;
    }

    /** @return Resource collection API of WorkspaceFeatures. */
    public WorkspaceFeatures workspaceFeatures() {
        if (this.workspaceFeatures == null) {
            this.workspaceFeatures = new WorkspaceFeaturesImpl(clientObject.getWorkspaceFeatures(), this);
        }
        return workspaceFeatures;
    }

    /** @return Resource collection API of WorkspaceSkus. */
    public WorkspaceSkus workspaceSkus() {
        if (this.workspaceSkus == null) {
            this.workspaceSkus = new WorkspaceSkusImpl(clientObject.getWorkspaceSkus(), this);
        }
        return workspaceSkus;
    }

    /**
     * @return Wrapped service client AzureMachineLearningWorkspaces providing direct access to the underlying
     *     auto-generated API implementation, based on Azure REST API.
     */
    public AzureMachineLearningWorkspaces serviceClient() {
        return this.clientObject;
    }
}
