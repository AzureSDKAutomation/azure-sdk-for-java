// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The SqlAdminSection model. */
@Fluent
public final class SqlAdminSection {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SqlAdminSection.class);

    /*
     * SQL database user name.
     */
    @JsonProperty(value = "userId", required = true)
    private String userId;

    /*
     * SQL database password.
     */
    @JsonProperty(value = "password")
    private String password;

    /**
     * Get the userId property: SQL database user name.
     *
     * @return the userId value.
     */
    public String userId() {
        return this.userId;
    }

    /**
     * Set the userId property: SQL database user name.
     *
     * @param userId the userId value to set.
     * @return the SqlAdminSection object itself.
     */
    public SqlAdminSection withUserId(String userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Get the password property: SQL database password.
     *
     * @return the password value.
     */
    public String password() {
        return this.password;
    }

    /**
     * Set the password property: SQL database password.
     *
     * @param password the password value to set.
     * @return the SqlAdminSection object itself.
     */
    public SqlAdminSection withPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (userId() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property userId in model SqlAdminSection"));
        }
    }
}
