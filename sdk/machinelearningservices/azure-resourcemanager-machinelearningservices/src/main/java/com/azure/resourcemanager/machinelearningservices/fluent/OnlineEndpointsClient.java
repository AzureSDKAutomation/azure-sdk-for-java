// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearningservices.fluent.models.AuthKeysInner;
import com.azure.resourcemanager.machinelearningservices.fluent.models.AuthTokenInner;
import com.azure.resourcemanager.machinelearningservices.fluent.models.OnlineEndpointPropertiesTrackedResourceInner;
import com.azure.resourcemanager.machinelearningservices.fluent.models.OnlineEndpointPropertiesTrackedResourceLongRunningOperationResponseInner;
import com.azure.resourcemanager.machinelearningservices.models.EndpointComputeType;
import com.azure.resourcemanager.machinelearningservices.models.OrderString;
import com.azure.resourcemanager.machinelearningservices.models.RegenerateEndpointKeysRequest;

/** An instance of this class provides access to all the operations defined in OnlineEndpointsClient. */
public interface OnlineEndpointsClient {
    /**
     * List Online Endpoints.
     *
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of OnlineEndpointProperties entities.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<OnlineEndpointPropertiesTrackedResourceInner> list(String resourceGroupName, String workspaceName);

    /**
     * List Online Endpoints.
     *
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param name Name of the endpoint.
     * @param count Number of endpoints to be retrieved in a page of results.
     * @param computeType EndpointComputeType to be filtered by.
     * @param skiptoken Continuation token for pagination.
     * @param tags A set of tags with which to filter the returned models. It is a comma separated string of tags key or
     *     tags key=value. Example: tagKey1,tagKey2,tagKey3=value3 .
     * @param properties A set of properties with which to filter the returned models. It is a comma separated string of
     *     properties key and/or properties key=value Example: propKey1,propKey2,propKey3=value3 .
     * @param orderBy The option to order the response.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of OnlineEndpointProperties entities.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<OnlineEndpointPropertiesTrackedResourceInner> list(
        String resourceGroupName,
        String workspaceName,
        String name,
        Integer count,
        EndpointComputeType computeType,
        String skiptoken,
        String tags,
        String properties,
        OrderString orderBy,
        Context context);

    /**
     * Delete Online Endpoint.
     *
     * @param endpointName Online Endpoint name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String endpointName, String resourceGroupName, String workspaceName);

    /**
     * Delete Online Endpoint.
     *
     * @param endpointName Online Endpoint name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String endpointName, String resourceGroupName, String workspaceName, Context context);

    /**
     * Get Online Endpoint.
     *
     * @param endpointName Online Endpoint name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return online Endpoint.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OnlineEndpointPropertiesTrackedResourceInner get(
        String endpointName, String resourceGroupName, String workspaceName);

    /**
     * Get Online Endpoint.
     *
     * @param endpointName Online Endpoint name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return online Endpoint.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<OnlineEndpointPropertiesTrackedResourceInner> getWithResponse(
        String endpointName, String resourceGroupName, String workspaceName, Context context);

    /**
     * Create or update Online Endpoint.
     *
     * @param endpointName Online Endpoint name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OnlineEndpointPropertiesTrackedResourceInner createOrUpdate(
        String endpointName, String resourceGroupName, String workspaceName);

    /**
     * Create or update Online Endpoint.
     *
     * @param endpointName Online Endpoint name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param body Online Endpoint entity to apply during operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<OnlineEndpointPropertiesTrackedResourceInner> createOrUpdateWithResponse(
        String endpointName,
        String resourceGroupName,
        String workspaceName,
        OnlineEndpointPropertiesTrackedResourceInner body,
        Context context);

    /**
     * Regenerate AuthKeys for an Endpoint using Key-based authentication.
     *
     * @param endpointName Online Endpoint name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    OnlineEndpointPropertiesTrackedResourceLongRunningOperationResponseInner regenerateKeys(
        String endpointName, String resourceGroupName, String workspaceName);

    /**
     * Regenerate AuthKeys for an Endpoint using Key-based authentication.
     *
     * @param endpointName Online Endpoint name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param body RegenerateKeys request .
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<OnlineEndpointPropertiesTrackedResourceLongRunningOperationResponseInner> regenerateKeysWithResponse(
        String endpointName,
        String resourceGroupName,
        String workspaceName,
        RegenerateEndpointKeysRequest body,
        Context context);

    /**
     * List AuthKeys for an Endpoint using Key-based authentication.
     *
     * @param endpointName Online Endpoint name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AuthKeysInner listKeys(String endpointName, String resourceGroupName, String workspaceName);

    /**
     * List AuthKeys for an Endpoint using Key-based authentication.
     *
     * @param endpointName Online Endpoint name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AuthKeysInner> listKeysWithResponse(
        String endpointName, String resourceGroupName, String workspaceName, Context context);

    /**
     * Retrieve a valid AAD token for an Endpoint using AMLToken-based authentication.
     *
     * @param endpointName Online Endpoint name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return service Token.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AuthTokenInner getToken(String endpointName, String resourceGroupName, String workspaceName);

    /**
     * Retrieve a valid AAD token for an Endpoint using AMLToken-based authentication.
     *
     * @param endpointName Online Endpoint name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return service Token.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AuthTokenInner> getTokenWithResponse(
        String endpointName, String resourceGroupName, String workspaceName, Context context);

    /**
     * Polls an Endpoint operation.
     *
     * @param endpointName The name and identifier for the endpoint.
     * @param operationId The operation ID of the async operation to be polled.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void poll(String endpointName, String operationId, String resourceGroupName, String workspaceName);

    /**
     * Polls an Endpoint operation.
     *
     * @param endpointName The name and identifier for the endpoint.
     * @param operationId The operation ID of the async operation to be polled.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> pollWithResponse(
        String endpointName, String operationId, String resourceGroupName, String workspaceName, Context context);
}
