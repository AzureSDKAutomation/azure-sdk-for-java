// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * Environment specification version details. &lt;see
 * href="https://repo2docker.readthedocs.io/en/latest/specification.html" /&gt;.
 */
@Fluent
public final class EnvironmentSpecificationVersion {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(EnvironmentSpecificationVersion.class);

    /*
     * Standard configuration file used by Conda that lets you install any kind
     * of package, including Python, R, and C/C++ packages.
     * <see
     * href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment"
     * />
     */
    @JsonProperty(value = "condaFile")
    private String condaFile;

    /*
     * The asset description text.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * Configuration settings for Docker.
     */
    @JsonProperty(value = "docker")
    private DockerSpecification docker;

    /*
     * Environment specification is either user managed or curated by the Azure
     * ML service
     * <see
     * href="https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments"
     * />
     */
    @JsonProperty(value = "environmentSpecificationType", access = JsonProperty.Access.WRITE_ONLY)
    private EnvironmentSpecificationType environmentSpecificationType;

    /*
     * Defines configuration specific to inference.
     */
    @JsonProperty(value = "inferenceContainerProperties")
    private InferenceContainerProperties inferenceContainerProperties;

    /*
     * If the name version are system generated (anonymous registration).
     */
    @JsonProperty(value = "isAnonymous")
    private Boolean isAnonymous;

    /*
     * The asset property dictionary.
     */
    @JsonProperty(value = "properties")
    private Map<String, String> properties;

    /*
     * Tag dictionary. Tags can be added, removed, and updated.
     */
    @JsonProperty(value = "tags")
    private Map<String, String> tags;

    /**
     * Get the condaFile property: Standard configuration file used by Conda that lets you install any kind of package,
     * including Python, R, and C/C++ packages. &lt;see
     * href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment"
     * /&gt;.
     *
     * @return the condaFile value.
     */
    public String condaFile() {
        return this.condaFile;
    }

    /**
     * Set the condaFile property: Standard configuration file used by Conda that lets you install any kind of package,
     * including Python, R, and C/C++ packages. &lt;see
     * href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment"
     * /&gt;.
     *
     * @param condaFile the condaFile value to set.
     * @return the EnvironmentSpecificationVersion object itself.
     */
    public EnvironmentSpecificationVersion withCondaFile(String condaFile) {
        this.condaFile = condaFile;
        return this;
    }

    /**
     * Get the description property: The asset description text.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The asset description text.
     *
     * @param description the description value to set.
     * @return the EnvironmentSpecificationVersion object itself.
     */
    public EnvironmentSpecificationVersion withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the docker property: Configuration settings for Docker.
     *
     * @return the docker value.
     */
    public DockerSpecification docker() {
        return this.docker;
    }

    /**
     * Set the docker property: Configuration settings for Docker.
     *
     * @param docker the docker value to set.
     * @return the EnvironmentSpecificationVersion object itself.
     */
    public EnvironmentSpecificationVersion withDocker(DockerSpecification docker) {
        this.docker = docker;
        return this;
    }

    /**
     * Get the environmentSpecificationType property: Environment specification is either user managed or curated by the
     * Azure ML service &lt;see
     * href="https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments" /&gt;.
     *
     * @return the environmentSpecificationType value.
     */
    public EnvironmentSpecificationType environmentSpecificationType() {
        return this.environmentSpecificationType;
    }

    /**
     * Get the inferenceContainerProperties property: Defines configuration specific to inference.
     *
     * @return the inferenceContainerProperties value.
     */
    public InferenceContainerProperties inferenceContainerProperties() {
        return this.inferenceContainerProperties;
    }

    /**
     * Set the inferenceContainerProperties property: Defines configuration specific to inference.
     *
     * @param inferenceContainerProperties the inferenceContainerProperties value to set.
     * @return the EnvironmentSpecificationVersion object itself.
     */
    public EnvironmentSpecificationVersion withInferenceContainerProperties(
        InferenceContainerProperties inferenceContainerProperties) {
        this.inferenceContainerProperties = inferenceContainerProperties;
        return this;
    }

    /**
     * Get the isAnonymous property: If the name version are system generated (anonymous registration).
     *
     * @return the isAnonymous value.
     */
    public Boolean isAnonymous() {
        return this.isAnonymous;
    }

    /**
     * Set the isAnonymous property: If the name version are system generated (anonymous registration).
     *
     * @param isAnonymous the isAnonymous value to set.
     * @return the EnvironmentSpecificationVersion object itself.
     */
    public EnvironmentSpecificationVersion withIsAnonymous(Boolean isAnonymous) {
        this.isAnonymous = isAnonymous;
        return this;
    }

    /**
     * Get the properties property: The asset property dictionary.
     *
     * @return the properties value.
     */
    public Map<String, String> properties() {
        return this.properties;
    }

    /**
     * Set the properties property: The asset property dictionary.
     *
     * @param properties the properties value to set.
     * @return the EnvironmentSpecificationVersion object itself.
     */
    public EnvironmentSpecificationVersion withProperties(Map<String, String> properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the tags property: Tag dictionary. Tags can be added, removed, and updated.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Tag dictionary. Tags can be added, removed, and updated.
     *
     * @param tags the tags value to set.
     * @return the EnvironmentSpecificationVersion object itself.
     */
    public EnvironmentSpecificationVersion withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (docker() != null) {
            docker().validate();
        }
        if (inferenceContainerProperties() != null) {
            inferenceContainerProperties().validate();
        }
    }
}
