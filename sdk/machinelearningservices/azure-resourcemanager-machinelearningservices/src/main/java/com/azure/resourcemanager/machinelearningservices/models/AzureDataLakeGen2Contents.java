// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Azure Data Lake Gen2 datastore configuration. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "contentsType")
@JsonTypeName("AzureDataLakeGen2")
@Fluent
public final class AzureDataLakeGen2Contents extends DatastoreContents {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AzureDataLakeGen2Contents.class);

    /*
     * Storage account name.
     */
    @JsonProperty(value = "accountName", required = true)
    private String accountName;

    /*
     * Storage account container name.
     */
    @JsonProperty(value = "containerName", required = true)
    private String containerName;

    /*
     * Account credentials.
     */
    @JsonProperty(value = "credentials", required = true)
    private DatastoreCredentials credentials;

    /*
     * Azure cloud endpoint for the storage account.
     */
    @JsonProperty(value = "endpoint", required = true)
    private String endpoint;

    /*
     * Protocol used to communicate with the storage account.
     */
    @JsonProperty(value = "protocol", required = true)
    private String protocol;

    /**
     * Get the accountName property: Storage account name.
     *
     * @return the accountName value.
     */
    public String accountName() {
        return this.accountName;
    }

    /**
     * Set the accountName property: Storage account name.
     *
     * @param accountName the accountName value to set.
     * @return the AzureDataLakeGen2Contents object itself.
     */
    public AzureDataLakeGen2Contents withAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }

    /**
     * Get the containerName property: Storage account container name.
     *
     * @return the containerName value.
     */
    public String containerName() {
        return this.containerName;
    }

    /**
     * Set the containerName property: Storage account container name.
     *
     * @param containerName the containerName value to set.
     * @return the AzureDataLakeGen2Contents object itself.
     */
    public AzureDataLakeGen2Contents withContainerName(String containerName) {
        this.containerName = containerName;
        return this;
    }

    /**
     * Get the credentials property: Account credentials.
     *
     * @return the credentials value.
     */
    public DatastoreCredentials credentials() {
        return this.credentials;
    }

    /**
     * Set the credentials property: Account credentials.
     *
     * @param credentials the credentials value to set.
     * @return the AzureDataLakeGen2Contents object itself.
     */
    public AzureDataLakeGen2Contents withCredentials(DatastoreCredentials credentials) {
        this.credentials = credentials;
        return this;
    }

    /**
     * Get the endpoint property: Azure cloud endpoint for the storage account.
     *
     * @return the endpoint value.
     */
    public String endpoint() {
        return this.endpoint;
    }

    /**
     * Set the endpoint property: Azure cloud endpoint for the storage account.
     *
     * @param endpoint the endpoint value to set.
     * @return the AzureDataLakeGen2Contents object itself.
     */
    public AzureDataLakeGen2Contents withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /**
     * Get the protocol property: Protocol used to communicate with the storage account.
     *
     * @return the protocol value.
     */
    public String protocol() {
        return this.protocol;
    }

    /**
     * Set the protocol property: Protocol used to communicate with the storage account.
     *
     * @param protocol the protocol value to set.
     * @return the AzureDataLakeGen2Contents object itself.
     */
    public AzureDataLakeGen2Contents withProtocol(String protocol) {
        this.protocol = protocol;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (accountName() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property accountName in model AzureDataLakeGen2Contents"));
        }
        if (containerName() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property containerName in model AzureDataLakeGen2Contents"));
        }
        if (credentials() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property credentials in model AzureDataLakeGen2Contents"));
        } else {
            credentials().validate();
        }
        if (endpoint() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property endpoint in model AzureDataLakeGen2Contents"));
        }
        if (protocol() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property protocol in model AzureDataLakeGen2Contents"));
        }
    }
}
