// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.Duration;

/** The OnlineRequestSettings model. */
@Fluent
public final class OnlineRequestSettings {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(OnlineRequestSettings.class);

    /*
     * The maxConcurrentRequestsPerInstance property.
     */
    @JsonProperty(value = "maxConcurrentRequestsPerInstance")
    private Integer maxConcurrentRequestsPerInstance;

    /*
     * The maximum queue wait time in ISO 8601 format. Supports millisecond
     * precision.
     */
    @JsonProperty(value = "maxQueueWait")
    private Duration maxQueueWait;

    /*
     * The request timeout in ISO 8601 format. Supports millisecond precision.
     */
    @JsonProperty(value = "requestTimeout")
    private Duration requestTimeout;

    /**
     * Get the maxConcurrentRequestsPerInstance property: The maxConcurrentRequestsPerInstance property.
     *
     * @return the maxConcurrentRequestsPerInstance value.
     */
    public Integer maxConcurrentRequestsPerInstance() {
        return this.maxConcurrentRequestsPerInstance;
    }

    /**
     * Set the maxConcurrentRequestsPerInstance property: The maxConcurrentRequestsPerInstance property.
     *
     * @param maxConcurrentRequestsPerInstance the maxConcurrentRequestsPerInstance value to set.
     * @return the OnlineRequestSettings object itself.
     */
    public OnlineRequestSettings withMaxConcurrentRequestsPerInstance(Integer maxConcurrentRequestsPerInstance) {
        this.maxConcurrentRequestsPerInstance = maxConcurrentRequestsPerInstance;
        return this;
    }

    /**
     * Get the maxQueueWait property: The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
     *
     * @return the maxQueueWait value.
     */
    public Duration maxQueueWait() {
        return this.maxQueueWait;
    }

    /**
     * Set the maxQueueWait property: The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
     *
     * @param maxQueueWait the maxQueueWait value to set.
     * @return the OnlineRequestSettings object itself.
     */
    public OnlineRequestSettings withMaxQueueWait(Duration maxQueueWait) {
        this.maxQueueWait = maxQueueWait;
        return this;
    }

    /**
     * Get the requestTimeout property: The request timeout in ISO 8601 format. Supports millisecond precision.
     *
     * @return the requestTimeout value.
     */
    public Duration requestTimeout() {
        return this.requestTimeout;
    }

    /**
     * Set the requestTimeout property: The request timeout in ISO 8601 format. Supports millisecond precision.
     *
     * @param requestTimeout the requestTimeout value to set.
     * @return the OnlineRequestSettings object itself.
     */
    public OnlineRequestSettings withRequestTimeout(Duration requestTimeout) {
        this.requestTimeout = requestTimeout;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
