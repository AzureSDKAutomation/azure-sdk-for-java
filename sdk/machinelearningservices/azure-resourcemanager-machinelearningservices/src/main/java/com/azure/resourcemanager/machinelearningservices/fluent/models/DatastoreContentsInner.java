// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.machinelearningservices.models.ContentsType;
import com.azure.resourcemanager.machinelearningservices.models.GlusterFsSection;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The DatastoreContents model. */
@Fluent
public final class DatastoreContentsInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DatastoreContentsInner.class);

    /*
     * Storage type backing the datastore.
     */
    @JsonProperty(value = "type", required = true)
    private ContentsType type;

    /*
     * The azureDataLake property.
     */
    @JsonProperty(value = "azureDataLake")
    private AzureDataLakeSectionInner azureDataLake;

    /*
     * The azureMySql property.
     */
    @JsonProperty(value = "azureMySql")
    private AzureMySqlSectionInner azureMySql;

    /*
     * The azurePostgreSql property.
     */
    @JsonProperty(value = "azurePostgreSql")
    private AzurePostgreSqlSectionInner azurePostgreSql;

    /*
     * The azureSqlDatabase property.
     */
    @JsonProperty(value = "azureSqlDatabase")
    private AzureSqlDatabaseSectionInner azureSqlDatabase;

    /*
     * The azureStorage property.
     */
    @JsonProperty(value = "azureStorage")
    private AzureStorageSectionInner azureStorage;

    /*
     * The glusterFs property.
     */
    @JsonProperty(value = "glusterFs")
    private GlusterFsSection glusterFs;

    /**
     * Get the type property: Storage type backing the datastore.
     *
     * @return the type value.
     */
    public ContentsType type() {
        return this.type;
    }

    /**
     * Set the type property: Storage type backing the datastore.
     *
     * @param type the type value to set.
     * @return the DatastoreContentsInner object itself.
     */
    public DatastoreContentsInner withType(ContentsType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the azureDataLake property: The azureDataLake property.
     *
     * @return the azureDataLake value.
     */
    public AzureDataLakeSectionInner azureDataLake() {
        return this.azureDataLake;
    }

    /**
     * Set the azureDataLake property: The azureDataLake property.
     *
     * @param azureDataLake the azureDataLake value to set.
     * @return the DatastoreContentsInner object itself.
     */
    public DatastoreContentsInner withAzureDataLake(AzureDataLakeSectionInner azureDataLake) {
        this.azureDataLake = azureDataLake;
        return this;
    }

    /**
     * Get the azureMySql property: The azureMySql property.
     *
     * @return the azureMySql value.
     */
    public AzureMySqlSectionInner azureMySql() {
        return this.azureMySql;
    }

    /**
     * Set the azureMySql property: The azureMySql property.
     *
     * @param azureMySql the azureMySql value to set.
     * @return the DatastoreContentsInner object itself.
     */
    public DatastoreContentsInner withAzureMySql(AzureMySqlSectionInner azureMySql) {
        this.azureMySql = azureMySql;
        return this;
    }

    /**
     * Get the azurePostgreSql property: The azurePostgreSql property.
     *
     * @return the azurePostgreSql value.
     */
    public AzurePostgreSqlSectionInner azurePostgreSql() {
        return this.azurePostgreSql;
    }

    /**
     * Set the azurePostgreSql property: The azurePostgreSql property.
     *
     * @param azurePostgreSql the azurePostgreSql value to set.
     * @return the DatastoreContentsInner object itself.
     */
    public DatastoreContentsInner withAzurePostgreSql(AzurePostgreSqlSectionInner azurePostgreSql) {
        this.azurePostgreSql = azurePostgreSql;
        return this;
    }

    /**
     * Get the azureSqlDatabase property: The azureSqlDatabase property.
     *
     * @return the azureSqlDatabase value.
     */
    public AzureSqlDatabaseSectionInner azureSqlDatabase() {
        return this.azureSqlDatabase;
    }

    /**
     * Set the azureSqlDatabase property: The azureSqlDatabase property.
     *
     * @param azureSqlDatabase the azureSqlDatabase value to set.
     * @return the DatastoreContentsInner object itself.
     */
    public DatastoreContentsInner withAzureSqlDatabase(AzureSqlDatabaseSectionInner azureSqlDatabase) {
        this.azureSqlDatabase = azureSqlDatabase;
        return this;
    }

    /**
     * Get the azureStorage property: The azureStorage property.
     *
     * @return the azureStorage value.
     */
    public AzureStorageSectionInner azureStorage() {
        return this.azureStorage;
    }

    /**
     * Set the azureStorage property: The azureStorage property.
     *
     * @param azureStorage the azureStorage value to set.
     * @return the DatastoreContentsInner object itself.
     */
    public DatastoreContentsInner withAzureStorage(AzureStorageSectionInner azureStorage) {
        this.azureStorage = azureStorage;
        return this;
    }

    /**
     * Get the glusterFs property: The glusterFs property.
     *
     * @return the glusterFs value.
     */
    public GlusterFsSection glusterFs() {
        return this.glusterFs;
    }

    /**
     * Set the glusterFs property: The glusterFs property.
     *
     * @param glusterFs the glusterFs value to set.
     * @return the DatastoreContentsInner object itself.
     */
    public DatastoreContentsInner withGlusterFs(GlusterFsSection glusterFs) {
        this.glusterFs = glusterFs;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (type() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property type in model DatastoreContentsInner"));
        }
        if (azureDataLake() != null) {
            azureDataLake().validate();
        }
        if (azureMySql() != null) {
            azureMySql().validate();
        }
        if (azurePostgreSql() != null) {
            azurePostgreSql().validate();
        }
        if (azureSqlDatabase() != null) {
            azureSqlDatabase().validate();
        }
        if (azureStorage() != null) {
            azureStorage().validate();
        }
        if (glusterFs() != null) {
            glusterFs().validate();
        }
    }
}
