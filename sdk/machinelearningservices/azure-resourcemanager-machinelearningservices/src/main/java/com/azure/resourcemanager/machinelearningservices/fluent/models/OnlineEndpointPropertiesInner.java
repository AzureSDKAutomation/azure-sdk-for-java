// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.machinelearningservices.models.ComputeConfiguration;
import com.azure.resourcemanager.machinelearningservices.models.EndpointAuthModeType;
import com.azure.resourcemanager.machinelearningservices.models.EndpointProvisioningState;
import com.azure.resourcemanager.machinelearningservices.models.RootError;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Online endpoint configuration. */
@Fluent
public final class OnlineEndpointPropertiesInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(OnlineEndpointPropertiesInner.class);

    /*
     * Description of the inference endpoint.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * Property dictionary. Properties can be added, but not removed or
     * altered.
     */
    @JsonProperty(value = "properties")
    private Map<String, String> properties;

    /*
     * Traffic rules on how the traffic will be routed across deployments.
     */
    @JsonProperty(value = "trafficRules")
    private Map<String, Integer> trafficRules;

    /*
     * The computeConfiguration property.
     */
    @JsonProperty(value = "computeConfiguration")
    private ComputeConfiguration computeConfiguration;

    /*
     * State of provisioning
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private EndpointProvisioningState provisioningState;

    /*
     * Endpoint URI
     */
    @JsonProperty(value = "endpoint", access = JsonProperty.Access.WRITE_ONLY)
    private String endpoint;

    /*
     * Endpoint Swagger URI
     */
    @JsonProperty(value = "swaggerEndpoint", access = JsonProperty.Access.WRITE_ONLY)
    private String swaggerEndpoint;

    /*
     * Inference endpoint authentication mode type
     */
    @JsonProperty(value = "authMode", required = true)
    private EndpointAuthModeType authMode;

    /*
     * The keys property.
     */
    @JsonProperty(value = "keys")
    private AuthKeysInner keys;

    /*
     * The error property.
     */
    @JsonProperty(value = "error")
    private RootError error;

    /**
     * Get the description property: Description of the inference endpoint.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of the inference endpoint.
     *
     * @param description the description value to set.
     * @return the OnlineEndpointPropertiesInner object itself.
     */
    public OnlineEndpointPropertiesInner withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the properties property: Property dictionary. Properties can be added, but not removed or altered.
     *
     * @return the properties value.
     */
    public Map<String, String> properties() {
        return this.properties;
    }

    /**
     * Set the properties property: Property dictionary. Properties can be added, but not removed or altered.
     *
     * @param properties the properties value to set.
     * @return the OnlineEndpointPropertiesInner object itself.
     */
    public OnlineEndpointPropertiesInner withProperties(Map<String, String> properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the trafficRules property: Traffic rules on how the traffic will be routed across deployments.
     *
     * @return the trafficRules value.
     */
    public Map<String, Integer> trafficRules() {
        return this.trafficRules;
    }

    /**
     * Set the trafficRules property: Traffic rules on how the traffic will be routed across deployments.
     *
     * @param trafficRules the trafficRules value to set.
     * @return the OnlineEndpointPropertiesInner object itself.
     */
    public OnlineEndpointPropertiesInner withTrafficRules(Map<String, Integer> trafficRules) {
        this.trafficRules = trafficRules;
        return this;
    }

    /**
     * Get the computeConfiguration property: The computeConfiguration property.
     *
     * @return the computeConfiguration value.
     */
    public ComputeConfiguration computeConfiguration() {
        return this.computeConfiguration;
    }

    /**
     * Set the computeConfiguration property: The computeConfiguration property.
     *
     * @param computeConfiguration the computeConfiguration value to set.
     * @return the OnlineEndpointPropertiesInner object itself.
     */
    public OnlineEndpointPropertiesInner withComputeConfiguration(ComputeConfiguration computeConfiguration) {
        this.computeConfiguration = computeConfiguration;
        return this;
    }

    /**
     * Get the provisioningState property: State of provisioning.
     *
     * @return the provisioningState value.
     */
    public EndpointProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the endpoint property: Endpoint URI.
     *
     * @return the endpoint value.
     */
    public String endpoint() {
        return this.endpoint;
    }

    /**
     * Get the swaggerEndpoint property: Endpoint Swagger URI.
     *
     * @return the swaggerEndpoint value.
     */
    public String swaggerEndpoint() {
        return this.swaggerEndpoint;
    }

    /**
     * Get the authMode property: Inference endpoint authentication mode type.
     *
     * @return the authMode value.
     */
    public EndpointAuthModeType authMode() {
        return this.authMode;
    }

    /**
     * Set the authMode property: Inference endpoint authentication mode type.
     *
     * @param authMode the authMode value to set.
     * @return the OnlineEndpointPropertiesInner object itself.
     */
    public OnlineEndpointPropertiesInner withAuthMode(EndpointAuthModeType authMode) {
        this.authMode = authMode;
        return this;
    }

    /**
     * Get the keys property: The keys property.
     *
     * @return the keys value.
     */
    public AuthKeysInner keys() {
        return this.keys;
    }

    /**
     * Set the keys property: The keys property.
     *
     * @param keys the keys value to set.
     * @return the OnlineEndpointPropertiesInner object itself.
     */
    public OnlineEndpointPropertiesInner withKeys(AuthKeysInner keys) {
        this.keys = keys;
        return this;
    }

    /**
     * Get the error property: The error property.
     *
     * @return the error value.
     */
    public RootError error() {
        return this.error;
    }

    /**
     * Set the error property: The error property.
     *
     * @param error the error value to set.
     * @return the OnlineEndpointPropertiesInner object itself.
     */
    public OnlineEndpointPropertiesInner withError(RootError error) {
        this.error = error;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (computeConfiguration() != null) {
            computeConfiguration().validate();
        }
        if (authMode() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property authMode in model OnlineEndpointPropertiesInner"));
        }
        if (keys() != null) {
            keys().validate();
        }
        if (error() != null) {
            error().validate();
        }
    }
}
