// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Strictly used in update requests. */
@Fluent
public final class PartialOnlineEndpointPartialTrackedResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PartialOnlineEndpointPartialTrackedResource.class);

    /*
     * Service identity associated with a resource.
     */
    @JsonProperty(value = "identity")
    private ResourceIdentity identity;

    /*
     * The kind property.
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * The location property.
     */
    @JsonProperty(value = "location")
    private String location;

    /*
     * Additional attributes of the entity.
     */
    @JsonProperty(value = "properties")
    private PartialOnlineEndpoint properties;

    /*
     * Dictionary of <string>
     */
    @JsonProperty(value = "tags")
    private Map<String, String> tags;

    /**
     * Get the identity property: Service identity associated with a resource.
     *
     * @return the identity value.
     */
    public ResourceIdentity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: Service identity associated with a resource.
     *
     * @param identity the identity value to set.
     * @return the PartialOnlineEndpointPartialTrackedResource object itself.
     */
    public PartialOnlineEndpointPartialTrackedResource withIdentity(ResourceIdentity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the kind property: The kind property.
     *
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: The kind property.
     *
     * @param kind the kind value to set.
     * @return the PartialOnlineEndpointPartialTrackedResource object itself.
     */
    public PartialOnlineEndpointPartialTrackedResource withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the location property: The location property.
     *
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: The location property.
     *
     * @param location the location value to set.
     * @return the PartialOnlineEndpointPartialTrackedResource object itself.
     */
    public PartialOnlineEndpointPartialTrackedResource withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the properties property: Additional attributes of the entity.
     *
     * @return the properties value.
     */
    public PartialOnlineEndpoint properties() {
        return this.properties;
    }

    /**
     * Set the properties property: Additional attributes of the entity.
     *
     * @param properties the properties value to set.
     * @return the PartialOnlineEndpointPartialTrackedResource object itself.
     */
    public PartialOnlineEndpointPartialTrackedResource withProperties(PartialOnlineEndpoint properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the tags property: Dictionary of &lt;string&gt;.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Dictionary of &lt;string&gt;.
     *
     * @param tags the tags value to set.
     * @return the PartialOnlineEndpointPartialTrackedResource object itself.
     */
    public PartialOnlineEndpointPartialTrackedResource withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (identity() != null) {
            identity().validate();
        }
        if (properties() != null) {
            properties().validate();
        }
    }
}
