// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearningservices.MachinelearningservicesManager;
import com.azure.resourcemanager.machinelearningservices.fluent.models.OnlineEndpointPropertiesInner;
import com.azure.resourcemanager.machinelearningservices.fluent.models.OnlineEndpointPropertiesTrackedResourceInner;
import com.azure.resourcemanager.machinelearningservices.models.ManagedIdentity;
import com.azure.resourcemanager.machinelearningservices.models.OnlineEndpointProperties;
import com.azure.resourcemanager.machinelearningservices.models.OnlineEndpointPropertiesTrackedResource;
import com.azure.resourcemanager.machinelearningservices.models.SystemData;
import java.util.Collections;
import java.util.Map;

public final class OnlineEndpointPropertiesTrackedResourceImpl
    implements OnlineEndpointPropertiesTrackedResource,
        OnlineEndpointPropertiesTrackedResource.Definition,
        OnlineEndpointPropertiesTrackedResource.Update {
    private OnlineEndpointPropertiesTrackedResourceInner innerObject;

    private final MachinelearningservicesManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public ManagedIdentity identity() {
        return this.innerModel().identity();
    }

    public OnlineEndpointProperties properties() {
        OnlineEndpointPropertiesInner inner = this.innerModel().properties();
        if (inner != null) {
            return new OnlineEndpointPropertiesImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public OnlineEndpointPropertiesTrackedResourceInner innerModel() {
        return this.innerObject;
    }

    private MachinelearningservicesManager manager() {
        return this.serviceManager;
    }

    private String endpointName;

    private String resourceGroupName;

    private String workspaceName;

    public OnlineEndpointPropertiesTrackedResourceImpl withExistingWorkspace(
        String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public OnlineEndpointPropertiesTrackedResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOnlineEndpoints()
                .createOrUpdateWithResponse(
                    endpointName, resourceGroupName, workspaceName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public OnlineEndpointPropertiesTrackedResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOnlineEndpoints()
                .createOrUpdateWithResponse(endpointName, resourceGroupName, workspaceName, this.innerModel(), context)
                .getValue();
        return this;
    }

    OnlineEndpointPropertiesTrackedResourceImpl(String name, MachinelearningservicesManager serviceManager) {
        this.innerObject = new OnlineEndpointPropertiesTrackedResourceInner();
        this.serviceManager = serviceManager;
        this.endpointName = name;
    }

    public OnlineEndpointPropertiesTrackedResourceImpl update() {
        return this;
    }

    public OnlineEndpointPropertiesTrackedResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOnlineEndpoints()
                .createOrUpdateWithResponse(
                    endpointName, resourceGroupName, workspaceName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public OnlineEndpointPropertiesTrackedResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOnlineEndpoints()
                .createOrUpdateWithResponse(endpointName, resourceGroupName, workspaceName, this.innerModel(), context)
                .getValue();
        return this;
    }

    OnlineEndpointPropertiesTrackedResourceImpl(
        OnlineEndpointPropertiesTrackedResourceInner innerObject, MachinelearningservicesManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.endpointName = Utils.getValueFromIdByName(innerObject.id(), "onlineEndpoints");
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = Utils.getValueFromIdByName(innerObject.id(), "workspaces");
    }

    public OnlineEndpointPropertiesTrackedResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOnlineEndpoints()
                .getWithResponse(endpointName, resourceGroupName, workspaceName, Context.NONE)
                .getValue();
        return this;
    }

    public OnlineEndpointPropertiesTrackedResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOnlineEndpoints()
                .getWithResponse(endpointName, resourceGroupName, workspaceName, context)
                .getValue();
        return this;
    }

    public OnlineEndpointPropertiesTrackedResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public OnlineEndpointPropertiesTrackedResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public OnlineEndpointPropertiesTrackedResourceImpl withProperties(OnlineEndpointPropertiesInner properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public OnlineEndpointPropertiesTrackedResourceImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public OnlineEndpointPropertiesTrackedResourceImpl withKind(String kind) {
        this.innerModel().withKind(kind);
        return this;
    }

    public OnlineEndpointPropertiesTrackedResourceImpl withIdentity(ManagedIdentity identity) {
        this.innerModel().withIdentity(identity);
        return this;
    }
}
