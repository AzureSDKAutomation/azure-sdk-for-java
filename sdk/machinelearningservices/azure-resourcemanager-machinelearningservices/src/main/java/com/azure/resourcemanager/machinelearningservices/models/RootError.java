// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** The RootError model. */
@Fluent
public final class RootError {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RootError.class);

    /*
     * The code property.
     */
    @JsonProperty(value = "code")
    private String code;

    /*
     * The severity property.
     */
    @JsonProperty(value = "severity")
    private Integer severity;

    /*
     * The message property.
     */
    @JsonProperty(value = "message")
    private String message;

    /*
     * The messageFormat property.
     */
    @JsonProperty(value = "messageFormat")
    private String messageFormat;

    /*
     * Dictionary of <string>
     */
    @JsonProperty(value = "messageParameters")
    private Map<String, String> messageParameters;

    /*
     * The referenceCode property.
     */
    @JsonProperty(value = "referenceCode")
    private String referenceCode;

    /*
     * The detailsUri property.
     */
    @JsonProperty(value = "detailsUri")
    private String detailsUri;

    /*
     * The target property.
     */
    @JsonProperty(value = "target")
    private String target;

    /*
     * The details property.
     */
    @JsonProperty(value = "details")
    private List<RootError> details;

    /*
     * The innerError property.
     */
    @JsonProperty(value = "innerError")
    private InnerErrorResponse innerError;

    /**
     * Get the code property: The code property.
     *
     * @return the code value.
     */
    public String code() {
        return this.code;
    }

    /**
     * Set the code property: The code property.
     *
     * @param code the code value to set.
     * @return the RootError object itself.
     */
    public RootError withCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Get the severity property: The severity property.
     *
     * @return the severity value.
     */
    public Integer severity() {
        return this.severity;
    }

    /**
     * Set the severity property: The severity property.
     *
     * @param severity the severity value to set.
     * @return the RootError object itself.
     */
    public RootError withSeverity(Integer severity) {
        this.severity = severity;
        return this;
    }

    /**
     * Get the message property: The message property.
     *
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: The message property.
     *
     * @param message the message value to set.
     * @return the RootError object itself.
     */
    public RootError withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get the messageFormat property: The messageFormat property.
     *
     * @return the messageFormat value.
     */
    public String messageFormat() {
        return this.messageFormat;
    }

    /**
     * Set the messageFormat property: The messageFormat property.
     *
     * @param messageFormat the messageFormat value to set.
     * @return the RootError object itself.
     */
    public RootError withMessageFormat(String messageFormat) {
        this.messageFormat = messageFormat;
        return this;
    }

    /**
     * Get the messageParameters property: Dictionary of &lt;string&gt;.
     *
     * @return the messageParameters value.
     */
    public Map<String, String> messageParameters() {
        return this.messageParameters;
    }

    /**
     * Set the messageParameters property: Dictionary of &lt;string&gt;.
     *
     * @param messageParameters the messageParameters value to set.
     * @return the RootError object itself.
     */
    public RootError withMessageParameters(Map<String, String> messageParameters) {
        this.messageParameters = messageParameters;
        return this;
    }

    /**
     * Get the referenceCode property: The referenceCode property.
     *
     * @return the referenceCode value.
     */
    public String referenceCode() {
        return this.referenceCode;
    }

    /**
     * Set the referenceCode property: The referenceCode property.
     *
     * @param referenceCode the referenceCode value to set.
     * @return the RootError object itself.
     */
    public RootError withReferenceCode(String referenceCode) {
        this.referenceCode = referenceCode;
        return this;
    }

    /**
     * Get the detailsUri property: The detailsUri property.
     *
     * @return the detailsUri value.
     */
    public String detailsUri() {
        return this.detailsUri;
    }

    /**
     * Set the detailsUri property: The detailsUri property.
     *
     * @param detailsUri the detailsUri value to set.
     * @return the RootError object itself.
     */
    public RootError withDetailsUri(String detailsUri) {
        this.detailsUri = detailsUri;
        return this;
    }

    /**
     * Get the target property: The target property.
     *
     * @return the target value.
     */
    public String target() {
        return this.target;
    }

    /**
     * Set the target property: The target property.
     *
     * @param target the target value to set.
     * @return the RootError object itself.
     */
    public RootError withTarget(String target) {
        this.target = target;
        return this;
    }

    /**
     * Get the details property: The details property.
     *
     * @return the details value.
     */
    public List<RootError> details() {
        return this.details;
    }

    /**
     * Set the details property: The details property.
     *
     * @param details the details value to set.
     * @return the RootError object itself.
     */
    public RootError withDetails(List<RootError> details) {
        this.details = details;
        return this;
    }

    /**
     * Get the innerError property: The innerError property.
     *
     * @return the innerError value.
     */
    public InnerErrorResponse innerError() {
        return this.innerError;
    }

    /**
     * Set the innerError property: The innerError property.
     *
     * @param innerError the innerError value to set.
     * @return the RootError object itself.
     */
    public RootError withInnerError(InnerErrorResponse innerError) {
        this.innerError = innerError;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (details() != null) {
            details().forEach(e -> e.validate());
        }
        if (innerError() != null) {
            innerError().validate();
        }
    }
}
