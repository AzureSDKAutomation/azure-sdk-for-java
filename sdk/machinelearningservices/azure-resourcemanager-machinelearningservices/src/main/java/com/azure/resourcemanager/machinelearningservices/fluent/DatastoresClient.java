// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearningservices.fluent.models.DatastoreCredentialsInner;
import com.azure.resourcemanager.machinelearningservices.fluent.models.DatastorePropertiesResourceInner;
import java.util.List;

/** An instance of this class provides access to all the operations defined in DatastoresClient. */
public interface DatastoresClient {
    /**
     * List datastores.
     *
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of DatastoreProperties entities.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DatastorePropertiesResourceInner> list(String resourceGroupName, String workspaceName);

    /**
     * List datastores.
     *
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param skiptoken Continuation token for pagination.
     * @param count Maximum number of results to return.
     * @param isDefault Filter down to the workspace default datastore.
     * @param names Names of datastores to return.
     * @param searchText Text to search for in the datastore names.
     * @param orderBy Order by property (createdtime | modifiedtime | name).
     * @param orderByAsc Order by property in ascending order.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of DatastoreProperties entities.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DatastorePropertiesResourceInner> list(
        String resourceGroupName,
        String workspaceName,
        String skiptoken,
        Integer count,
        Boolean isDefault,
        List<String> names,
        String searchText,
        String orderBy,
        Boolean orderByAsc,
        Context context);

    /**
     * Delete datastore.
     *
     * @param name Datastore name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String name, String resourceGroupName, String workspaceName);

    /**
     * Delete datastore.
     *
     * @param name Datastore name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String name, String resourceGroupName, String workspaceName, Context context);

    /**
     * Get datastore.
     *
     * @param name Datastore name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return datastore.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DatastorePropertiesResourceInner get(String name, String resourceGroupName, String workspaceName);

    /**
     * Get datastore.
     *
     * @param name Datastore name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return datastore.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DatastorePropertiesResourceInner> getWithResponse(
        String name, String resourceGroupName, String workspaceName, Context context);

    /**
     * Create or update datastore.
     *
     * @param name Datastore name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param body Datastore entity to create or update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Resource Manager resource envelope.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DatastorePropertiesResourceInner createOrUpdate(
        String name, String resourceGroupName, String workspaceName, DatastorePropertiesResourceInner body);

    /**
     * Create or update datastore.
     *
     * @param name Datastore name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param body Datastore entity to create or update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Resource Manager resource envelope.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DatastorePropertiesResourceInner> createOrUpdateWithResponse(
        String name,
        String resourceGroupName,
        String workspaceName,
        DatastorePropertiesResourceInner body,
        Context context);

    /**
     * Get datastore secrets.
     *
     * @param name Datastore name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return datastore secrets.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DatastoreCredentialsInner listSecrets(String name, String resourceGroupName, String workspaceName);

    /**
     * Get datastore secrets.
     *
     * @param name Datastore name.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return datastore secrets.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DatastoreCredentialsInner> listSecretsWithResponse(
        String name, String resourceGroupName, String workspaceName, Context context);
}
