// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Compute binding definition. */
@Fluent
public final class ComputeBinding {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ComputeBinding.class);

    /*
     * Resource ID of the compute resource.
     */
    @JsonProperty(value = "computeId", required = true)
    private String computeId;

    /*
     * Number of nodes.
     */
    @JsonProperty(value = "nodeCount")
    private Integer nodeCount;

    /**
     * Get the computeId property: Resource ID of the compute resource.
     *
     * @return the computeId value.
     */
    public String computeId() {
        return this.computeId;
    }

    /**
     * Set the computeId property: Resource ID of the compute resource.
     *
     * @param computeId the computeId value to set.
     * @return the ComputeBinding object itself.
     */
    public ComputeBinding withComputeId(String computeId) {
        this.computeId = computeId;
        return this;
    }

    /**
     * Get the nodeCount property: Number of nodes.
     *
     * @return the nodeCount value.
     */
    public Integer nodeCount() {
        return this.nodeCount;
    }

    /**
     * Set the nodeCount property: Number of nodes.
     *
     * @param nodeCount the nodeCount value to set.
     * @return the ComputeBinding object itself.
     */
    public ComputeBinding withNodeCount(Integer nodeCount) {
        this.nodeCount = nodeCount;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (computeId() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property computeId in model ComputeBinding"));
        }
    }
}
