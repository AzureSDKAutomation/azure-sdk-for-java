// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Mutable online deployment configuration. */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "endpointComputeType",
    defaultImpl = PartialOnlineDeployment.class)
@JsonTypeName("PartialOnlineDeployment")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "K8S", value = PartialAksOnlineDeployment.class),
    @JsonSubTypes.Type(name = "Managed", value = PartialManagedOnlineDeployment.class)
})
@Fluent
public class PartialOnlineDeployment {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PartialOnlineDeployment.class);

    /*
     * The appInsightsEnabled property.
     */
    @JsonProperty(value = "appInsightsEnabled")
    private Boolean appInsightsEnabled;

    /*
     * The livenessProbe property.
     */
    @JsonProperty(value = "livenessProbe")
    private ProbeSettings livenessProbe;

    /*
     * The requestSettings property.
     */
    @JsonProperty(value = "requestSettings")
    private OnlineRequestSettings requestSettings;

    /*
     * The scaleSettings property.
     */
    @JsonProperty(value = "scaleSettings")
    private OnlineScaleSettings scaleSettings;

    /**
     * Get the appInsightsEnabled property: The appInsightsEnabled property.
     *
     * @return the appInsightsEnabled value.
     */
    public Boolean appInsightsEnabled() {
        return this.appInsightsEnabled;
    }

    /**
     * Set the appInsightsEnabled property: The appInsightsEnabled property.
     *
     * @param appInsightsEnabled the appInsightsEnabled value to set.
     * @return the PartialOnlineDeployment object itself.
     */
    public PartialOnlineDeployment withAppInsightsEnabled(Boolean appInsightsEnabled) {
        this.appInsightsEnabled = appInsightsEnabled;
        return this;
    }

    /**
     * Get the livenessProbe property: The livenessProbe property.
     *
     * @return the livenessProbe value.
     */
    public ProbeSettings livenessProbe() {
        return this.livenessProbe;
    }

    /**
     * Set the livenessProbe property: The livenessProbe property.
     *
     * @param livenessProbe the livenessProbe value to set.
     * @return the PartialOnlineDeployment object itself.
     */
    public PartialOnlineDeployment withLivenessProbe(ProbeSettings livenessProbe) {
        this.livenessProbe = livenessProbe;
        return this;
    }

    /**
     * Get the requestSettings property: The requestSettings property.
     *
     * @return the requestSettings value.
     */
    public OnlineRequestSettings requestSettings() {
        return this.requestSettings;
    }

    /**
     * Set the requestSettings property: The requestSettings property.
     *
     * @param requestSettings the requestSettings value to set.
     * @return the PartialOnlineDeployment object itself.
     */
    public PartialOnlineDeployment withRequestSettings(OnlineRequestSettings requestSettings) {
        this.requestSettings = requestSettings;
        return this;
    }

    /**
     * Get the scaleSettings property: The scaleSettings property.
     *
     * @return the scaleSettings value.
     */
    public OnlineScaleSettings scaleSettings() {
        return this.scaleSettings;
    }

    /**
     * Set the scaleSettings property: The scaleSettings property.
     *
     * @param scaleSettings the scaleSettings value to set.
     * @return the PartialOnlineDeployment object itself.
     */
    public PartialOnlineDeployment withScaleSettings(OnlineScaleSettings scaleSettings) {
        this.scaleSettings = scaleSettings;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (livenessProbe() != null) {
            livenessProbe().validate();
        }
        if (requestSettings() != null) {
            requestSettings().validate();
        }
        if (scaleSettings() != null) {
            scaleSettings().validate();
        }
    }
}
