// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearningservices.MachinelearningservicesManager;
import com.azure.resourcemanager.machinelearningservices.fluent.models.DatastorePropertiesInner;
import com.azure.resourcemanager.machinelearningservices.fluent.models.DatastorePropertiesResourceInner;
import com.azure.resourcemanager.machinelearningservices.models.DatastoreProperties;
import com.azure.resourcemanager.machinelearningservices.models.DatastorePropertiesResource;
import com.azure.resourcemanager.machinelearningservices.models.SystemData;

public final class DatastorePropertiesResourceImpl
    implements DatastorePropertiesResource, DatastorePropertiesResource.Definition, DatastorePropertiesResource.Update {
    private DatastorePropertiesResourceInner innerObject;

    private final MachinelearningservicesManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public DatastoreProperties properties() {
        DatastorePropertiesInner inner = this.innerModel().properties();
        if (inner != null) {
            return new DatastorePropertiesImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public DatastorePropertiesResourceInner innerModel() {
        return this.innerObject;
    }

    private MachinelearningservicesManager manager() {
        return this.serviceManager;
    }

    private String name;

    private String resourceGroupName;

    private String workspaceName;

    public DatastorePropertiesResourceImpl withExistingWorkspace(String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public DatastorePropertiesResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDatastores()
                .createOrUpdateWithResponse(name, resourceGroupName, workspaceName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public DatastorePropertiesResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDatastores()
                .createOrUpdateWithResponse(name, resourceGroupName, workspaceName, this.innerModel(), context)
                .getValue();
        return this;
    }

    DatastorePropertiesResourceImpl(String name, MachinelearningservicesManager serviceManager) {
        this.innerObject = new DatastorePropertiesResourceInner();
        this.serviceManager = serviceManager;
        this.name = name;
    }

    public DatastorePropertiesResourceImpl update() {
        return this;
    }

    public DatastorePropertiesResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDatastores()
                .createOrUpdateWithResponse(name, resourceGroupName, workspaceName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public DatastorePropertiesResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDatastores()
                .createOrUpdateWithResponse(name, resourceGroupName, workspaceName, this.innerModel(), context)
                .getValue();
        return this;
    }

    DatastorePropertiesResourceImpl(
        DatastorePropertiesResourceInner innerObject, MachinelearningservicesManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.name = Utils.getValueFromIdByName(innerObject.id(), "datastores");
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = Utils.getValueFromIdByName(innerObject.id(), "workspaces");
    }

    public DatastorePropertiesResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDatastores()
                .getWithResponse(name, resourceGroupName, workspaceName, Context.NONE)
                .getValue();
        return this;
    }

    public DatastorePropertiesResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDatastores()
                .getWithResponse(name, resourceGroupName, workspaceName, context)
                .getValue();
        return this;
    }

    public DatastorePropertiesResourceImpl withProperties(DatastorePropertiesInner properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
