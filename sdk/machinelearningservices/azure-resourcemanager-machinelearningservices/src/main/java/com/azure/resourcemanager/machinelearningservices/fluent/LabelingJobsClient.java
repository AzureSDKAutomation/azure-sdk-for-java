// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearningservices.fluent.models.ExportSummaryResourceInner;
import com.azure.resourcemanager.machinelearningservices.fluent.models.LabelingJobResourceInner;
import com.azure.resourcemanager.machinelearningservices.models.ExportFormatType;
import java.util.UUID;

/** An instance of this class provides access to all the operations defined in LabelingJobsClient. */
public interface LabelingJobsClient {
    /**
     * Creates or updates a labeling job.
     *
     * @param id The name and identifier for the LabelingJob.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Resource Manager resource envelope.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LabelingJobResourceInner createOrUpdate(String id, String resourceGroupName, String workspaceName);

    /**
     * Creates or updates a labeling job.
     *
     * @param id The name and identifier for the LabelingJob.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param body LabelingJob definition object.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return azure Resource Manager resource envelope.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<LabelingJobResourceInner> createOrUpdateWithResponse(
        String id, String resourceGroupName, String workspaceName, LabelingJobResourceInner body, Context context);

    /**
     * Gets a labeling job by name/id.
     *
     * @param id The name and identifier for the LabelingJob.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a labeling job by name/id.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    LabelingJobResourceInner get(String id, String resourceGroupName, String workspaceName);

    /**
     * Gets a labeling job by name/id.
     *
     * @param id The name and identifier for the LabelingJob.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param includeJobInstructions Boolean value to indicate whether to include JobInstructions in response.
     * @param includeLabelCategories Boolean value to indicate Whether to include LabelCategories in response.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a labeling job by name/id.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<LabelingJobResourceInner> getWithResponse(
        String id,
        String resourceGroupName,
        String workspaceName,
        Boolean includeJobInstructions,
        Boolean includeLabelCategories,
        Context context);

    /**
     * Delete a labeling job.
     *
     * @param id The name and identifier for the LabelingJob.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String id, String resourceGroupName, String workspaceName);

    /**
     * Delete a labeling job.
     *
     * @param id The name and identifier for the LabelingJob.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String id, String resourceGroupName, String workspaceName, Context context);

    /**
     * Lists labeling jobs in the workspace.
     *
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of LabelingJob entities.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LabelingJobResourceInner> list(String resourceGroupName, String workspaceName);

    /**
     * Lists labeling jobs in the workspace.
     *
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param skiptoken Continuation token for pagination.
     * @param count Number of labeling jobs to return.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a paginated list of LabelingJob entities.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<LabelingJobResourceInner> list(
        String resourceGroupName, String workspaceName, String skiptoken, Integer count, Context context);

    /**
     * Pause a labeling job.
     *
     * @param id The name and identifier for the LabelingJob.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void pause(String id, String resourceGroupName, String workspaceName);

    /**
     * Pause a labeling job.
     *
     * @param id The name and identifier for the LabelingJob.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> pauseWithResponse(String id, String resourceGroupName, String workspaceName, Context context);

    /**
     * Resume a labeling job.
     *
     * @param id The name and identifier for the LabelingJob.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void resume(String id, String resourceGroupName, String workspaceName);

    /**
     * Resume a labeling job.
     *
     * @param id The name and identifier for the LabelingJob.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> resumeWithResponse(String id, String resourceGroupName, String workspaceName, Context context);

    /**
     * Export labels from a labeling job.
     *
     * @param id The name and identifier for the LabelingJob.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void exportLabels(String id, String resourceGroupName, String workspaceName);

    /**
     * Export labels from a labeling job.
     *
     * @param id The name and identifier for the LabelingJob.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param body The desired format of export operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> exportLabelsWithResponse(
        String id, String resourceGroupName, String workspaceName, ExportFormatType body, Context context);

    /**
     * Get export summary from a labeling job.
     *
     * @param id The name and identifier for the LabelingJob.
     * @param exportId The unique identifier of Export Labels operation.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return export summary from a labeling job.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExportSummaryResourceInner getExportSummary(
        String id, UUID exportId, String resourceGroupName, String workspaceName);

    /**
     * Get export summary from a labeling job.
     *
     * @param id The name and identifier for the LabelingJob.
     * @param exportId The unique identifier of Export Labels operation.
     * @param resourceGroupName Name of the resource group in which workspace is located.
     * @param workspaceName Name of Azure Machine Learning workspace.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return export summary from a labeling job.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ExportSummaryResourceInner> getExportSummaryWithResponse(
        String id, UUID exportId, String resourceGroupName, String workspaceName, Context context);
}
