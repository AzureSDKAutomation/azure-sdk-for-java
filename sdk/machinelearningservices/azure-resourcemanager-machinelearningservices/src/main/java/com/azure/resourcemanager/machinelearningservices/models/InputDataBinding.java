// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The InputDataBinding model. */
@Fluent
public final class InputDataBinding {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(InputDataBinding.class);

    /*
     * ARM resource ID of the registered dataVersion.
     */
    @JsonProperty(value = "dataId")
    private String dataId;

    /*
     * Mechanism for accessing the data artifact.
     */
    @JsonProperty(value = "mode")
    private DataBindingMode mode;

    /*
     * Location of data inside the container process.
     */
    @JsonProperty(value = "pathOnCompute")
    private String pathOnCompute;

    /**
     * Get the dataId property: ARM resource ID of the registered dataVersion.
     *
     * @return the dataId value.
     */
    public String dataId() {
        return this.dataId;
    }

    /**
     * Set the dataId property: ARM resource ID of the registered dataVersion.
     *
     * @param dataId the dataId value to set.
     * @return the InputDataBinding object itself.
     */
    public InputDataBinding withDataId(String dataId) {
        this.dataId = dataId;
        return this;
    }

    /**
     * Get the mode property: Mechanism for accessing the data artifact.
     *
     * @return the mode value.
     */
    public DataBindingMode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: Mechanism for accessing the data artifact.
     *
     * @param mode the mode value to set.
     * @return the InputDataBinding object itself.
     */
    public InputDataBinding withMode(DataBindingMode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Get the pathOnCompute property: Location of data inside the container process.
     *
     * @return the pathOnCompute value.
     */
    public String pathOnCompute() {
        return this.pathOnCompute;
    }

    /**
     * Set the pathOnCompute property: Location of data inside the container process.
     *
     * @param pathOnCompute the pathOnCompute value to set.
     * @return the InputDataBinding object itself.
     */
    public InputDataBinding withPathOnCompute(String pathOnCompute) {
        this.pathOnCompute = pathOnCompute;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
