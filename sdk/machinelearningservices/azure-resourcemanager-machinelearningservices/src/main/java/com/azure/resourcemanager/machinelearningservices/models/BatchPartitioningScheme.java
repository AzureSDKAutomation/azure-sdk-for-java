// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Partitioning scheme for batch inference operation. */
@Fluent
public final class BatchPartitioningScheme {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(BatchPartitioningScheme.class);

    /*
     * Partition keys list used for Named partitioning.
     */
    @JsonProperty(value = "partitioningKeys")
    private List<String> partitioningKeys;

    /*
     * Size of the mini-batch passed to each batch invocation.
     * For FileDataset, this is the number of files per mini-batch.
     * For TabularDataset, this is the size of the records in bytes, per
     * mini-batch.
     */
    @JsonProperty(value = "miniBatchSize")
    private Long miniBatchSize;

    /**
     * Get the partitioningKeys property: Partition keys list used for Named partitioning.
     *
     * @return the partitioningKeys value.
     */
    public List<String> partitioningKeys() {
        return this.partitioningKeys;
    }

    /**
     * Set the partitioningKeys property: Partition keys list used for Named partitioning.
     *
     * @param partitioningKeys the partitioningKeys value to set.
     * @return the BatchPartitioningScheme object itself.
     */
    public BatchPartitioningScheme withPartitioningKeys(List<String> partitioningKeys) {
        this.partitioningKeys = partitioningKeys;
        return this;
    }

    /**
     * Get the miniBatchSize property: Size of the mini-batch passed to each batch invocation. For FileDataset, this is
     * the number of files per mini-batch. For TabularDataset, this is the size of the records in bytes, per mini-batch.
     *
     * @return the miniBatchSize value.
     */
    public Long miniBatchSize() {
        return this.miniBatchSize;
    }

    /**
     * Set the miniBatchSize property: Size of the mini-batch passed to each batch invocation. For FileDataset, this is
     * the number of files per mini-batch. For TabularDataset, this is the size of the records in bytes, per mini-batch.
     *
     * @param miniBatchSize the miniBatchSize value to set.
     * @return the BatchPartitioningScheme object itself.
     */
    public BatchPartitioningScheme withMiniBatchSize(Long miniBatchSize) {
        this.miniBatchSize = miniBatchSize;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
