// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Details of an RegisteredCode. */
@Fluent
public final class CodeVersion {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CodeVersion.class);

    /*
     * The asset datastoreId
     */
    @JsonProperty(value = "datastoreId")
    private String datastoreId;

    /*
     * Details of an AssetUri.
     */
    @JsonProperty(value = "assetPath")
    private AssetPath assetPath;

    /*
     * The asset description text.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * Tag dictionary. Tags can be added, removed, and updated.
     */
    @JsonProperty(value = "tags")
    private Map<String, String> tags;

    /*
     * The asset property dictionary.
     */
    @JsonProperty(value = "properties")
    private Map<String, String> properties;

    /**
     * Get the datastoreId property: The asset datastoreId.
     *
     * @return the datastoreId value.
     */
    public String datastoreId() {
        return this.datastoreId;
    }

    /**
     * Set the datastoreId property: The asset datastoreId.
     *
     * @param datastoreId the datastoreId value to set.
     * @return the CodeVersion object itself.
     */
    public CodeVersion withDatastoreId(String datastoreId) {
        this.datastoreId = datastoreId;
        return this;
    }

    /**
     * Get the assetPath property: Details of an AssetUri.
     *
     * @return the assetPath value.
     */
    public AssetPath assetPath() {
        return this.assetPath;
    }

    /**
     * Set the assetPath property: Details of an AssetUri.
     *
     * @param assetPath the assetPath value to set.
     * @return the CodeVersion object itself.
     */
    public CodeVersion withAssetPath(AssetPath assetPath) {
        this.assetPath = assetPath;
        return this;
    }

    /**
     * Get the description property: The asset description text.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The asset description text.
     *
     * @param description the description value to set.
     * @return the CodeVersion object itself.
     */
    public CodeVersion withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the tags property: Tag dictionary. Tags can be added, removed, and updated.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Tag dictionary. Tags can be added, removed, and updated.
     *
     * @param tags the tags value to set.
     * @return the CodeVersion object itself.
     */
    public CodeVersion withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the properties property: The asset property dictionary.
     *
     * @return the properties value.
     */
    public Map<String, String> properties() {
        return this.properties;
    }

    /**
     * Set the properties property: The asset property dictionary.
     *
     * @param properties the properties value to set.
     * @return the CodeVersion object itself.
     */
    public CodeVersion withProperties(Map<String, String> properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (assetPath() != null) {
            assetPath().validate();
        }
    }
}
