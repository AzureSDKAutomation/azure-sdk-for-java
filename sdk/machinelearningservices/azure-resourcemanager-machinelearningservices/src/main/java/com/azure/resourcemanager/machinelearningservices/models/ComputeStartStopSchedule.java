// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Compute start stop schedule properties. */
@Fluent
public final class ComputeStartStopSchedule {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ComputeStartStopSchedule.class);

    /*
     * Schedule id.
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /*
     * The current deployment state of schedule.
     */
    @JsonProperty(value = "provisioningStatus", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningStatus provisioningStatus;

    /*
     * The schedule status.
     */
    @JsonProperty(value = "status")
    private ScheduleStatus status;

    /*
     * The schedule trigger type.
     */
    @JsonProperty(value = "triggerType")
    private TriggerType triggerType;

    /*
     * The compute power action.
     */
    @JsonProperty(value = "action")
    private ComputePowerAction action;

    /*
     * The workflow trigger recurrence for ComputeStartStop schedule type.
     */
    @JsonProperty(value = "recurrence")
    private Recurrence recurrence;

    /*
     * The workflow trigger cron for ComputeStartStop schedule type.
     */
    @JsonProperty(value = "cron")
    private Cron cron;

    /**
     * Get the id property: Schedule id.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the provisioningStatus property: The current deployment state of schedule.
     *
     * @return the provisioningStatus value.
     */
    public ProvisioningStatus provisioningStatus() {
        return this.provisioningStatus;
    }

    /**
     * Get the status property: The schedule status.
     *
     * @return the status value.
     */
    public ScheduleStatus status() {
        return this.status;
    }

    /**
     * Set the status property: The schedule status.
     *
     * @param status the status value to set.
     * @return the ComputeStartStopSchedule object itself.
     */
    public ComputeStartStopSchedule withStatus(ScheduleStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the triggerType property: The schedule trigger type.
     *
     * @return the triggerType value.
     */
    public TriggerType triggerType() {
        return this.triggerType;
    }

    /**
     * Set the triggerType property: The schedule trigger type.
     *
     * @param triggerType the triggerType value to set.
     * @return the ComputeStartStopSchedule object itself.
     */
    public ComputeStartStopSchedule withTriggerType(TriggerType triggerType) {
        this.triggerType = triggerType;
        return this;
    }

    /**
     * Get the action property: The compute power action.
     *
     * @return the action value.
     */
    public ComputePowerAction action() {
        return this.action;
    }

    /**
     * Set the action property: The compute power action.
     *
     * @param action the action value to set.
     * @return the ComputeStartStopSchedule object itself.
     */
    public ComputeStartStopSchedule withAction(ComputePowerAction action) {
        this.action = action;
        return this;
    }

    /**
     * Get the recurrence property: The workflow trigger recurrence for ComputeStartStop schedule type.
     *
     * @return the recurrence value.
     */
    public Recurrence recurrence() {
        return this.recurrence;
    }

    /**
     * Set the recurrence property: The workflow trigger recurrence for ComputeStartStop schedule type.
     *
     * @param recurrence the recurrence value to set.
     * @return the ComputeStartStopSchedule object itself.
     */
    public ComputeStartStopSchedule withRecurrence(Recurrence recurrence) {
        this.recurrence = recurrence;
        return this;
    }

    /**
     * Get the cron property: The workflow trigger cron for ComputeStartStop schedule type.
     *
     * @return the cron value.
     */
    public Cron cron() {
        return this.cron;
    }

    /**
     * Set the cron property: The workflow trigger cron for ComputeStartStop schedule type.
     *
     * @param cron the cron value to set.
     * @return the ComputeStartStopSchedule object itself.
     */
    public ComputeStartStopSchedule withCron(Cron cron) {
        this.cron = cron;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (recurrence() != null) {
            recurrence().validate();
        }
        if (cron() != null) {
            cron().validate();
        }
    }
}
