// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The OutputDataBinding model. */
@Fluent
public final class OutputDataBinding {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(OutputDataBinding.class);

    /*
     * ARM resource ID of the datastore where the data output will be stored.
     */
    @JsonProperty(value = "datastoreId")
    private String datastoreId;

    /*
     * Mechanism for data movement to datastore.
     */
    @JsonProperty(value = "mode")
    private DataBindingMode mode;

    /*
     * Location of data inside the container process.
     */
    @JsonProperty(value = "pathOnCompute")
    private String pathOnCompute;

    /*
     * Path within the datastore to the data.
     */
    @JsonProperty(value = "pathOnDatastore")
    private String pathOnDatastore;

    /**
     * Get the datastoreId property: ARM resource ID of the datastore where the data output will be stored.
     *
     * @return the datastoreId value.
     */
    public String datastoreId() {
        return this.datastoreId;
    }

    /**
     * Set the datastoreId property: ARM resource ID of the datastore where the data output will be stored.
     *
     * @param datastoreId the datastoreId value to set.
     * @return the OutputDataBinding object itself.
     */
    public OutputDataBinding withDatastoreId(String datastoreId) {
        this.datastoreId = datastoreId;
        return this;
    }

    /**
     * Get the mode property: Mechanism for data movement to datastore.
     *
     * @return the mode value.
     */
    public DataBindingMode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: Mechanism for data movement to datastore.
     *
     * @param mode the mode value to set.
     * @return the OutputDataBinding object itself.
     */
    public OutputDataBinding withMode(DataBindingMode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Get the pathOnCompute property: Location of data inside the container process.
     *
     * @return the pathOnCompute value.
     */
    public String pathOnCompute() {
        return this.pathOnCompute;
    }

    /**
     * Set the pathOnCompute property: Location of data inside the container process.
     *
     * @param pathOnCompute the pathOnCompute value to set.
     * @return the OutputDataBinding object itself.
     */
    public OutputDataBinding withPathOnCompute(String pathOnCompute) {
        this.pathOnCompute = pathOnCompute;
        return this;
    }

    /**
     * Get the pathOnDatastore property: Path within the datastore to the data.
     *
     * @return the pathOnDatastore value.
     */
    public String pathOnDatastore() {
        return this.pathOnDatastore;
    }

    /**
     * Set the pathOnDatastore property: Path within the datastore to the data.
     *
     * @param pathOnDatastore the pathOnDatastore value to set.
     * @return the OutputDataBinding object itself.
     */
    public OutputDataBinding withPathOnDatastore(String pathOnDatastore) {
        this.pathOnDatastore = pathOnDatastore;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
