// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/** Labeling job definition. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "jobType")
@JsonTypeName("Labeling")
@Fluent
public final class LabelingJob extends JobBase {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(LabelingJob.class);

    /*
     * Label categories of the job.
     */
    @JsonProperty(value = "labelCategories")
    private Map<String, LabelCategory> labelCategories;

    /*
     * Instructions for labeling job
     */
    @JsonProperty(value = "jobInstructions")
    private LabelingJobInstructions jobInstructions;

    /*
     * Labeling dataset configuration definition
     */
    @JsonProperty(value = "datasetConfiguration")
    private LabelingDatasetConfiguration datasetConfiguration;

    /*
     * Labeling MLAssist configuration definition
     */
    @JsonProperty(value = "mlAssistConfiguration")
    private MLAssistConfiguration mlAssistConfiguration;

    /*
     * Properties of a labeling job
     */
    @JsonProperty(value = "labelingJobMediaProperties")
    private LabelingJobMediaProperties labelingJobMediaProperties;

    /*
     * Internal id of the job(Previously called project).
     */
    @JsonProperty(value = "projectId")
    private UUID projectId;

    /*
     * Status of the job.
     */
    @JsonProperty(value = "status")
    private JobStatus status;

    /*
     * Progress metrics definition
     */
    @JsonProperty(value = "progressMetrics")
    private ProgressMetrics progressMetrics;

    /*
     * Status messages of the job.
     */
    @JsonProperty(value = "statusMessages")
    private List<StatusMessage> statusMessages;

    /*
     * Created time of the job in UTC timezone.
     */
    @JsonProperty(value = "createdTimeUtc")
    private OffsetDateTime createdTimeUtc;

    /**
     * Get the labelCategories property: Label categories of the job.
     *
     * @return the labelCategories value.
     */
    public Map<String, LabelCategory> labelCategories() {
        return this.labelCategories;
    }

    /**
     * Set the labelCategories property: Label categories of the job.
     *
     * @param labelCategories the labelCategories value to set.
     * @return the LabelingJob object itself.
     */
    public LabelingJob withLabelCategories(Map<String, LabelCategory> labelCategories) {
        this.labelCategories = labelCategories;
        return this;
    }

    /**
     * Get the jobInstructions property: Instructions for labeling job.
     *
     * @return the jobInstructions value.
     */
    public LabelingJobInstructions jobInstructions() {
        return this.jobInstructions;
    }

    /**
     * Set the jobInstructions property: Instructions for labeling job.
     *
     * @param jobInstructions the jobInstructions value to set.
     * @return the LabelingJob object itself.
     */
    public LabelingJob withJobInstructions(LabelingJobInstructions jobInstructions) {
        this.jobInstructions = jobInstructions;
        return this;
    }

    /**
     * Get the datasetConfiguration property: Labeling dataset configuration definition.
     *
     * @return the datasetConfiguration value.
     */
    public LabelingDatasetConfiguration datasetConfiguration() {
        return this.datasetConfiguration;
    }

    /**
     * Set the datasetConfiguration property: Labeling dataset configuration definition.
     *
     * @param datasetConfiguration the datasetConfiguration value to set.
     * @return the LabelingJob object itself.
     */
    public LabelingJob withDatasetConfiguration(LabelingDatasetConfiguration datasetConfiguration) {
        this.datasetConfiguration = datasetConfiguration;
        return this;
    }

    /**
     * Get the mlAssistConfiguration property: Labeling MLAssist configuration definition.
     *
     * @return the mlAssistConfiguration value.
     */
    public MLAssistConfiguration mlAssistConfiguration() {
        return this.mlAssistConfiguration;
    }

    /**
     * Set the mlAssistConfiguration property: Labeling MLAssist configuration definition.
     *
     * @param mlAssistConfiguration the mlAssistConfiguration value to set.
     * @return the LabelingJob object itself.
     */
    public LabelingJob withMlAssistConfiguration(MLAssistConfiguration mlAssistConfiguration) {
        this.mlAssistConfiguration = mlAssistConfiguration;
        return this;
    }

    /**
     * Get the labelingJobMediaProperties property: Properties of a labeling job.
     *
     * @return the labelingJobMediaProperties value.
     */
    public LabelingJobMediaProperties labelingJobMediaProperties() {
        return this.labelingJobMediaProperties;
    }

    /**
     * Set the labelingJobMediaProperties property: Properties of a labeling job.
     *
     * @param labelingJobMediaProperties the labelingJobMediaProperties value to set.
     * @return the LabelingJob object itself.
     */
    public LabelingJob withLabelingJobMediaProperties(LabelingJobMediaProperties labelingJobMediaProperties) {
        this.labelingJobMediaProperties = labelingJobMediaProperties;
        return this;
    }

    /**
     * Get the projectId property: Internal id of the job(Previously called project).
     *
     * @return the projectId value.
     */
    public UUID projectId() {
        return this.projectId;
    }

    /**
     * Set the projectId property: Internal id of the job(Previously called project).
     *
     * @param projectId the projectId value to set.
     * @return the LabelingJob object itself.
     */
    public LabelingJob withProjectId(UUID projectId) {
        this.projectId = projectId;
        return this;
    }

    /**
     * Get the status property: Status of the job.
     *
     * @return the status value.
     */
    public JobStatus status() {
        return this.status;
    }

    /**
     * Set the status property: Status of the job.
     *
     * @param status the status value to set.
     * @return the LabelingJob object itself.
     */
    public LabelingJob withStatus(JobStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the progressMetrics property: Progress metrics definition.
     *
     * @return the progressMetrics value.
     */
    public ProgressMetrics progressMetrics() {
        return this.progressMetrics;
    }

    /**
     * Set the progressMetrics property: Progress metrics definition.
     *
     * @param progressMetrics the progressMetrics value to set.
     * @return the LabelingJob object itself.
     */
    public LabelingJob withProgressMetrics(ProgressMetrics progressMetrics) {
        this.progressMetrics = progressMetrics;
        return this;
    }

    /**
     * Get the statusMessages property: Status messages of the job.
     *
     * @return the statusMessages value.
     */
    public List<StatusMessage> statusMessages() {
        return this.statusMessages;
    }

    /**
     * Set the statusMessages property: Status messages of the job.
     *
     * @param statusMessages the statusMessages value to set.
     * @return the LabelingJob object itself.
     */
    public LabelingJob withStatusMessages(List<StatusMessage> statusMessages) {
        this.statusMessages = statusMessages;
        return this;
    }

    /**
     * Get the createdTimeUtc property: Created time of the job in UTC timezone.
     *
     * @return the createdTimeUtc value.
     */
    public OffsetDateTime createdTimeUtc() {
        return this.createdTimeUtc;
    }

    /**
     * Set the createdTimeUtc property: Created time of the job in UTC timezone.
     *
     * @param createdTimeUtc the createdTimeUtc value to set.
     * @return the LabelingJob object itself.
     */
    public LabelingJob withCreatedTimeUtc(OffsetDateTime createdTimeUtc) {
        this.createdTimeUtc = createdTimeUtc;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public LabelingJob withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public LabelingJob withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public LabelingJob withProperties(Map<String, String> properties) {
        super.withProperties(properties);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (labelCategories() != null) {
            labelCategories()
                .values()
                .forEach(
                    e -> {
                        if (e != null) {
                            e.validate();
                        }
                    });
        }
        if (jobInstructions() != null) {
            jobInstructions().validate();
        }
        if (datasetConfiguration() != null) {
            datasetConfiguration().validate();
        }
        if (mlAssistConfiguration() != null) {
            mlAssistConfiguration().validate();
        }
        if (labelingJobMediaProperties() != null) {
            labelingJobMediaProperties().validate();
        }
        if (progressMetrics() != null) {
            progressMetrics().validate();
        }
        if (statusMessages() != null) {
            statusMessages().forEach(e -> e.validate());
        }
    }
}
