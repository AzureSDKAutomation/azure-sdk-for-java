// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearningservices.fluent.models.OnlineDeploymentTrackedResourceInner;
import com.azure.resourcemanager.machinelearningservices.models.DeploymentLogs;
import com.azure.resourcemanager.machinelearningservices.models.DeploymentLogsRequest;
import com.azure.resourcemanager.machinelearningservices.models.OnlineDeployment;
import com.azure.resourcemanager.machinelearningservices.models.OnlineDeploymentTrackedResource;
import com.azure.resourcemanager.machinelearningservices.models.PartialOnlineDeployment;
import com.azure.resourcemanager.machinelearningservices.models.PartialOnlineDeploymentPartialTrackedResource;
import com.azure.resourcemanager.machinelearningservices.models.ResourceIdentity;
import java.util.Collections;
import java.util.Map;

public final class OnlineDeploymentTrackedResourceImpl
    implements OnlineDeploymentTrackedResource,
        OnlineDeploymentTrackedResource.Definition,
        OnlineDeploymentTrackedResource.Update {
    private OnlineDeploymentTrackedResourceInner innerObject;

    private final com.azure.resourcemanager.machinelearningservices.MachineLearningServicesManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public ResourceIdentity identity() {
        return this.innerModel().identity();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public OnlineDeployment properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public OnlineDeploymentTrackedResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.machinelearningservices.MachineLearningServicesManager manager() {
        return this.serviceManager;
    }

    private String endpointName;

    private String deploymentName;

    private String resourceGroupName;

    private String workspaceName;

    private PartialOnlineDeploymentPartialTrackedResource updateBody;

    public OnlineDeploymentTrackedResourceImpl withExistingOnlineEndpoint(
        String endpointName, String resourceGroupName, String workspaceName) {
        this.endpointName = endpointName;
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public OnlineDeploymentTrackedResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOnlineDeployments()
                .createOrUpdate(
                    endpointName, deploymentName, resourceGroupName, workspaceName, this.innerModel(), Context.NONE);
        return this;
    }

    public OnlineDeploymentTrackedResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOnlineDeployments()
                .createOrUpdate(
                    endpointName, deploymentName, resourceGroupName, workspaceName, this.innerModel(), context);
        return this;
    }

    OnlineDeploymentTrackedResourceImpl(
        String name, com.azure.resourcemanager.machinelearningservices.MachineLearningServicesManager serviceManager) {
        this.innerObject = new OnlineDeploymentTrackedResourceInner();
        this.serviceManager = serviceManager;
        this.deploymentName = name;
    }

    public OnlineDeploymentTrackedResourceImpl update() {
        this.updateBody = new PartialOnlineDeploymentPartialTrackedResource();
        return this;
    }

    public OnlineDeploymentTrackedResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOnlineDeployments()
                .update(endpointName, deploymentName, resourceGroupName, workspaceName, updateBody, Context.NONE);
        return this;
    }

    public OnlineDeploymentTrackedResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOnlineDeployments()
                .update(endpointName, deploymentName, resourceGroupName, workspaceName, updateBody, context);
        return this;
    }

    OnlineDeploymentTrackedResourceImpl(
        OnlineDeploymentTrackedResourceInner innerObject,
        com.azure.resourcemanager.machinelearningservices.MachineLearningServicesManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.endpointName = Utils.getValueFromIdByName(innerObject.id(), "onlineEndpoints");
        this.deploymentName = Utils.getValueFromIdByName(innerObject.id(), "deployments");
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = Utils.getValueFromIdByName(innerObject.id(), "workspaces");
    }

    public OnlineDeploymentTrackedResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOnlineDeployments()
                .getWithResponse(endpointName, deploymentName, resourceGroupName, workspaceName, Context.NONE)
                .getValue();
        return this;
    }

    public OnlineDeploymentTrackedResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOnlineDeployments()
                .getWithResponse(endpointName, deploymentName, resourceGroupName, workspaceName, context)
                .getValue();
        return this;
    }

    public DeploymentLogs getLogs(DeploymentLogsRequest body) {
        return serviceManager
            .onlineDeployments()
            .getLogs(endpointName, deploymentName, resourceGroupName, workspaceName, body);
    }

    public Response<DeploymentLogs> getLogsWithResponse(DeploymentLogsRequest body, Context context) {
        return serviceManager
            .onlineDeployments()
            .getLogsWithResponse(endpointName, deploymentName, resourceGroupName, workspaceName, body, context);
    }

    public OnlineDeploymentTrackedResourceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public OnlineDeploymentTrackedResourceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public OnlineDeploymentTrackedResourceImpl withProperties(OnlineDeployment properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public OnlineDeploymentTrackedResourceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateBody.withTags(tags);
            return this;
        }
    }

    public OnlineDeploymentTrackedResourceImpl withIdentity(ResourceIdentity identity) {
        if (isInCreateMode()) {
            this.innerModel().withIdentity(identity);
            return this;
        } else {
            this.updateBody.withIdentity(identity);
            return this;
        }
    }

    public OnlineDeploymentTrackedResourceImpl withKind(String kind) {
        if (isInCreateMode()) {
            this.innerModel().withKind(kind);
            return this;
        } else {
            this.updateBody.withKind(kind);
            return this;
        }
    }

    public OnlineDeploymentTrackedResourceImpl withProperties(PartialOnlineDeployment properties) {
        this.updateBody.withProperties(properties);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
