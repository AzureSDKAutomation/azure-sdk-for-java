// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Class to represent configuration settings for Docker Build. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "dockerSpecificationType")
@JsonTypeName("Build")
@Fluent
public final class DockerBuild extends DockerSpecification {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DockerBuild.class);

    /*
     * Path to a snapshot of the Docker Context. This property is only valid if
     * Dockerfile is specified.
     * The path is relative to the asset path which must contain a single Blob
     * URI value.
     * <seealso
     * href="https://docs.docker.com/engine/context/working-with-contexts/" />
     */
    @JsonProperty(value = "context")
    private String context;

    /*
     * Docker command line instructions to assemble an image.
     * <seealso
     * href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments"
     * />
     */
    @JsonProperty(value = "dockerfile", required = true)
    private String dockerfile;

    /**
     * Get the context property: Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is
     * specified. The path is relative to the asset path which must contain a single Blob URI value. &lt;seealso
     * href="https://docs.docker.com/engine/context/working-with-contexts/" /&gt;.
     *
     * @return the context value.
     */
    public String context() {
        return this.context;
    }

    /**
     * Set the context property: Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is
     * specified. The path is relative to the asset path which must contain a single Blob URI value. &lt;seealso
     * href="https://docs.docker.com/engine/context/working-with-contexts/" /&gt;.
     *
     * @param context the context value to set.
     * @return the DockerBuild object itself.
     */
    public DockerBuild withContext(String context) {
        this.context = context;
        return this;
    }

    /**
     * Get the dockerfile property: Docker command line instructions to assemble an image. &lt;seealso
     * href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments" /&gt;.
     *
     * @return the dockerfile value.
     */
    public String dockerfile() {
        return this.dockerfile;
    }

    /**
     * Set the dockerfile property: Docker command line instructions to assemble an image. &lt;seealso
     * href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments" /&gt;.
     *
     * @param dockerfile the dockerfile value to set.
     * @return the DockerBuild object itself.
     */
    public DockerBuild withDockerfile(String dockerfile) {
        this.dockerfile = dockerfile;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public DockerBuild withPlatform(DockerImagePlatform platform) {
        super.withPlatform(platform);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (dockerfile() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property dockerfile in model DockerBuild"));
        }
    }
}
