// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The AzureMySqlSection model. */
@Fluent
public final class AzureMySqlSectionInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AzureMySqlSectionInner.class);

    /*
     * The credentials property.
     */
    @JsonProperty(value = "credentials", required = true)
    private DatastoreCredentialsInner credentials;

    /*
     * Azure SQL database name.
     */
    @JsonProperty(value = "databaseName", required = true)
    private String databaseName;

    /*
     * Azure cloud endpoint for the database.
     */
    @JsonProperty(value = "endpoint", required = true)
    private String endpoint;

    /*
     * Azure SQL server port.
     */
    @JsonProperty(value = "portNumber", required = true)
    private int portNumber;

    /*
     * Azure SQL server name.
     */
    @JsonProperty(value = "serverName", required = true)
    private String serverName;

    /**
     * Get the credentials property: The credentials property.
     *
     * @return the credentials value.
     */
    public DatastoreCredentialsInner credentials() {
        return this.credentials;
    }

    /**
     * Set the credentials property: The credentials property.
     *
     * @param credentials the credentials value to set.
     * @return the AzureMySqlSectionInner object itself.
     */
    public AzureMySqlSectionInner withCredentials(DatastoreCredentialsInner credentials) {
        this.credentials = credentials;
        return this;
    }

    /**
     * Get the databaseName property: Azure SQL database name.
     *
     * @return the databaseName value.
     */
    public String databaseName() {
        return this.databaseName;
    }

    /**
     * Set the databaseName property: Azure SQL database name.
     *
     * @param databaseName the databaseName value to set.
     * @return the AzureMySqlSectionInner object itself.
     */
    public AzureMySqlSectionInner withDatabaseName(String databaseName) {
        this.databaseName = databaseName;
        return this;
    }

    /**
     * Get the endpoint property: Azure cloud endpoint for the database.
     *
     * @return the endpoint value.
     */
    public String endpoint() {
        return this.endpoint;
    }

    /**
     * Set the endpoint property: Azure cloud endpoint for the database.
     *
     * @param endpoint the endpoint value to set.
     * @return the AzureMySqlSectionInner object itself.
     */
    public AzureMySqlSectionInner withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /**
     * Get the portNumber property: Azure SQL server port.
     *
     * @return the portNumber value.
     */
    public int portNumber() {
        return this.portNumber;
    }

    /**
     * Set the portNumber property: Azure SQL server port.
     *
     * @param portNumber the portNumber value to set.
     * @return the AzureMySqlSectionInner object itself.
     */
    public AzureMySqlSectionInner withPortNumber(int portNumber) {
        this.portNumber = portNumber;
        return this;
    }

    /**
     * Get the serverName property: Azure SQL server name.
     *
     * @return the serverName value.
     */
    public String serverName() {
        return this.serverName;
    }

    /**
     * Set the serverName property: Azure SQL server name.
     *
     * @param serverName the serverName value to set.
     * @return the AzureMySqlSectionInner object itself.
     */
    public AzureMySqlSectionInner withServerName(String serverName) {
        this.serverName = serverName;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (credentials() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property credentials in model AzureMySqlSectionInner"));
        } else {
            credentials().validate();
        }
        if (databaseName() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property databaseName in model AzureMySqlSectionInner"));
        }
        if (endpoint() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property endpoint in model AzureMySqlSectionInner"));
        }
        if (serverName() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property serverName in model AzureMySqlSectionInner"));
        }
    }
}
