// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearningservices.fluent.models.OnlineEndpointInner;
import com.azure.resourcemanager.machinelearningservices.fluent.models.OnlineEndpointTrackedResourceInner;
import java.util.Map;

/** An immutable client-side representation of OnlineEndpointTrackedResource. */
public interface OnlineEndpointTrackedResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the identity property: Service identity associated with a resource.
     *
     * @return the identity value.
     */
    ResourceIdentity identity();

    /**
     * Gets the kind property: The kind property.
     *
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the properties property: Additional attributes of the entity.
     *
     * @return the properties value.
     */
    OnlineEndpoint properties();

    /**
     * Gets the systemData property: System data associated with resource provider.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.machinelearningservices.fluent.models.OnlineEndpointTrackedResourceInner
     * object.
     *
     * @return the inner object.
     */
    OnlineEndpointTrackedResourceInner innerModel();

    /** The entirety of the OnlineEndpointTrackedResource definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithProperties,
            DefinitionStages.WithCreate {
    }
    /** The OnlineEndpointTrackedResource definition stages. */
    interface DefinitionStages {
        /** The first stage of the OnlineEndpointTrackedResource definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the OnlineEndpointTrackedResource definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }
        /** The stage of the OnlineEndpointTrackedResource definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, workspaceName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param workspaceName Name of Azure Machine Learning workspace.
             * @return the next definition stage.
             */
            WithProperties withExistingWorkspace(String resourceGroupName, String workspaceName);
        }
        /** The stage of the OnlineEndpointTrackedResource definition allowing to specify properties. */
        interface WithProperties {
            /**
             * Specifies the properties property: Additional attributes of the entity..
             *
             * @param properties Additional attributes of the entity.
             * @return the next definition stage.
             */
            WithCreate withProperties(OnlineEndpointInner properties);
        }
        /**
         * The stage of the OnlineEndpointTrackedResource definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags, DefinitionStages.WithIdentity, DefinitionStages.WithKind {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            OnlineEndpointTrackedResource create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            OnlineEndpointTrackedResource create(Context context);
        }
        /** The stage of the OnlineEndpointTrackedResource definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the OnlineEndpointTrackedResource definition allowing to specify identity. */
        interface WithIdentity {
            /**
             * Specifies the identity property: Service identity associated with a resource..
             *
             * @param identity Service identity associated with a resource.
             * @return the next definition stage.
             */
            WithCreate withIdentity(ResourceIdentity identity);
        }
        /** The stage of the OnlineEndpointTrackedResource definition allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: The kind property..
             *
             * @param kind The kind property.
             * @return the next definition stage.
             */
            WithCreate withKind(String kind);
        }
    }
    /**
     * Begins update for the OnlineEndpointTrackedResource resource.
     *
     * @return the stage of resource update.
     */
    OnlineEndpointTrackedResource.Update update();

    /** The template for OnlineEndpointTrackedResource update. */
    interface Update
        extends UpdateStages.WithTags, UpdateStages.WithIdentity, UpdateStages.WithKind, UpdateStages.WithProperties {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        OnlineEndpointTrackedResource apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        OnlineEndpointTrackedResource apply(Context context);
    }
    /** The OnlineEndpointTrackedResource update stages. */
    interface UpdateStages {
        /** The stage of the OnlineEndpointTrackedResource update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Dictionary of &lt;string&gt;.
             *
             * @param tags Dictionary of &lt;string&gt;.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the OnlineEndpointTrackedResource update allowing to specify identity. */
        interface WithIdentity {
            /**
             * Specifies the identity property: Service identity associated with a resource..
             *
             * @param identity Service identity associated with a resource.
             * @return the next definition stage.
             */
            Update withIdentity(ResourceIdentity identity);
        }
        /** The stage of the OnlineEndpointTrackedResource update allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: The kind property..
             *
             * @param kind The kind property.
             * @return the next definition stage.
             */
            Update withKind(String kind);
        }
        /** The stage of the OnlineEndpointTrackedResource update allowing to specify properties. */
        interface WithProperties {
            /**
             * Specifies the properties property: Additional attributes of the entity..
             *
             * @param properties Additional attributes of the entity.
             * @return the next definition stage.
             */
            Update withProperties(PartialOnlineEndpoint properties);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    OnlineEndpointTrackedResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    OnlineEndpointTrackedResource refresh(Context context);

    /**
     * List EndpointAuthKeys for an Endpoint using Key-based authentication.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return keys for endpoint authentication.
     */
    EndpointAuthKeys listKeys();

    /**
     * List EndpointAuthKeys for an Endpoint using Key-based authentication.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return keys for endpoint authentication.
     */
    Response<EndpointAuthKeys> listKeysWithResponse(Context context);

    /**
     * Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication (asynchronous).
     *
     * @param body RegenerateKeys request .
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void regenerateKeys(RegenerateEndpointKeysRequest body);

    /**
     * Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication (asynchronous).
     *
     * @param body RegenerateKeys request .
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void regenerateKeys(RegenerateEndpointKeysRequest body, Context context);

    /**
     * Retrieve a valid AAD token for an Endpoint using AMLToken-based authentication.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return service Token.
     */
    EndpointAuthToken getToken();

    /**
     * Retrieve a valid AAD token for an Endpoint using AMLToken-based authentication.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return service Token.
     */
    Response<EndpointAuthToken> getTokenWithResponse(Context context);
}
