// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.implementation;

import com.azure.resourcemanager.machinelearningservices.MachinelearningservicesManager;
import com.azure.resourcemanager.machinelearningservices.fluent.models.DatastoreCredentialsInner;
import com.azure.resourcemanager.machinelearningservices.models.AccountKeySection;
import com.azure.resourcemanager.machinelearningservices.models.CertificateSection;
import com.azure.resourcemanager.machinelearningservices.models.CredentialsType;
import com.azure.resourcemanager.machinelearningservices.models.DatastoreCredentials;
import com.azure.resourcemanager.machinelearningservices.models.SasSection;
import com.azure.resourcemanager.machinelearningservices.models.ServicePrincipalSection;
import com.azure.resourcemanager.machinelearningservices.models.SqlAdminSection;

public final class DatastoreCredentialsImpl implements DatastoreCredentials {
    private DatastoreCredentialsInner innerObject;

    private final MachinelearningservicesManager serviceManager;

    DatastoreCredentialsImpl(DatastoreCredentialsInner innerObject, MachinelearningservicesManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public CredentialsType type() {
        return this.innerModel().type();
    }

    public AccountKeySection accountKey() {
        return this.innerModel().accountKey();
    }

    public CertificateSection certificate() {
        return this.innerModel().certificate();
    }

    public SasSection sas() {
        return this.innerModel().sas();
    }

    public ServicePrincipalSection servicePrincipal() {
        return this.innerModel().servicePrincipal();
    }

    public SqlAdminSection sqlAdmin() {
        return this.innerModel().sqlAdmin();
    }

    public DatastoreCredentialsInner innerModel() {
        return this.innerObject;
    }

    private MachinelearningservicesManager manager() {
        return this.serviceManager;
    }
}
