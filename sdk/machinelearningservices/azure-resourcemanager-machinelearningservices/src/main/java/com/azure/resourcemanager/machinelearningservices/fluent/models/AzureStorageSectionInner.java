// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningservices.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The AzureStorageSection model. */
@Fluent
public final class AzureStorageSectionInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AzureStorageSectionInner.class);

    /*
     * Storage account name.
     */
    @JsonProperty(value = "accountName", required = true)
    private String accountName;

    /*
     * Blob storage cache timeout.
     */
    @JsonProperty(value = "blobCacheTimeout")
    private Integer blobCacheTimeout;

    /*
     * Storage account container name.
     */
    @JsonProperty(value = "containerName", required = true)
    private String containerName;

    /*
     * The credentials property.
     */
    @JsonProperty(value = "credentials", required = true)
    private DatastoreCredentialsInner credentials;

    /*
     * Azure cloud endpoint for the storage account.
     */
    @JsonProperty(value = "endpoint", required = true)
    private String endpoint;

    /*
     * Protocol used to communicate with the storage account.
     */
    @JsonProperty(value = "protocol", required = true)
    private String protocol;

    /**
     * Get the accountName property: Storage account name.
     *
     * @return the accountName value.
     */
    public String accountName() {
        return this.accountName;
    }

    /**
     * Set the accountName property: Storage account name.
     *
     * @param accountName the accountName value to set.
     * @return the AzureStorageSectionInner object itself.
     */
    public AzureStorageSectionInner withAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }

    /**
     * Get the blobCacheTimeout property: Blob storage cache timeout.
     *
     * @return the blobCacheTimeout value.
     */
    public Integer blobCacheTimeout() {
        return this.blobCacheTimeout;
    }

    /**
     * Set the blobCacheTimeout property: Blob storage cache timeout.
     *
     * @param blobCacheTimeout the blobCacheTimeout value to set.
     * @return the AzureStorageSectionInner object itself.
     */
    public AzureStorageSectionInner withBlobCacheTimeout(Integer blobCacheTimeout) {
        this.blobCacheTimeout = blobCacheTimeout;
        return this;
    }

    /**
     * Get the containerName property: Storage account container name.
     *
     * @return the containerName value.
     */
    public String containerName() {
        return this.containerName;
    }

    /**
     * Set the containerName property: Storage account container name.
     *
     * @param containerName the containerName value to set.
     * @return the AzureStorageSectionInner object itself.
     */
    public AzureStorageSectionInner withContainerName(String containerName) {
        this.containerName = containerName;
        return this;
    }

    /**
     * Get the credentials property: The credentials property.
     *
     * @return the credentials value.
     */
    public DatastoreCredentialsInner credentials() {
        return this.credentials;
    }

    /**
     * Set the credentials property: The credentials property.
     *
     * @param credentials the credentials value to set.
     * @return the AzureStorageSectionInner object itself.
     */
    public AzureStorageSectionInner withCredentials(DatastoreCredentialsInner credentials) {
        this.credentials = credentials;
        return this;
    }

    /**
     * Get the endpoint property: Azure cloud endpoint for the storage account.
     *
     * @return the endpoint value.
     */
    public String endpoint() {
        return this.endpoint;
    }

    /**
     * Set the endpoint property: Azure cloud endpoint for the storage account.
     *
     * @param endpoint the endpoint value to set.
     * @return the AzureStorageSectionInner object itself.
     */
    public AzureStorageSectionInner withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /**
     * Get the protocol property: Protocol used to communicate with the storage account.
     *
     * @return the protocol value.
     */
    public String protocol() {
        return this.protocol;
    }

    /**
     * Set the protocol property: Protocol used to communicate with the storage account.
     *
     * @param protocol the protocol value to set.
     * @return the AzureStorageSectionInner object itself.
     */
    public AzureStorageSectionInner withProtocol(String protocol) {
        this.protocol = protocol;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (accountName() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property accountName in model AzureStorageSectionInner"));
        }
        if (containerName() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property containerName in model AzureStorageSectionInner"));
        }
        if (credentials() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property credentials in model AzureStorageSectionInner"));
        } else {
            credentials().validate();
        }
        if (endpoint() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property endpoint in model AzureStorageSectionInner"));
        }
        if (protocol() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property protocol in model AzureStorageSectionInner"));
        }
    }
}
