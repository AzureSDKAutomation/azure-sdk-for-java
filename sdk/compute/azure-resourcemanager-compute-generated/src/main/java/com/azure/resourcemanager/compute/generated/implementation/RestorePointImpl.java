// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.compute.generated.ComputeManager;
import com.azure.resourcemanager.compute.generated.fluent.models.RestorePointInner;
import com.azure.resourcemanager.compute.generated.models.ApiEntityReference;
import com.azure.resourcemanager.compute.generated.models.ConsistencyModeTypes;
import com.azure.resourcemanager.compute.generated.models.RestorePoint;
import com.azure.resourcemanager.compute.generated.models.RestorePointProvisioningDetails;
import com.azure.resourcemanager.compute.generated.models.RestorePointSourceMetadata;
import java.util.Collections;
import java.util.List;

public final class RestorePointImpl implements RestorePoint, RestorePoint.Definition, RestorePoint.Update {
    private RestorePointInner innerObject;

    private final ComputeManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public Object optionalProperties() {
        return this.innerModel().optionalProperties();
    }

    public RestorePointSourceMetadata sourceMetadata() {
        return this.innerModel().sourceMetadata();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public ConsistencyModeTypes consistencyMode() {
        return this.innerModel().consistencyMode();
    }

    public RestorePointProvisioningDetails provisioningDetails() {
        return this.innerModel().provisioningDetails();
    }

    public List<ApiEntityReference> excludeDisks() {
        List<ApiEntityReference> inner = this.innerModel().excludeDisks();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public RestorePointInner innerModel() {
        return this.innerObject;
    }

    private ComputeManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String restorePointCollectionName;

    private String restorePointName;

    public RestorePointImpl withExistingRestorePointCollection(
        String resourceGroupName, String restorePointCollectionName) {
        this.resourceGroupName = resourceGroupName;
        this.restorePointCollectionName = restorePointCollectionName;
        return this;
    }

    public RestorePoint create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRestorePoints()
                .createOrUpdate(
                    resourceGroupName, restorePointCollectionName, restorePointName, this.innerModel(), Context.NONE);
        return this;
    }

    public RestorePoint create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRestorePoints()
                .createOrUpdate(
                    resourceGroupName, restorePointCollectionName, restorePointName, this.innerModel(), context);
        return this;
    }

    RestorePointImpl(String name, ComputeManager serviceManager) {
        this.innerObject = new RestorePointInner();
        this.serviceManager = serviceManager;
        this.restorePointName = name;
    }

    public RestorePointImpl update() {
        return this;
    }

    public RestorePoint apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRestorePoints()
                .createOrUpdate(
                    resourceGroupName, restorePointCollectionName, restorePointName, this.innerModel(), Context.NONE);
        return this;
    }

    public RestorePoint apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRestorePoints()
                .createOrUpdate(
                    resourceGroupName, restorePointCollectionName, restorePointName, this.innerModel(), context);
        return this;
    }

    RestorePointImpl(RestorePointInner innerObject, ComputeManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.restorePointCollectionName = Utils.getValueFromIdByName(innerObject.id(), "restorePointCollections");
        this.restorePointName = Utils.getValueFromIdByName(innerObject.id(), "restorePoints");
    }

    public RestorePoint refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRestorePoints()
                .getWithResponse(resourceGroupName, restorePointCollectionName, restorePointName, Context.NONE)
                .getValue();
        return this;
    }

    public RestorePoint refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRestorePoints()
                .getWithResponse(resourceGroupName, restorePointCollectionName, restorePointName, context)
                .getValue();
        return this;
    }

    public RestorePointImpl withOptionalProperties(Object optionalProperties) {
        this.innerModel().withOptionalProperties(optionalProperties);
        return this;
    }

    public RestorePointImpl withExcludeDisks(List<ApiEntityReference> excludeDisks) {
        this.innerModel().withExcludeDisks(excludeDisks);
        return this;
    }
}
