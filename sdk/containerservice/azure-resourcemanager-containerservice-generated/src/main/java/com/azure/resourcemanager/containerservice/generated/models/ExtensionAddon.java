// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.generated.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.containerservice.generated.fluent.models.ExtensionAddonInner;

/** An immutable client-side representation of ExtensionAddon. */
public interface ExtensionAddon {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the systemData property: The system metadata related to this resource.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: The current provisioning state of extension add-on.
     *
     * @return the provisioningState value.
     */
    ExtensionAddonProvisioningState provisioningState();

    /**
     * Gets the addonName property: Corresponding name if the add-on is also embedded in AKS.
     *
     * @return the addonName value.
     */
    String addonName();

    /**
     * Gets the enableManagedIdentity property: Whether managed identity is required for the extension add-on or not.
     *
     * @return the enableManagedIdentity value.
     */
    Boolean enableManagedIdentity();

    /**
     * Gets the identity property: Information of user assigned identity used by this add-on.
     *
     * @return the identity value.
     */
    ExtensionAddonPropertiesIdentity identity();

    /**
     * Gets the name property: The name of the resource that is unique within a resource group. This name can be used to
     * access the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: Resource type.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the inner com.azure.resourcemanager.containerservice.generated.fluent.models.ExtensionAddonInner object.
     *
     * @return the inner object.
     */
    ExtensionAddonInner innerModel();

    /** The entirety of the ExtensionAddon definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The ExtensionAddon definition stages. */
    interface DefinitionStages {
        /** The first stage of the ExtensionAddon definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the ExtensionAddon definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, resourceName.
             *
             * @param resourceGroupName The name of the resource group.
             * @param resourceName The name of the managed cluster resource.
             * @return the next definition stage.
             */
            WithCreate withExistingManagedCluster(String resourceGroupName, String resourceName);
        }
        /**
         * The stage of the ExtensionAddon definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithAddonName, DefinitionStages.WithEnableManagedIdentity {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ExtensionAddon create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ExtensionAddon create(Context context);
        }
        /** The stage of the ExtensionAddon definition allowing to specify addonName. */
        interface WithAddonName {
            /**
             * Specifies the addonName property: Corresponding name if the add-on is also embedded in AKS..
             *
             * @param addonName Corresponding name if the add-on is also embedded in AKS.
             * @return the next definition stage.
             */
            WithCreate withAddonName(String addonName);
        }
        /** The stage of the ExtensionAddon definition allowing to specify enableManagedIdentity. */
        interface WithEnableManagedIdentity {
            /**
             * Specifies the enableManagedIdentity property: Whether managed identity is required for the extension
             * add-on or not..
             *
             * @param enableManagedIdentity Whether managed identity is required for the extension add-on or not.
             * @return the next definition stage.
             */
            WithCreate withEnableManagedIdentity(Boolean enableManagedIdentity);
        }
    }
    /**
     * Begins update for the ExtensionAddon resource.
     *
     * @return the stage of resource update.
     */
    ExtensionAddon.Update update();

    /** The template for ExtensionAddon update. */
    interface Update extends UpdateStages.WithAddonName, UpdateStages.WithEnableManagedIdentity {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        ExtensionAddon apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ExtensionAddon apply(Context context);
    }
    /** The ExtensionAddon update stages. */
    interface UpdateStages {
        /** The stage of the ExtensionAddon update allowing to specify addonName. */
        interface WithAddonName {
            /**
             * Specifies the addonName property: Corresponding name if the add-on is also embedded in AKS..
             *
             * @param addonName Corresponding name if the add-on is also embedded in AKS.
             * @return the next definition stage.
             */
            Update withAddonName(String addonName);
        }
        /** The stage of the ExtensionAddon update allowing to specify enableManagedIdentity. */
        interface WithEnableManagedIdentity {
            /**
             * Specifies the enableManagedIdentity property: Whether managed identity is required for the extension
             * add-on or not..
             *
             * @param enableManagedIdentity Whether managed identity is required for the extension add-on or not.
             * @return the next definition stage.
             */
            Update withEnableManagedIdentity(Boolean enableManagedIdentity);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ExtensionAddon refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ExtensionAddon refresh(Context context);
}
