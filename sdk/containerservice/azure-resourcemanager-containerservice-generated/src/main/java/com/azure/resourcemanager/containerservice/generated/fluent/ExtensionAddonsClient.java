// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.generated.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.containerservice.generated.fluent.models.ExtensionAddonInner;

/** An instance of this class provides access to all the operations defined in ExtensionAddonsClient. */
public interface ExtensionAddonsClient {
    /**
     * Gets a list of extension add-ons in the specified managed cluster. The operation returns properties of each
     * extension add-on.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the managed cluster resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of extension add-ons in the specified managed cluster.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ExtensionAddonInner> listByManagedCluster(String resourceGroupName, String resourceName);

    /**
     * Gets a list of extension add-ons in the specified managed cluster. The operation returns properties of each
     * extension add-on.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the managed cluster resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of extension add-ons in the specified managed cluster.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ExtensionAddonInner> listByManagedCluster(
        String resourceGroupName, String resourceName, Context context);

    /**
     * Gets the details of the extension add-on in the specified managed cluster.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the managed cluster resource.
     * @param extensionAddonName The name of the extension add-on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the extension add-on in the specified managed cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExtensionAddonInner get(String resourceGroupName, String resourceName, String extensionAddonName);

    /**
     * Gets the details of the extension add-on in the specified managed cluster.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the managed cluster resource.
     * @param extensionAddonName The name of the extension add-on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the extension add-on in the specified managed cluster.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ExtensionAddonInner> getWithResponse(
        String resourceGroupName, String resourceName, String extensionAddonName, Context context);

    /**
     * Creates or updates an extension add-on in the specified managed cluster.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the managed cluster resource.
     * @param extensionAddonName The name of the extension add-on.
     * @param parameters Parameters supplied to the Create or Update an extension add-on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return extension add-on.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<ExtensionAddonInner>, ExtensionAddonInner> beginCreateOrUpdate(
        String resourceGroupName, String resourceName, String extensionAddonName, ExtensionAddonInner parameters);

    /**
     * Creates or updates an extension add-on in the specified managed cluster.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the managed cluster resource.
     * @param extensionAddonName The name of the extension add-on.
     * @param parameters Parameters supplied to the Create or Update an extension add-on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return extension add-on.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<ExtensionAddonInner>, ExtensionAddonInner> beginCreateOrUpdate(
        String resourceGroupName,
        String resourceName,
        String extensionAddonName,
        ExtensionAddonInner parameters,
        Context context);

    /**
     * Creates or updates an extension add-on in the specified managed cluster.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the managed cluster resource.
     * @param extensionAddonName The name of the extension add-on.
     * @param parameters Parameters supplied to the Create or Update an extension add-on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return extension add-on.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExtensionAddonInner createOrUpdate(
        String resourceGroupName, String resourceName, String extensionAddonName, ExtensionAddonInner parameters);

    /**
     * Creates or updates an extension add-on in the specified managed cluster.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the managed cluster resource.
     * @param extensionAddonName The name of the extension add-on.
     * @param parameters Parameters supplied to the Create or Update an extension add-on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return extension add-on.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ExtensionAddonInner createOrUpdate(
        String resourceGroupName,
        String resourceName,
        String extensionAddonName,
        ExtensionAddonInner parameters,
        Context context);

    /**
     * Deletes the extension add-on in the specified managed cluster.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the managed cluster resource.
     * @param extensionAddonName The name of the extension add-on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String resourceName, String extensionAddonName);

    /**
     * Deletes the extension add-on in the specified managed cluster.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the managed cluster resource.
     * @param extensionAddonName The name of the extension add-on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String resourceName, String extensionAddonName, Context context);

    /**
     * Deletes the extension add-on in the specified managed cluster.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the managed cluster resource.
     * @param extensionAddonName The name of the extension add-on.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String resourceName, String extensionAddonName);

    /**
     * Deletes the extension add-on in the specified managed cluster.
     *
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the managed cluster resource.
     * @param extensionAddonName The name of the extension add-on.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String resourceName, String extensionAddonName, Context context);
}
