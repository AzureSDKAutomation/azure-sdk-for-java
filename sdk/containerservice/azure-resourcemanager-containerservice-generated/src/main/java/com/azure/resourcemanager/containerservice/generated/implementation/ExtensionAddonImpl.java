// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.generated.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.containerservice.generated.fluent.models.ExtensionAddonInner;
import com.azure.resourcemanager.containerservice.generated.models.ExtensionAddon;
import com.azure.resourcemanager.containerservice.generated.models.ExtensionAddonPropertiesIdentity;
import com.azure.resourcemanager.containerservice.generated.models.ExtensionAddonProvisioningState;

public final class ExtensionAddonImpl implements ExtensionAddon, ExtensionAddon.Definition, ExtensionAddon.Update {
    private ExtensionAddonInner innerObject;

    private final com.azure.resourcemanager.containerservice.generated.ContainerServiceManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ExtensionAddonProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String addonName() {
        return this.innerModel().addonName();
    }

    public Boolean enableManagedIdentity() {
        return this.innerModel().enableManagedIdentity();
    }

    public ExtensionAddonPropertiesIdentity identity() {
        return this.innerModel().identity();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ExtensionAddonInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.containerservice.generated.ContainerServiceManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String resourceName;

    private String extensionAddonName;

    public ExtensionAddonImpl withExistingManagedCluster(String resourceGroupName, String resourceName) {
        this.resourceGroupName = resourceGroupName;
        this.resourceName = resourceName;
        return this;
    }

    public ExtensionAddon create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExtensionAddons()
                .createOrUpdate(resourceGroupName, resourceName, extensionAddonName, this.innerModel(), Context.NONE);
        return this;
    }

    public ExtensionAddon create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExtensionAddons()
                .createOrUpdate(resourceGroupName, resourceName, extensionAddonName, this.innerModel(), context);
        return this;
    }

    ExtensionAddonImpl(
        String name, com.azure.resourcemanager.containerservice.generated.ContainerServiceManager serviceManager) {
        this.innerObject = new ExtensionAddonInner();
        this.serviceManager = serviceManager;
        this.extensionAddonName = name;
    }

    public ExtensionAddonImpl update() {
        return this;
    }

    public ExtensionAddon apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExtensionAddons()
                .createOrUpdate(resourceGroupName, resourceName, extensionAddonName, this.innerModel(), Context.NONE);
        return this;
    }

    public ExtensionAddon apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExtensionAddons()
                .createOrUpdate(resourceGroupName, resourceName, extensionAddonName, this.innerModel(), context);
        return this;
    }

    ExtensionAddonImpl(
        ExtensionAddonInner innerObject,
        com.azure.resourcemanager.containerservice.generated.ContainerServiceManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.resourceName = Utils.getValueFromIdByName(innerObject.id(), "managedClusters");
        this.extensionAddonName = Utils.getValueFromIdByName(innerObject.id(), "extensionAddons");
    }

    public ExtensionAddon refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExtensionAddons()
                .getWithResponse(resourceGroupName, resourceName, extensionAddonName, Context.NONE)
                .getValue();
        return this;
    }

    public ExtensionAddon refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getExtensionAddons()
                .getWithResponse(resourceGroupName, resourceName, extensionAddonName, context)
                .getValue();
        return this;
    }

    public ExtensionAddonImpl withAddonName(String addonName) {
        this.innerModel().withAddonName(addonName);
        return this;
    }

    public ExtensionAddonImpl withEnableManagedIdentity(Boolean enableManagedIdentity) {
        this.innerModel().withEnableManagedIdentity(enableManagedIdentity);
        return this;
    }
}
