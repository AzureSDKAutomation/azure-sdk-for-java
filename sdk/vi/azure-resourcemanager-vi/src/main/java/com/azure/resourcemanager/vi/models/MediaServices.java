// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vi.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The media services details. */
@Fluent
public final class MediaServices {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(MediaServices.class);

    /*
     * The media services resource id
     */
    @JsonProperty(value = "resourceId")
    private String resourceId;

    /*
     * The managed identity resource ID when connecting to media services
     * resource
     */
    @JsonProperty(value = "identity")
    private ManagedServiceIdentity identity;

    /**
     * Get the resourceId property: The media services resource id.
     *
     * @return the resourceId value.
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resourceId property: The media services resource id.
     *
     * @param resourceId the resourceId value to set.
     * @return the MediaServices object itself.
     */
    public MediaServices withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the identity property: The managed identity resource ID when connecting to media services resource.
     *
     * @return the identity value.
     */
    public ManagedServiceIdentity identity() {
        return this.identity;
    }

    /**
     * Set the identity property: The managed identity resource ID when connecting to media services resource.
     *
     * @param identity the identity value to set.
     * @return the MediaServices object itself.
     */
    public MediaServices withIdentity(ManagedServiceIdentity identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (identity() != null) {
            identity().validate();
        }
    }
}
