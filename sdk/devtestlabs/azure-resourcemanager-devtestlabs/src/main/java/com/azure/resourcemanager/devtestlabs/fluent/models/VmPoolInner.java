// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.devtestlabs.models.GalleryImageReference;
import com.azure.resourcemanager.devtestlabs.models.StorageType;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Represents a VM Pool. */
@JsonFlatten
@Fluent
public class VmPoolInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(VmPoolInner.class);

    /*
     * The resource identifier (Microsoft.Compute) of the virtual machine scale
     * set
     */
    @JsonProperty(value = "properties.vmScalesetComputeId", access = JsonProperty.Access.WRITE_ONLY)
    private String vmScalesetComputeId;

    /*
     * The user name of the virtual machines in the vitual machine scale set
     */
    @JsonProperty(value = "properties.userName")
    private String username;

    /*
     * The administrator password of the virtual machines in the virtual
     * machine scale set
     */
    @JsonProperty(value = "properties.password")
    private String password;

    /*
     * The Microsoft Azure Marketplace image reference of the virtual machines
     * in the scale set
     */
    @JsonProperty(value = "properties.galleryImageReference")
    private GalleryImageReference galleryImageReference;

    /*
     * The number of instances in the virtual machine scale set
     */
    @JsonProperty(value = "properties.instanceCount")
    private Integer instanceCount;

    /*
     * The custom image used as a base for the virtual machines in the scale
     * set
     */
    @JsonProperty(value = "properties.customImageId")
    private String customImageId;

    /*
     * Storage account type used with custom image.
     */
    @JsonProperty(value = "properties.storageType")
    private StorageType storageType;

    /*
     * The size of the virtual machines in the scale set
     */
    @JsonProperty(value = "properties.size")
    private String size;

    /*
     * The lab subnet name of the virtual machines in the scale set
     */
    @JsonProperty(value = "properties.labSubnetName")
    private String labSubnetName;

    /*
     * The lab virtual network identifier of the virtual machines in the scale
     * set
     */
    @JsonProperty(value = "properties.labVirtualNetworkId")
    private String labVirtualNetworkId;

    /*
     * The provisioning status of the resource.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /*
     * The unique immutable identifier of a resource (Guid).
     */
    @JsonProperty(value = "properties.uniqueIdentifier", access = JsonProperty.Access.WRITE_ONLY)
    private String uniqueIdentifier;

    /**
     * Get the vmScalesetComputeId property: The resource identifier (Microsoft.Compute) of the virtual machine scale
     * set.
     *
     * @return the vmScalesetComputeId value.
     */
    public String vmScalesetComputeId() {
        return this.vmScalesetComputeId;
    }

    /**
     * Get the username property: The user name of the virtual machines in the vitual machine scale set.
     *
     * @return the username value.
     */
    public String username() {
        return this.username;
    }

    /**
     * Set the username property: The user name of the virtual machines in the vitual machine scale set.
     *
     * @param username the username value to set.
     * @return the VmPoolInner object itself.
     */
    public VmPoolInner withUsername(String username) {
        this.username = username;
        return this;
    }

    /**
     * Get the password property: The administrator password of the virtual machines in the virtual machine scale set.
     *
     * @return the password value.
     */
    public String password() {
        return this.password;
    }

    /**
     * Set the password property: The administrator password of the virtual machines in the virtual machine scale set.
     *
     * @param password the password value to set.
     * @return the VmPoolInner object itself.
     */
    public VmPoolInner withPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Get the galleryImageReference property: The Microsoft Azure Marketplace image reference of the virtual machines
     * in the scale set.
     *
     * @return the galleryImageReference value.
     */
    public GalleryImageReference galleryImageReference() {
        return this.galleryImageReference;
    }

    /**
     * Set the galleryImageReference property: The Microsoft Azure Marketplace image reference of the virtual machines
     * in the scale set.
     *
     * @param galleryImageReference the galleryImageReference value to set.
     * @return the VmPoolInner object itself.
     */
    public VmPoolInner withGalleryImageReference(GalleryImageReference galleryImageReference) {
        this.galleryImageReference = galleryImageReference;
        return this;
    }

    /**
     * Get the instanceCount property: The number of instances in the virtual machine scale set.
     *
     * @return the instanceCount value.
     */
    public Integer instanceCount() {
        return this.instanceCount;
    }

    /**
     * Set the instanceCount property: The number of instances in the virtual machine scale set.
     *
     * @param instanceCount the instanceCount value to set.
     * @return the VmPoolInner object itself.
     */
    public VmPoolInner withInstanceCount(Integer instanceCount) {
        this.instanceCount = instanceCount;
        return this;
    }

    /**
     * Get the customImageId property: The custom image used as a base for the virtual machines in the scale set.
     *
     * @return the customImageId value.
     */
    public String customImageId() {
        return this.customImageId;
    }

    /**
     * Set the customImageId property: The custom image used as a base for the virtual machines in the scale set.
     *
     * @param customImageId the customImageId value to set.
     * @return the VmPoolInner object itself.
     */
    public VmPoolInner withCustomImageId(String customImageId) {
        this.customImageId = customImageId;
        return this;
    }

    /**
     * Get the storageType property: Storage account type used with custom image.
     *
     * @return the storageType value.
     */
    public StorageType storageType() {
        return this.storageType;
    }

    /**
     * Set the storageType property: Storage account type used with custom image.
     *
     * @param storageType the storageType value to set.
     * @return the VmPoolInner object itself.
     */
    public VmPoolInner withStorageType(StorageType storageType) {
        this.storageType = storageType;
        return this;
    }

    /**
     * Get the size property: The size of the virtual machines in the scale set.
     *
     * @return the size value.
     */
    public String size() {
        return this.size;
    }

    /**
     * Set the size property: The size of the virtual machines in the scale set.
     *
     * @param size the size value to set.
     * @return the VmPoolInner object itself.
     */
    public VmPoolInner withSize(String size) {
        this.size = size;
        return this;
    }

    /**
     * Get the labSubnetName property: The lab subnet name of the virtual machines in the scale set.
     *
     * @return the labSubnetName value.
     */
    public String labSubnetName() {
        return this.labSubnetName;
    }

    /**
     * Set the labSubnetName property: The lab subnet name of the virtual machines in the scale set.
     *
     * @param labSubnetName the labSubnetName value to set.
     * @return the VmPoolInner object itself.
     */
    public VmPoolInner withLabSubnetName(String labSubnetName) {
        this.labSubnetName = labSubnetName;
        return this;
    }

    /**
     * Get the labVirtualNetworkId property: The lab virtual network identifier of the virtual machines in the scale
     * set.
     *
     * @return the labVirtualNetworkId value.
     */
    public String labVirtualNetworkId() {
        return this.labVirtualNetworkId;
    }

    /**
     * Set the labVirtualNetworkId property: The lab virtual network identifier of the virtual machines in the scale
     * set.
     *
     * @param labVirtualNetworkId the labVirtualNetworkId value to set.
     * @return the VmPoolInner object itself.
     */
    public VmPoolInner withLabVirtualNetworkId(String labVirtualNetworkId) {
        this.labVirtualNetworkId = labVirtualNetworkId;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the uniqueIdentifier property: The unique immutable identifier of a resource (Guid).
     *
     * @return the uniqueIdentifier value.
     */
    public String uniqueIdentifier() {
        return this.uniqueIdentifier;
    }

    /** {@inheritDoc} */
    @Override
    public VmPoolInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public VmPoolInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (galleryImageReference() != null) {
            galleryImageReference().validate();
        }
    }
}
