// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.devtestlabs.fluent.models.BastionHostInner;
import com.azure.resourcemanager.devtestlabs.models.BastionHost;
import java.util.Collections;
import java.util.Map;

public final class BastionHostImpl implements BastionHost, BastionHost.Definition, BastionHost.Update {
    private BastionHostInner innerObject;

    private final com.azure.resourcemanager.devtestlabs.DevTestLabsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String externalBastionHostId() {
        return this.innerModel().externalBastionHostId();
    }

    public String ipAddressId() {
        return this.innerModel().ipAddressId();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String uniqueIdentifier() {
        return this.innerModel().uniqueIdentifier();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public BastionHostInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.devtestlabs.DevTestLabsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String labName;

    private String virtualNetworkName;

    private String name;

    public BastionHostImpl withExistingVirtualnetwork(
        String resourceGroupName, String labName, String virtualNetworkName) {
        this.resourceGroupName = resourceGroupName;
        this.labName = labName;
        this.virtualNetworkName = virtualNetworkName;
        return this;
    }

    public BastionHost create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getBastionHosts()
                .createOrUpdate(resourceGroupName, labName, virtualNetworkName, name, this.innerModel(), Context.NONE);
        return this;
    }

    public BastionHost create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getBastionHosts()
                .createOrUpdate(resourceGroupName, labName, virtualNetworkName, name, this.innerModel(), context);
        return this;
    }

    BastionHostImpl(String name, com.azure.resourcemanager.devtestlabs.DevTestLabsManager serviceManager) {
        this.innerObject = new BastionHostInner();
        this.serviceManager = serviceManager;
        this.name = name;
    }

    public BastionHostImpl update() {
        return this;
    }

    public BastionHost apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getBastionHosts()
                .createOrUpdate(resourceGroupName, labName, virtualNetworkName, name, this.innerModel(), Context.NONE);
        return this;
    }

    public BastionHost apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getBastionHosts()
                .createOrUpdate(resourceGroupName, labName, virtualNetworkName, name, this.innerModel(), context);
        return this;
    }

    BastionHostImpl(
        BastionHostInner innerObject, com.azure.resourcemanager.devtestlabs.DevTestLabsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.labName = Utils.getValueFromIdByName(innerObject.id(), "labs");
        this.virtualNetworkName = Utils.getValueFromIdByName(innerObject.id(), "virtualnetworks");
        this.name = Utils.getValueFromIdByName(innerObject.id(), "bastionhosts");
    }

    public BastionHost refresh() {
        String localExpand = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getBastionHosts()
                .getWithResponse(resourceGroupName, labName, virtualNetworkName, name, localExpand, Context.NONE)
                .getValue();
        return this;
    }

    public BastionHost refresh(Context context) {
        String localExpand = null;
        this.innerObject =
            serviceManager
                .serviceClient()
                .getBastionHosts()
                .getWithResponse(resourceGroupName, labName, virtualNetworkName, name, localExpand, context)
                .getValue();
        return this;
    }

    public BastionHostImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public BastionHostImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public BastionHostImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }
}
