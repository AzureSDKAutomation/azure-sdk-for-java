// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.openai.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.openai.fluent.ResourceProvidersClient;
import com.azure.resourcemanager.openai.fluent.models.CheckNameAvailabilityResponseInner;
import com.azure.resourcemanager.openai.fluent.models.SkuAvailabilityListResultInner;
import com.azure.resourcemanager.openai.models.CheckNameAvailabilityRequest;
import com.azure.resourcemanager.openai.models.CheckNameAvailabilityResponse;
import com.azure.resourcemanager.openai.models.CheckSkuAvailabilityParameter;
import com.azure.resourcemanager.openai.models.ResourceProviders;
import com.azure.resourcemanager.openai.models.SkuAvailabilityListResult;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ResourceProvidersImpl implements ResourceProviders {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ResourceProvidersImpl.class);

    private final ResourceProvidersClient innerClient;

    private final com.azure.resourcemanager.openai.OpenAIManager serviceManager;

    public ResourceProvidersImpl(
        ResourceProvidersClient innerClient, com.azure.resourcemanager.openai.OpenAIManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public SkuAvailabilityListResult checkSkuAvailability(String location, CheckSkuAvailabilityParameter parameters) {
        SkuAvailabilityListResultInner inner = this.serviceClient().checkSkuAvailability(location, parameters);
        if (inner != null) {
            return new SkuAvailabilityListResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<SkuAvailabilityListResult> checkSkuAvailabilityWithResponse(
        String location, CheckSkuAvailabilityParameter parameters, Context context) {
        Response<SkuAvailabilityListResultInner> inner =
            this.serviceClient().checkSkuAvailabilityWithResponse(location, parameters, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new SkuAvailabilityListResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public CheckNameAvailabilityResponse checkNameAvailability(CheckNameAvailabilityRequest parameters) {
        CheckNameAvailabilityResponseInner inner = this.serviceClient().checkNameAvailability(parameters);
        if (inner != null) {
            return new CheckNameAvailabilityResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<CheckNameAvailabilityResponse> checkNameAvailabilityWithResponse(
        CheckNameAvailabilityRequest parameters, Context context) {
        Response<CheckNameAvailabilityResponseInner> inner =
            this.serviceClient().checkNameAvailabilityWithResponse(parameters, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new CheckNameAvailabilityResponseImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private ResourceProvidersClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.openai.OpenAIManager manager() {
        return this.serviceManager;
    }
}
