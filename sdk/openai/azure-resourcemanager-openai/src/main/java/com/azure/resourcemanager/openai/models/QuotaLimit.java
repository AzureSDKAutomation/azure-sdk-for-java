// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.openai.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The quota limit OpenAI account. */
@Fluent
public final class QuotaLimit {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(QuotaLimit.class);

    /*
     * The count value of quota Limit.
     */
    @JsonProperty(value = "count")
    private Float count;

    /*
     * The renewal period in seconds of quota Limit.
     */
    @JsonProperty(value = "renewalPeriod")
    private Float renewalPeriod;

    /*
     * The quota limit rules.
     */
    @JsonProperty(value = "rules")
    private List<ThrottlingRule> rules;

    /**
     * Get the count property: The count value of quota Limit.
     *
     * @return the count value.
     */
    public Float count() {
        return this.count;
    }

    /**
     * Set the count property: The count value of quota Limit.
     *
     * @param count the count value to set.
     * @return the QuotaLimit object itself.
     */
    public QuotaLimit withCount(Float count) {
        this.count = count;
        return this;
    }

    /**
     * Get the renewalPeriod property: The renewal period in seconds of quota Limit.
     *
     * @return the renewalPeriod value.
     */
    public Float renewalPeriod() {
        return this.renewalPeriod;
    }

    /**
     * Set the renewalPeriod property: The renewal period in seconds of quota Limit.
     *
     * @param renewalPeriod the renewalPeriod value to set.
     * @return the QuotaLimit object itself.
     */
    public QuotaLimit withRenewalPeriod(Float renewalPeriod) {
        this.renewalPeriod = renewalPeriod;
        return this;
    }

    /**
     * Get the rules property: The quota limit rules.
     *
     * @return the rules value.
     */
    public List<ThrottlingRule> rules() {
        return this.rules;
    }

    /**
     * Set the rules property: The quota limit rules.
     *
     * @param rules the rules value to set.
     * @return the QuotaLimit object itself.
     */
    public QuotaLimit withRules(List<ThrottlingRule> rules) {
        this.rules = rules;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (rules() != null) {
            rules().forEach(e -> e.validate());
        }
    }
}
