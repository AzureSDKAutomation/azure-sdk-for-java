// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.StorageClassificationInner;

/**
 * An instance of this class provides access to all the operations defined in ReplicationStorageClassificationsClient.
 */
public interface ReplicationStorageClassificationsClient {
    /**
     * Lists the storage classifications available in the specified fabric.
     *
     * @param fabricName Site name of interest.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of storage details.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<StorageClassificationInner> listByReplicationFabrics(String fabricName);

    /**
     * Lists the storage classifications available in the specified fabric.
     *
     * @param fabricName Site name of interest.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of storage details.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<StorageClassificationInner> listByReplicationFabrics(String fabricName, Context context);

    /**
     * Gets the details of the specified storage classification.
     *
     * @param fabricName Fabric name.
     * @param storageClassificationName Storage classification name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the specified storage classification.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    StorageClassificationInner get(String fabricName, String storageClassificationName);

    /**
     * Gets the details of the specified storage classification.
     *
     * @param fabricName Fabric name.
     * @param storageClassificationName Storage classification name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the specified storage classification.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<StorageClassificationInner> getWithResponse(
        String fabricName, String storageClassificationName, Context context);

    /**
     * Lists the storage classifications in the vault.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of storage details.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<StorageClassificationInner> list();

    /**
     * Lists the storage classifications in the vault.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of storage details.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<StorageClassificationInner> list(Context context);
}
