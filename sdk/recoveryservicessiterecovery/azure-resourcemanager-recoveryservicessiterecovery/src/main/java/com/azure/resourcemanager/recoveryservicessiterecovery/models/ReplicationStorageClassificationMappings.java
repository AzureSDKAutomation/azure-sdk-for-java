// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ReplicationStorageClassificationMappings. */
public interface ReplicationStorageClassificationMappings {
    /**
     * Lists the storage classification mappings for the fabric.
     *
     * @param fabricName Fabric name.
     * @param storageClassificationName Storage classification name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of storage mapping details.
     */
    PagedIterable<StorageClassificationMapping> listByReplicationStorageClassifications(
        String fabricName, String storageClassificationName);

    /**
     * Lists the storage classification mappings for the fabric.
     *
     * @param fabricName Fabric name.
     * @param storageClassificationName Storage classification name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of storage mapping details.
     */
    PagedIterable<StorageClassificationMapping> listByReplicationStorageClassifications(
        String fabricName, String storageClassificationName, Context context);

    /**
     * Gets the details of the specified storage classification mapping.
     *
     * @param fabricName Fabric name.
     * @param storageClassificationName Storage classification name.
     * @param storageClassificationMappingName Storage classification mapping name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the specified storage classification mapping.
     */
    StorageClassificationMapping get(
        String fabricName, String storageClassificationName, String storageClassificationMappingName);

    /**
     * Gets the details of the specified storage classification mapping.
     *
     * @param fabricName Fabric name.
     * @param storageClassificationName Storage classification name.
     * @param storageClassificationMappingName Storage classification mapping name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the specified storage classification mapping.
     */
    Response<StorageClassificationMapping> getWithResponse(
        String fabricName, String storageClassificationName, String storageClassificationMappingName, Context context);

    /**
     * The operation to delete a storage classification mapping.
     *
     * @param fabricName Fabric name.
     * @param storageClassificationName Storage classification name.
     * @param storageClassificationMappingName Storage classification mapping name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String fabricName, String storageClassificationName, String storageClassificationMappingName);

    /**
     * The operation to delete a storage classification mapping.
     *
     * @param fabricName Fabric name.
     * @param storageClassificationName Storage classification name.
     * @param storageClassificationMappingName Storage classification mapping name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(
        String fabricName, String storageClassificationName, String storageClassificationMappingName, Context context);

    /**
     * Lists the storage classification mappings in the vault.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of storage mapping details.
     */
    PagedIterable<StorageClassificationMapping> list();

    /**
     * Lists the storage classification mappings in the vault.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of storage mapping details.
     */
    PagedIterable<StorageClassificationMapping> list(Context context);

    /**
     * Gets the details of the specified storage classification mapping.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the specified storage classification mapping.
     */
    StorageClassificationMapping getById(String id);

    /**
     * Gets the details of the specified storage classification mapping.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of the specified storage classification mapping.
     */
    Response<StorageClassificationMapping> getByIdWithResponse(String id, Context context);

    /**
     * The operation to delete a storage classification mapping.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * The operation to delete a storage classification mapping.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new StorageClassificationMapping resource.
     *
     * @param name resource name.
     * @return the first stage of the new StorageClassificationMapping definition.
     */
    StorageClassificationMapping.DefinitionStages.Blank define(String name);
}
