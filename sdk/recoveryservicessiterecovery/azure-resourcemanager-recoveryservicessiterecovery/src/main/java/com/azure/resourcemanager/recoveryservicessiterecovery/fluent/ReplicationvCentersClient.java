// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.recoveryservicessiterecovery.fluent.models.VCenterInner;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.AddVCenterRequest;
import com.azure.resourcemanager.recoveryservicessiterecovery.models.UpdateVCenterRequest;

/** An instance of this class provides access to all the operations defined in ReplicationvCentersClient. */
public interface ReplicationvCentersClient {
    /**
     * Lists the vCenter servers registered in a fabric.
     *
     * @param fabricName Fabric name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of vCenter details.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VCenterInner> listByReplicationFabrics(String fabricName);

    /**
     * Lists the vCenter servers registered in a fabric.
     *
     * @param fabricName Fabric name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of vCenter details.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VCenterInner> listByReplicationFabrics(String fabricName, Context context);

    /**
     * Gets the details of a registered vCenter server(Add vCenter server.).
     *
     * @param fabricName Fabric name.
     * @param vCenterName vCenter name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of a registered vCenter server(Add vCenter server.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VCenterInner get(String fabricName, String vCenterName);

    /**
     * Gets the details of a registered vCenter server(Add vCenter server.).
     *
     * @param fabricName Fabric name.
     * @param vCenterName vCenter name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of a registered vCenter server(Add vCenter server.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<VCenterInner> getWithResponse(String fabricName, String vCenterName, Context context);

    /**
     * The operation to create a vCenter object..
     *
     * @param fabricName Fabric name.
     * @param vCenterName vCenter name.
     * @param addVCenterRequest Input required to add vCenter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return vCenter definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<VCenterInner>, VCenterInner> beginCreate(
        String fabricName, String vCenterName, AddVCenterRequest addVCenterRequest);

    /**
     * The operation to create a vCenter object..
     *
     * @param fabricName Fabric name.
     * @param vCenterName vCenter name.
     * @param addVCenterRequest Input required to add vCenter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return vCenter definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<VCenterInner>, VCenterInner> beginCreate(
        String fabricName, String vCenterName, AddVCenterRequest addVCenterRequest, Context context);

    /**
     * The operation to create a vCenter object..
     *
     * @param fabricName Fabric name.
     * @param vCenterName vCenter name.
     * @param addVCenterRequest Input required to add vCenter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return vCenter definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VCenterInner create(String fabricName, String vCenterName, AddVCenterRequest addVCenterRequest);

    /**
     * The operation to create a vCenter object..
     *
     * @param fabricName Fabric name.
     * @param vCenterName vCenter name.
     * @param addVCenterRequest Input required to add vCenter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return vCenter definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VCenterInner create(String fabricName, String vCenterName, AddVCenterRequest addVCenterRequest, Context context);

    /**
     * The operation to remove(unregister) a registered vCenter server from the vault.
     *
     * @param fabricName Fabric name.
     * @param vCenterName vCenter name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(String fabricName, String vCenterName);

    /**
     * The operation to remove(unregister) a registered vCenter server from the vault.
     *
     * @param fabricName Fabric name.
     * @param vCenterName vCenter name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<Void>, Void> beginDelete(String fabricName, String vCenterName, Context context);

    /**
     * The operation to remove(unregister) a registered vCenter server from the vault.
     *
     * @param fabricName Fabric name.
     * @param vCenterName vCenter name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String fabricName, String vCenterName);

    /**
     * The operation to remove(unregister) a registered vCenter server from the vault.
     *
     * @param fabricName Fabric name.
     * @param vCenterName vCenter name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String fabricName, String vCenterName, Context context);

    /**
     * The operation to update a registered vCenter.
     *
     * @param fabricName Fabric name.
     * @param vCenterName vCenter name.
     * @param updateVCenterRequest Input required to update vCenter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return vCenter definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<VCenterInner>, VCenterInner> beginUpdate(
        String fabricName, String vCenterName, UpdateVCenterRequest updateVCenterRequest);

    /**
     * The operation to update a registered vCenter.
     *
     * @param fabricName Fabric name.
     * @param vCenterName vCenter name.
     * @param updateVCenterRequest Input required to update vCenter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return vCenter definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<VCenterInner>, VCenterInner> beginUpdate(
        String fabricName, String vCenterName, UpdateVCenterRequest updateVCenterRequest, Context context);

    /**
     * The operation to update a registered vCenter.
     *
     * @param fabricName Fabric name.
     * @param vCenterName vCenter name.
     * @param updateVCenterRequest Input required to update vCenter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return vCenter definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VCenterInner update(String fabricName, String vCenterName, UpdateVCenterRequest updateVCenterRequest);

    /**
     * The operation to update a registered vCenter.
     *
     * @param fabricName Fabric name.
     * @param vCenterName vCenter name.
     * @param updateVCenterRequest Input required to update vCenter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return vCenter definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    VCenterInner update(
        String fabricName, String vCenterName, UpdateVCenterRequest updateVCenterRequest, Context context);

    /**
     * Lists the vCenter servers registered in the vault.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of vCenter details.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VCenterInner> list();

    /**
     * Lists the vCenter servers registered in the vault.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of vCenter details.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<VCenterInner> list(Context context);
}
