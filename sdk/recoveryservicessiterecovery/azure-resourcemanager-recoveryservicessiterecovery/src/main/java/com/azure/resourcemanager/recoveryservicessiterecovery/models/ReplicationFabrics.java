// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ReplicationFabrics. */
public interface ReplicationFabrics {
    /**
     * Gets a list of the Azure Site Recovery fabrics in the vault.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of the Azure Site Recovery fabrics in the vault.
     */
    PagedIterable<Fabric> list();

    /**
     * Gets a list of the Azure Site Recovery fabrics in the vault.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of the Azure Site Recovery fabrics in the vault.
     */
    PagedIterable<Fabric> list(Context context);

    /**
     * Gets the details of an Azure Site Recovery fabric.
     *
     * @param fabricName Fabric name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of an Azure Site Recovery fabric.
     */
    Fabric get(String fabricName);

    /**
     * Gets the details of an Azure Site Recovery fabric.
     *
     * @param fabricName Fabric name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of an Azure Site Recovery fabric.
     */
    Response<Fabric> getWithResponse(String fabricName, Context context);

    /**
     * The operation to purge(force delete) an Azure Site Recovery fabric.
     *
     * @param fabricName ASR fabric to purge.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void purge(String fabricName);

    /**
     * The operation to purge(force delete) an Azure Site Recovery fabric.
     *
     * @param fabricName ASR fabric to purge.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void purge(String fabricName, Context context);

    /**
     * The operation to perform a consistency check on the fabric.
     *
     * @param fabricName Fabric name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric definition.
     */
    Fabric checkConsistency(String fabricName);

    /**
     * The operation to perform a consistency check on the fabric.
     *
     * @param fabricName Fabric name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric definition.
     */
    Fabric checkConsistency(String fabricName, Context context);

    /**
     * The operation to migrate an Azure Site Recovery fabric to AAD.
     *
     * @param fabricName ASR fabric to migrate.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void migrateToAad(String fabricName);

    /**
     * The operation to migrate an Azure Site Recovery fabric to AAD.
     *
     * @param fabricName ASR fabric to migrate.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void migrateToAad(String fabricName, Context context);

    /**
     * The operation to move replications from a process server to another process server.
     *
     * @param fabricName The name of the fabric containing the process server.
     * @param failoverProcessServerRequest Request to failover a process server.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric definition.
     */
    Fabric reassociateGateway(String fabricName, FailoverProcessServerRequest failoverProcessServerRequest);

    /**
     * The operation to move replications from a process server to another process server.
     *
     * @param fabricName The name of the fabric containing the process server.
     * @param failoverProcessServerRequest Request to failover a process server.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric definition.
     */
    Fabric reassociateGateway(
        String fabricName, FailoverProcessServerRequest failoverProcessServerRequest, Context context);

    /**
     * The operation to delete or remove an Azure Site Recovery fabric.
     *
     * @param fabricName ASR fabric to delete.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String fabricName);

    /**
     * The operation to delete or remove an Azure Site Recovery fabric.
     *
     * @param fabricName ASR fabric to delete.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String fabricName, Context context);

    /**
     * Renews the connection certificate for the ASR replication fabric.
     *
     * @param fabricName fabric name to renew certs for.
     * @param renewCertificate Certificate renewal input.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric definition.
     */
    Fabric renewCertificate(String fabricName, RenewCertificateInput renewCertificate);

    /**
     * Renews the connection certificate for the ASR replication fabric.
     *
     * @param fabricName fabric name to renew certs for.
     * @param renewCertificate Certificate renewal input.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric definition.
     */
    Fabric renewCertificate(String fabricName, RenewCertificateInput renewCertificate, Context context);

    /**
     * Gets the details of an Azure Site Recovery fabric.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of an Azure Site Recovery fabric.
     */
    Fabric getById(String id);

    /**
     * Gets the details of an Azure Site Recovery fabric.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the details of an Azure Site Recovery fabric.
     */
    Response<Fabric> getByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Fabric resource.
     *
     * @param name resource name.
     * @return the first stage of the new Fabric definition.
     */
    Fabric.DefinitionStages.Blank define(String name);
}
