// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.recoveryservicessiterecovery.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** VMwareCbt container mapping input. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "instanceType")
@JsonTypeName("VMwareCbt")
@Fluent
public final class VMwareCbtContainerMappingInput extends ReplicationProviderSpecificContainerMappingInput {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(VMwareCbtContainerMappingInput.class);

    /*
     * The storage account ARM Id.
     */
    @JsonProperty(value = "storageAccountId", required = true)
    private String storageAccountId;

    /*
     * The target location.
     */
    @JsonProperty(value = "targetLocation", required = true)
    private String targetLocation;

    /**
     * Get the storageAccountId property: The storage account ARM Id.
     *
     * @return the storageAccountId value.
     */
    public String storageAccountId() {
        return this.storageAccountId;
    }

    /**
     * Set the storageAccountId property: The storage account ARM Id.
     *
     * @param storageAccountId the storageAccountId value to set.
     * @return the VMwareCbtContainerMappingInput object itself.
     */
    public VMwareCbtContainerMappingInput withStorageAccountId(String storageAccountId) {
        this.storageAccountId = storageAccountId;
        return this;
    }

    /**
     * Get the targetLocation property: The target location.
     *
     * @return the targetLocation value.
     */
    public String targetLocation() {
        return this.targetLocation;
    }

    /**
     * Set the targetLocation property: The target location.
     *
     * @param targetLocation the targetLocation value to set.
     * @return the VMwareCbtContainerMappingInput object itself.
     */
    public VMwareCbtContainerMappingInput withTargetLocation(String targetLocation) {
        this.targetLocation = targetLocation;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (storageAccountId() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property storageAccountId in model VMwareCbtContainerMappingInput"));
        }
        if (targetLocation() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property targetLocation in model VMwareCbtContainerMappingInput"));
        }
    }
}
