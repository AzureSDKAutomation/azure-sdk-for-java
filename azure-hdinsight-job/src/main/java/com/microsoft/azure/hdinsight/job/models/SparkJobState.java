/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.hdinsight.job.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The SparkJobState model.
 */
public class SparkJobState {
    /**
     * The livy id of the spark job.
     */
    @JsonProperty(value = "id")
    private Integer id;

    /**
     * The current state of the spark job. Possible values include:
     * 'not_started', 'starting', 'idle', 'running', 'busy', 'shutting_down',
     * 'error', 'dead', 'killed', 'success', 'recovering'.
     */
    @JsonProperty(value = "state")
    private JobState state;

    /**
     * Get the livy id of the spark job.
     *
     * @return the id value
     */
    public Integer id() {
        return this.id;
    }

    /**
     * Set the livy id of the spark job.
     *
     * @param id the id value to set
     * @return the SparkJobState object itself.
     */
    public SparkJobState withId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Get the current state of the spark job. Possible values include: 'not_started', 'starting', 'idle', 'running', 'busy', 'shutting_down', 'error', 'dead', 'killed', 'success', 'recovering'.
     *
     * @return the state value
     */
    public JobState state() {
        return this.state;
    }

    /**
     * Set the current state of the spark job. Possible values include: 'not_started', 'starting', 'idle', 'running', 'busy', 'shutting_down', 'error', 'dead', 'killed', 'success', 'recovering'.
     *
     * @param state the state value to set
     * @return the SparkJobState object itself.
     */
    public SparkJobState withState(JobState state) {
        this.state = state;
        return this;
    }

}
